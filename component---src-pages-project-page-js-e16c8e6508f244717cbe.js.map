{"version":3,"file":"component---src-pages-project-page-js-e16c8e6508f244717cbe.js","mappings":"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","sources":["webpack://myweb3course/./src/components/projects/project-card.js","webpack://myweb3course/./src/components/projects/projects-view.js","webpack://myweb3course/./src/components/projects/project-management.js","webpack://myweb3course/./src/pages/project-page.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useStaticQuery } from \"gatsby\";\r\nimport YoutubeImage from \"../image/youtube-image.js\";\r\nimport he from \"he\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faTrashAlt,\r\n  faUserPlus,\r\n  faUserTimes,\r\n  faSave,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNamesFromEmail } from \"../../utils/string/string\";\r\nimport { useProjectData } from \"../context/projects/project-data-context\";\r\nimport ContentEditable from \"../content-editable/content-editable.js\";\r\n\r\nconst ProjectCard = ({ project, setFilteredContents }) => {\r\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\r\n  const [isPublic, setIsPublic] = useState(project.isPublic);\r\n  const [projectUpdateState, setProjectUpdateState] = useState({});\r\n  // Get state management functions from the provider\r\n  const {\r\n    deleteOneProject,\r\n    updateProjectData,\r\n    addMemberToProject,\r\n    deleteMemberFromProject,\r\n    updateProject,\r\n    userData,\r\n    projectGroupData,\r\n    projectData,\r\n  } = useProjectData();\r\n  // Deal with events\r\n  const onProjectDelete = async () => {\r\n    //console.log(\"projectId: endpoint:\", \"DELETE /api/projects/\" + projectId);\r\n    await deleteOneProject(project);\r\n    await updateProjectData(project.projectGroupName);\r\n    setFilteredContents(undefined);\r\n  };\r\n\r\n  const onAddMemberToProject = async () => {\r\n    const updatedProject = await addMemberToProject(project);\r\n    console.log(\"onAddMemberToProject:\", updatedProject);\r\n    if (updateProjectData) {\r\n      await updateProjectData(project.projectGroupName);\r\n      setFilteredContents(undefined);\r\n    }\r\n  };\r\n\r\n  const onDeleteMemberFromProject = async () => {\r\n    const updatedProject = await deleteMemberFromProject(project);\r\n    console.log(\"onDeleteMemberFromProject:\", updatedProject);\r\n    if (updateProjectData) {\r\n      await updateProjectData(project.projectGroupName);\r\n      setFilteredContents(undefined);\r\n    }\r\n  };\r\n\r\n  const onProjectUpdateRequest = () => {\r\n    setIsBeingEdited(true);\r\n  };\r\n\r\n  const onQuitProjectUpdateRequest = () => {\r\n    setIsBeingEdited(false);\r\n    // clear the update state\r\n    setProjectUpdateState({});\r\n  };\r\n\r\n  const onProjectSave = async () => {\r\n    // save the updated state via the API\r\n    if (projectUpdateState) {\r\n      const updatedProject = await updateProject(\r\n        projectUpdateState,\r\n        project._id\r\n      );\r\n      // clear the project update state\r\n      setProjectUpdateState({});\r\n      setIsBeingEdited(false);\r\n      // re-render all projects\r\n      if (updatedProject) {\r\n        await updateProjectData(project.projectGroupName);\r\n        setFilteredContents(undefined);\r\n      }\r\n    }\r\n  };\r\n\r\n  // deal with modification of content\r\n  const handleChange = (propChanged) => {\r\n    // update the projectState\r\n    setProjectUpdateState((previousState) => {\r\n      return { ...previousState, ...propChanged };\r\n    });\r\n  };\r\n\r\n  const onSetPublic = (e) => {\r\n    setIsPublic(!isPublic);\r\n    setProjectUpdateState({\r\n      ...projectUpdateState,\r\n      ...{ isPublic: !isPublic },\r\n    });\r\n  };\r\n\r\n  console.log(\"projStateUpdated:\", projectUpdateState);\r\n\r\n  if (!project) return null;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"index__card\" + (isBeingEdited ? \" index__card--is-being-edited\" : \"\")\r\n      }\r\n      key={project.shortId}\r\n      id={project.shortId}\r\n    >\r\n      <div className=\"index__card__header\">\r\n        <span>{\"Projet NÂ° \" + project.shortId + \" : \"}</span>\r\n        <ContentEditable\r\n          isBeingEdited={isBeingEdited}\r\n          id=\"name\"\r\n          onChange={handleChange}\r\n          startContent={project.name}\r\n          isInline\r\n        />\r\n      </div>\r\n\r\n      <div className=\"index__card__description\">\r\n        {\r\n          /* DELETE icon only if user isAdmin (admin or manager) */\r\n          userData.isAdmin && (\r\n            <FontAwesomeIcon icon={faTrashAlt} onClick={onProjectDelete} />\r\n          )\r\n        }\r\n\r\n        {\r\n          /* UPDATE PROJECT : visible only if \r\n          (user is Admin (admin or manager) OR\r\n          user is a member of this project AND \r\n          project group status is not \"end\" ) AND\r\n          project is not being edited\r\n          */\r\n          (userData.isAdmin ||\r\n            (project.projectMembers.includes(userData.userName) &&\r\n              projectGroupData.status !== \"end\")) &&\r\n          !isBeingEdited ? (\r\n            <FontAwesomeIcon icon={faEdit} onClick={onProjectUpdateRequest} />\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n\r\n        {\r\n          /* ADD MEMBER TO PROJECT : Visible only if :\r\n        project group status is \"init\" AND\r\n        userName has not already joined a project AND\r\n        number of members is < maximum number */\r\n          projectGroupData.status === \"init\" &&\r\n            !projectData.find((project) =>\r\n              project.projectMembers.includes(userData.userName)\r\n            ) &&\r\n            project.projectMembers.length <\r\n              projectGroupData.maximumProjectMembers && (\r\n              <FontAwesomeIcon\r\n                icon={faUserPlus}\r\n                onClick={onAddMemberToProject}\r\n              />\r\n            )\r\n        }\r\n        {\r\n          /*REMOVE MEMBER FROM PROJECT : Visible only if :\r\n        project group status is \"init\" AND\r\n        userName is already a member of this project\r\n        */\r\n          projectGroupData.status === \"init\" &&\r\n            project.projectMembers.includes(userData.userName) && (\r\n              <FontAwesomeIcon\r\n                icon={faUserTimes}\r\n                onClick={onDeleteMemberFromProject}\r\n              />\r\n            )\r\n        }\r\n        {\r\n          /*SAVE PROJECT : Visible only if :\r\n        project is being edited       \r\n        */\r\n          isBeingEdited && (\r\n            <FontAwesomeIcon icon={faSave} onClick={onProjectSave} />\r\n          )\r\n        }\r\n\r\n        {\r\n          /*QUIT PROJECT UPDATE: Visible only if :\r\n        project is being edited       \r\n        */\r\n          isBeingEdited && (\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              onClick={onQuitProjectUpdateRequest}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.description !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Description</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"description\"\r\n              startContent={project.description}\r\n              onChange={handleChange}\r\n            />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.presentationUrl !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">\r\n              VidÃ©o de prÃ©sentation\r\n            </div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"presentationUrl\"\r\n              startContent={project.presentationUrl}\r\n              onChange={handleChange}\r\n            >\r\n              <YoutubeImage src={project.presentationUrl} />\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.frontendProductionUrl !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">URL du site</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"frontendProductionUrl\"\r\n              startContent={project.frontendProductionUrl}\r\n              onChange={handleChange}\r\n            >\r\n              <a href={project.frontendProductionUrl} target=\"_blank\">\r\n                {project.frontendProductionUrl}\r\n              </a>\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.frontendRepo !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Repo frontend</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"frontendRepo\"\r\n              startContent={project.frontendRepo}\r\n              onChange={handleChange}\r\n            >\r\n              <a href={project.frontendRepo} target=\"_blank\">\r\n                {project.frontendRepo}\r\n              </a>\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.backendRepo !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Repo backend</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"backendRepo\"\r\n              startContent={project.backendRepo}\r\n              onChange={handleChange}\r\n            >\r\n              <a href={project.backendRepo} target=\"_blank\">\r\n                {project.backendRepo}\r\n              </a>\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      {/* Deal with project members */}\r\n      <div className=\"index__card__content\">\r\n        {project.projectMembers !== undefined &&\r\n        project.projectMembers.length > 0 ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Membres du projet</div>\r\n            <div className=\"index__card__content__description\">\r\n              {project.projectMembers\r\n                .map((member) => getNamesFromEmail(member))\r\n                .join(\", \")}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.isPublic !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Public ?</div>\r\n            <div className=\"index__card__content__description\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isPublic}\r\n                disabled={isBeingEdited ? false : true}\r\n                onClick={onSetPublic}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport { Link, useStaticQuery } from \"gatsby\";\r\nimport YoutubeImage from \"../image/youtube-image.js\";\r\nimport ProjectCard from \"./project-card.js\";\r\nimport he from \"he\";\r\n\r\nconst ProjectsView = ({ projects , setFilteredContents}) => {\r\n  console.log(\"PROJECTSVIEW\", projects);\r\n  if (!projects || projects.length <= 0) return null;\r\n\r\n  return (\r\n    <>\r\n      {projects.map((project) => (\r\n        <ProjectCard {...{ project, setFilteredContents }} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProjectsView from \"./projects-view\";\r\nimport Spinner from \"../spinner/spinner\";\r\n\r\nimport { useProjectData } from \"../context/projects/project-data-context\";\r\n\r\nconst ProjectManagement = ({associatedProjectGroupName}) => {\r\n  // Get state from the provider\r\n  const {\r\n    projectGroupData,\r\n    updateProjectGroupData,\r\n    userData,\r\n    updateUserData,\r\n    isLoaded,\r\n    projectData,\r\n    addOneProject,\r\n    updateProjectData,\r\n  } = useProjectData();\r\n\r\n  const [filteredContents, setFilteredContents] = useState(undefined);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    // Get project data from Context\r\n    //const { projectData } = useProjectData();\r\n\r\n    const inputText = e.target.value;\r\n    setQuery(e.target.value);\r\n\r\n    console.log(\"handleInputChange::ProjectData\", projectData);\r\n    const filteredData = projectData.filter((content) => {\r\n      // destructure data from post frontmatter\r\n      const { shortId, name, description } = content;\r\n      return (\r\n        // standardize data with .toLowerCase()\r\n        // return true if the subject, skills...\r\n        // contains the query string\r\n        name.toLowerCase().includes(inputText.toLowerCase()) ||\r\n        description.toLowerCase().includes(inputText.toLowerCase()) ||\r\n        (inputText.length > 0 && parseInt(inputText) === shortId)\r\n      );\r\n    });\r\n\r\n    if (filteredData && filteredData.length > 0)\r\n      setFilteredContents(filteredData);\r\n    else setFilteredContents(undefined);\r\n  };\r\n\r\n  const onProjectAdd = async () => {\r\n    console.log(\"add and\", projectGroupData._id);\r\n    await addOneProject(projectGroupData._id);\r\n    const newListOfProjects = await updateProjectData(projectGroupData._id);\r\n    setFilteredContents(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // get data from APIs\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      // Deal with project group data\r\n      const group = await updateProjectGroupData(associatedProjectGroupName);\r\n      // Deal with user role data {role:..., isAdmin:...}\r\n      const user = await updateUserData(associatedProjectGroupName);\r\n      // Deal with project data\r\n      const temp = await updateProjectData(group._id);\r\n    } catch (error) {\r\n      console.error(\"getData:error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isLoaded && <Spinner />}\r\n      {projectGroupData === undefined ? (\r\n        \"\"\r\n      ) : (\r\n        // deal with project view\r\n        <div className=\"pl-3 pt-3 pb-3 pr-3\">\r\n          <h3 className=\"\">Projets des groupes de {projectGroupData?._id}</h3>\r\n          <div className=\"index\">\r\n            <input\r\n              type=\"text\"\r\n              aria-label=\"Search\"\r\n              placeholder=\"Filtrez les contenus...\"\r\n              onChange={handleInputChange}\r\n              className=\"index__search\"\r\n            />\r\n            {filteredContents && filteredContents.length > 0 ? (\r\n              <ProjectsView\r\n                projects={filteredContents}\r\n                setFilteredContents={setFilteredContents}\r\n              ></ProjectsView>\r\n            ) : (\r\n              <ProjectsView\r\n                projects={projectData}\r\n                setFilteredContents={setFilteredContents}\r\n              ></ProjectsView>\r\n            )}\r\n          </div>\r\n\r\n          {/* // deal with add a project button */}\r\n          {userData === undefined || !userData.isAdmin ? (\r\n            \"\"\r\n          ) : (\r\n            <button className=\"index__button\" onClick={onProjectAdd}>\r\n              Ajouter projet\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProjectManagement;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { useStaticQuery } from \"gatsby\";\r\n\r\nimport MainLayout from \"../components/main-layout\";\r\n\r\nimport { withAuthentication } from \"../components/hoc/hoc\";\r\nimport { ProjectDataProvider } from \"../components/context/projects/project-data-context\";\r\n\r\nimport ProjectManagement from \"../components/projects/project-management\";\r\n\r\nconst ProjectPage = () => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            defaultAssociatedProjectGroupName\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const associatedProjectGroupName =\r\n    data?.site.siteMetadata.defaultAssociatedProjectGroupName;\r\n\r\n  return (\r\n    <ProjectDataProvider>\r\n      <MainLayout>\r\n        <ProjectManagement\r\n          associatedProjectGroupName={associatedProjectGroupName}\r\n        />\r\n      </MainLayout>\r\n    </ProjectDataProvider>\r\n  );\r\n};\r\n\r\nconst ProjectPageProtected = withAuthentication(ProjectPage);\r\nexport default ProjectPageProtected;\r\n"],"names":["project","setFilteredContents","useState","isBeingEdited","setIsBeingEdited","isPublic","setIsPublic","projectUpdateState","setProjectUpdateState","useProjectData","deleteOneProject","updateProjectData","addMemberToProject","deleteMemberFromProject","updateProject","userData","projectGroupData","projectData","onProjectDelete","projectGroupName","undefined","onAddMemberToProject","onDeleteMemberFromProject","onProjectSave","_id","updatedProject","handleChange","propChanged","previousState","className","key","shortId","id","onChange","startContent","name","isInline","isAdmin","icon","faTrashAlt","onClick","projectMembers","includes","userName","status","faEdit","find","length","maximumProjectMembers","faUserPlus","faUserTimes","faSave","faTimes","description","presentationUrl","src","frontendProductionUrl","href","target","frontendRepo","backendRepo","map","member","getNamesFromEmail","join","type","checked","disabled","e","projects","associatedProjectGroupName","updateProjectGroupData","updateUserData","isLoaded","addOneProject","filteredContents","setQuery","onProjectAdd","useEffect","getData","group","console","error","placeholder","inputText","value","filteredData","filter","content","toLowerCase","parseInt","withAuthentication","data","useStaticQuery","site","siteMetadata","defaultAssociatedProjectGroupName"],"sourceRoot":""}