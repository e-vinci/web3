{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/2/","result":{"data":{"mdx":{"id":"463d1e10-1aab-5a97-8df1-409ee960da2b","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Module 2 : TBD\",\n  \"description\": \"TBD\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 2 : React state\"), mdx(\"p\", null, \"Ce module vous offre principalement la d\\xE9couverte de la gestion des \\xE9v\\xE9nements en React, ainsi que la gestion des \\xE9tats.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Voici les sujets trait\\xE9s :\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a\"\n  }, \"Pr\\xE9paration de l'exercice\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a1\"\n  }, \"Depuis le cours en ligne\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a2\"\n  }, \"Remarques g\\xE9n\\xE9rales\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b\"\n  }, \"Utiliser les \\xE9v\\xE9nements\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c\"\n  }, \"Sauvegarder le compteur !\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d\"\n  }, \"\\uD83C\\uDF6C Votre premier Hook custom !\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#e\"\n  }, \"A retenir\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Voici les lectures indispensables pour suivre ce module :\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pr\\xE9requis, \\xE0 revoir attentivement : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://fullstackopen.com/en/part1/java_script\"\n  }, \"JavaScript\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nouvelle mati\\xE8re : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://fullstackopen.com/en/part1/component_state_event_handlers\"\n  }, \"Component state, event handlers\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\"))), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"a\"\n  }), \"a) Pr\\xE9paration de l'exercice\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a1\"\n  }), \"a.1) Depuis le cours en ligne\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dans votre dossier \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/exercises\"), \" de votre repo local, lancez la commande : \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npx create-react-app module2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supprimez tout le contenu du dossier \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Comme pour la semaine pr\\xE9c\\xE9dente, n'oubliez pas de supprimer le dossier \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".git\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Copiez le fichier \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"jsconfig.json\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/index.js\"), \" depuis le dossier de l'exercice du module pr\\xE9c\\xE9dent.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduisez les composants \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"App\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Display\"), \", et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Button\"), \" en copiant le contenu du cours en ligne. N'oubliez pas que chacun d'entre eux doit \\xEAtre dans un dossier qui porte le m\\xEAme nom que le composant : \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/components/[componentName]/[componentName].jsx\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"V\\xE9rifiez que les 3 boutons fonctionnent correctement : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"increase\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"decrease\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"reset\"), \".\")), mdx(\"p\", null, \"Veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant : \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"module2 : init\"), \"\\\".\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a2\"\n  }), \" a.2) Remarques g\\xE9n\\xE9rales\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gardez la partie jsx la plus simple possible, d\\xE9finissez toujours des \\\"helper functions\\\" et \\\"helper variables\\\" avant le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"JSX\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nommez vos \\\"event handlers\\\" avec des pr\\xE9fixes, par exemple : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"handleXXX\"), \" ou \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"onXXX\"), \". Ceci va vous permettre de vous souvenir que ces m\\xE9thodes re\\xE7oivent un unique param\\xE8tre \\\"event\\\" (ou e). N'utilisez pas ces pr\\xE9fixes pour vos m\\xE9thodes \\\"business\\\" qui re\\xE7oivent des param\\xE8tres \\\"normaux\\\".\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\uD83D\\uDC4D En React, g\\xE9n\\xE9ralement la convention est d'utiliser \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"on[Event]\")), \" comme nom pour des props qui repr\\xE9sentent des \\xE9v\\xE9nements et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"handle[Event]\")), \" pour les m\\xE9thodes qui g\\xE8rent ces \\xE9v\\xE9nements.\")), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"b\"\n  }), \"b) Utiliser les \\xE9v\\xE9nements\"), mdx(\"p\", null, \"Dans cet exercice, toujours dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/exercises/module2\"), \", l'objectif va \\xEAtre de supprimer les m\\xE9thodes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"increaseByOne()\"), \"... et les remplacer par une unique m\\xE9thode \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeCount(delta)\"), \" qui va prendre un \\\"delta\\\" en param\\xE8tre. Ce delta va \\xEAtre ajout\\xE9 au compteur, et donnera la nouvelle valeur. Par exemple, un appel \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeCount(1)\"), \" va ajouter 1 au compteur, un appel \\xE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeCount(-10)\"), \" va ajouter -10 au compteur ce qui \\xE9quivaut \\xE0 supprimer 10 du compteur.\"), mdx(\"p\", null, \"Pour cela, commencez par ajouter une prop \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"delta\"), \" dans le composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Button\"), \". Utilisez ce \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"delta\"), \" que vous recevez dans votre composant pour remplir l'attribut HTML \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data-delta\"), \" du bouton. N'h\\xE9sitez pas \\xE0 aller lire \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\"\n  }, \"la documentation MDN sur les \\\"data attributes\\\"\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r5\"\n  }, \"[R.5]\"), \".\"), mdx(\"p\", null, \"Supprimez les m\\xE9thodes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"increaseByOne()\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"decreaseByOne()\"), \", et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setToZero()\"), \" du composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"App\"), \". Et \\xE9crivez cette m\\xE9thode \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeCount(delta)\"), \". Elle prend un nombre en param\\xE8tre, et met \\xE0 jour le compteur en fonction du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"delta\"), \" pass\\xE9 en param\\xE8tre.\"), mdx(\"p\", null, \"Jusqu'ici, les Button recevaient en props un texte \\xE0 afficher (tr\\xE8s bien, c'est \\xE0 garder), mais \\xE9galement une fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClick\"), \" qui permettait de r\\xE9agir au clic sur le bouton. Supprimez cette prop, et passez plut\\xF4t en param\\xE8tre la fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeCount\"), \" que vous avez cr\\xE9\\xE9e, et le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"delta\"), \" qui doit \\xEAtre associ\\xE9 au bouton :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incr\\xE9menter : +1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\xE9cr\\xE9menter : -1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reset : -counter\")), mdx(\"p\", null, \"R\\xE9cup\\xE9rez la prop \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"changeCount\"), \" dans le component \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Button\"), \" et \\xE9crivez une \\\"helper function\\\" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"handleClick(e)\")), \" qui va extraire la valeur de l'\\xE9l\\xE9ment cliqu\\xE9 (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"e.target.dataset.delta\"), \") et appeller \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"changeCount\"), \" avec le bon delta.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remarques/consignes :\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N'UTILISEZ PAS la prop \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"delta\"), \" dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"handleClick\"), \", utilisez uniquement l'\\xE9v\\xE9nement que vous recevez en param\\xE8tre.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N'oubliez pas d'utiliser \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"parseInt()\"), \" pour parser la valeur que vous recevez. L'op\\xE9rateur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"+\"), \" sur une cha\\xEEne de caract\\xE8res fait une concat\\xE9nation en JS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les props React ne sont pas des attributs HTML, elles conservent leur types, alors que les attributs HTML sont s\\xE9rialis\\xE9s dans le HTML et sont donc toujours des string. Dans notre cas ici, le data-attribute \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"delta\"), \" qu'on a \\xE9crit sur notre \\\"button\\\" HTML a donc \\xE9t\\xE9 s\\xE9rialis\\xE9 sous forme de string. Quand on le r\\xE9cup\\xE8re avec \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"e.target.dataset.delta\")), \", il est donc bien au format string. Il faut donc le parser.\")), mdx(\"p\", null, \"Veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant : \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"module2 : events\"), \"\\\".\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Maintenant que vous avez termin\\xE9 cet exercice, remarquez qu'on aurait pu faire mieux, et beaucoup plus propre !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pourquoi passer par un data-attribute pour transmettre le delta, alors qu'on peut r\\xE9-utiliser directement la prop delta dans le handleClick ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"La r\\xE9ponse ici est simple, juste pour l'exercice \\uD83D\\uDE09\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Gr\\xE2ce \\xE0 \\xE7a, vous avez appris qu'utiliser des attributs HTML directement nous fait perdre le type, qu'il faut parser le r\\xE9sultat, et que ce n'est pas une bonne mani\\xE8re de faire \\uD83D\\uDE09.\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"c\"\n  }), \"c) Sauvegarder le compteur\"), mdx(\"p\", null, \"Pour cet exercice, toujours dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/exercises/module2\"), \", dans le composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"App\"), \", appelez \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localStorage.setItem(\\\"counter\\\", JSON.stringify(counter))\"), \" \\xE0 chaque fois qu'on change le compteur. Dans notre cas ici, c'est juste apr\\xE8s l'appel \\xE0 la m\\xE9thode \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setCounter\"), \" dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeCount\"), \".\"), mdx(\"p\", null, \"Ensuite, dans le \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState(0)\"), \", au lieu de donner \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"0\"), \" comme valeur initiale au compteur, essayez de lire la valeur du compteur depuis le localStorage \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON.parse(localStorage.getItem(\\\"counter\\\"))\"), \" et passez la au \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" comme valeur par d\\xE9faut. Rafraichissez votre page apr\\xE8s le changement du compteur, et constatez qu'il \\xE0 \\xE9t\\xE9 persist\\xE9.\"), mdx(\"p\", null, \"Vous remarquerez cependant qu'il y a un souci avec la valeur du compteur qui est persist\\xE9e. Il y a bien une persistance qui est faite, mais la valeur n'est pas correcte... Essayez de r\\xE9fl\\xE9chir \\xE0 la question, \\xE9ventuellement en lisant la documentation officielle de React sur le hook \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"useState\"), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/hooks-state.html\"\n  }, \"Using the State Hook\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r6\"\n  }, \"[R.6]\"), \" ou sur le Render des composants : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/rendering-elements.html\"\n  }, \"Rendering Elements\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r5\"\n  }, \"[R.5]\"), \".\"), mdx(\"p\", null, \"Vous avez r\\xE9fl\\xE9chi \\xE0 la question ? V\\xE9rifiez ci-dessous si vous avez trouv\\xE9 la \\\"bonne\\\" r\\xE9ponse...\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"======= SPOILER =======\")), mdx(\"p\", null, \"Au cas ou vous ne l'auriez pas compris, lorsque l'\\xE9tat d\\xE9fini gr\\xE2ce au \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"useState\"), \" vient \\xE0 changer, React re-render les composants qui sont impact\\xE9s par ce changement. La seule mani\\xE8re pour nous de changer la valeur du compteur, s'est d'utiliser le \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setCounter()\"), \" que le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"useState\"), \" nous \\xE0 donn\\xE9. L'appeler en donnant une nouvelle valeur va relancer un render. Mais React ne fait pas un render \\xE0 chaque changement d'un \\xE9tat dans notre application. Il va optimiser les render pour \\xE9viter d'en faire \\xE0 tout bout de champ. Le render sera fait quant il veut, sans que vous sachiez exactement quand... Du coup, \\xE0 la ligne juste apr\\xE8s votre appel \\xE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setCounter\"), \", vous utilisez la valeur du counter en pensant qu'elle a \\xE9t\\xE9 chang\\xE9e, mais en fait, React ne la changera qu'au prochain render... Donc pas tout de suite ! Il faut donc trouver une petite parade ;-)\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"======= FIN SPOILER =======\")), mdx(\"p\", null, \"Une fois que tout est en ordre, que le refresh n'alt\\xE8re en rien la valeur du compteur affich\\xE9e,\\nveuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant : \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"module2 : localStorage\"), \"\\\".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"d\"\n  }), \"d) \\uD83C\\uDF6C Votre premier Hook custom ! \", mdx(\"em\", {\n    parentName: \"h1\"\n  }, \"(Exercice facultatif, pour les plus motiv\\xE9s)\")), mdx(\"p\", null, \"Vous aurez remarqu\\xE9 que ce code n'est pas tr\\xE8s propre... A chaque appel de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setCounter()\"), \", il ne faudra surtout pas oublier d'\\xE9crire dans le localStorage... Et il faudra faire \\xE7a, pour chaque variable qu'on veut persister... Autant dire que c'est copier/coller du code partout, et le risque d'erreur est \\xE9norme...\"), mdx(\"p\", null, \"Et pourquoi ne pas faire notre propre \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"useState\"), \", mais qui \\xE9crit dans le localStorage au passage ?\"), mdx(\"p\", null, \"Ecrivez un fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"src/hooks/useLocalStorage.js\"), \" (notez l'extension \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".js\"), \" et pas \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".jsx\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Ce fichier doit d\\xE9clarer et exporter une fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"useLocalStorage(key, initialValue)\")), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Cette fonction utilisera en son coeur la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"useState\"), \" et comme elle, renverra une valeur et un setter. En plus de cela , elle stockera la valeur actuelle dans le localStorage \\xE0 l'indice de la clef donn\\xE9e et chargera la valeur stock\\xE9e initialement. Si la clef n'existe pas dans le localStorage, cette fonction initialisera la clef avec la valeur pass\\xE9e en second param\\xE8tre.\"), mdx(\"p\", null, \"Veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant : \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"module2 : custom hook\"), \"\\\".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"e\"\n  }), \"e) A retenir\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"useState\"), \" permet de stocker un \\xE9tat et de \\\"rerender\\\" les composants automatiquement quand c'est n\\xE9cessaire.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"props\"), \" sont la principale mani\\xE8re de passer des donn\\xE9es ET des fonctions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chaque Component doit \\xEAtre dans son dossier.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les fonctions de gestion d'\\xE9v\\xE9nements recoivent un unique param\\xE8tre \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"e\"), \"\\\" qui repr\\xE9sente l'\\xE9v\\xE9nement. Elles portent un nom qui commence par \\\"handle\\\" ou \\\"on\\\" afin de les identifier facilement.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les fonctions de gestion d'\\xE9v\\xE9nements sont dans le composant qui g\\xE9n\\xE8re l'\\xE9v\\xE9nement. Mais elles sont souvent de simples wrapper vers des fonctions \\\"m\\xE9tiers\\\" re\\xE7ue via les props.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les fonctions m\\xE9tiers viennent du composant \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"App\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/2.fr","frontmatter":{"title":"Module 2 : TBD","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"TBD","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='512'%20viewBox='0%200%20512%20512'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M227%202a256%20256%200%201059%20509A256%20256%200%2000227%202m7%2054c-82%209-150%2068-172%20147l-2%208%20120%20121c116%20116%20121%20120%20124%20119%2021-4%2052-19%2074-35%2047-35%2079-98%2079-154v-6H329v36h44l43%201a167%20167%200%2001-97%20115l-8%203-105-105-105-105%203-8a165%20165%200%2001287-32l27-23a202%20202%200%2000-184-82M56%20267a200%20200%200%2000196%20189L56%20260v7'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='544'%20height='492'%20viewBox='0%200%20544%20492'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M146%207c-31%208-51%2035-50%2068%201%2015%203%2020%2023%2056a3456%203456%200%200090%20151%2053177%2053177%200%200182%20145c16%2029%2018%2031%2026%2039a66%2066%200%2000113-47c0-19-1-20-33-75l-28-49h52c56%200%2064%200%2075-4a67%2067%200%2000-2-127l-8-2-39-1h-39l17-30c22-38%2023-41%2023-59%200-13%200-15-2-22a66%2066%200%2000-110-25c-8%208-9%2010-35%2055l-28%2048-28-47c-27-46-28-48-36-56a64%2064%200%2000-63-18'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='570'%20height='397'%20viewBox='0%200%20570%20397'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M0%20199v198h31v-17h8v17h532V0H0v199m85%2039v9h8v-19h-8v10m1%200v8h6v-17h-6v9m348%2054l-6%201-8%201h-1l-6-1-6%201h-1l-10-1c-8%200-9%201-9%203%200%203%200%203%206%203l7%201%202%201c1-2%205-4%205-3l4%201c3%200%204-1%204-2l1-2c1-1%201%200%201%201%200%203%201%204%202%202h1l3%201c1%200%202%200%201-1-3%200-2-2%200-2l2%202%201%201%201-2%201-2c1-1%201%200%201%201l1%203%201-2%201-3%201%203c0%202%200%202%205%202s7-2%204-3c-1-1-1-1%201-2%201-1%201-1-1-1-4%200-4%201-2%203l3%202h-4c-4%200-6-3-2-4v-1l-2-1h-2m14%203c-3%207-2%207%202%201l2-4v3l1%204%201-2%201-2%201%202c0%201%201%202%205%202%202%200%203%200%202-1-2%200-3-2%200-2l2%202%203%201c3%200%203%200%203-3s0-3-3-3c-2%200-2%200-1%201%202%201%202%201%200%201-1%201-2%200-2-1l-4-1c-1%201-2%200-2-1l-1-1-2%202-1%201-1-1c0-4-5-2-6%202m50%200l1%204%201-2%201-2%201%202c0%202%202%203%202%201h1l3%201c1%200%202%200%201-1-3%200-2-2%200-2l2%202c1%201%2013%202%2013%200l-3-1c-3%200-4%200-4-2l-3-2c-2%200-2%200-1%201%202%201%202%201%200%201-1%201-2%200-2-1h-6c-1%201-1%201-1-1l-1-2-1%202-1%201-1-1-1-2-1%204m-375%2035c-6%203-4%2010%203%2010s11-8%205-11c-3-1-4-1-8%201'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/d8efd/autocompletion.png","srcSet":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/d8efd/autocompletion.png 570w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/08f60/autocompletion.webp 570w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6964912280701754}},"base":"autocompletion.png"}}]}},"pageContext":{"slug":"/modules/2/"}},"staticQueryHashes":["1696221415","3028011774","3458129946","493526238","501654901","575455071"]}