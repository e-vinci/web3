{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/6/","result":{"data":{"mdx":{"id":"c638cfb7-cd1e-5020-9d6b-5770a55656b9","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Module 6 : SPA & comms\",\n  \"description\": \"Cr√©ation de SPA et gestion des communications entre une RESTful API et une IHM\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ScrollableImage = makeShortcode(\"ScrollableImage\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 6 : SPA & comms\"), mdx(\"p\", null, \"Ce module vous offre principalement la cr\\xE9ation de SPA et la gestion des communications asynchrones entre une RESTful API et une IHM.\"), mdx(\"p\", null, \"A cette \\xE9tape-ci, nous allons simplement int\\xE9grer des RESTful API au sein d'IHM.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"C'est donc principalement du d\\xE9veloppement frontend que nous allons faire, \\xE0 l'inverse des deux derniers modules o\\xF9 nous avons fait que du d\\xE9veloppement backend.\"), mdx(\"p\", null, \"Voici les sujets trait\\xE9s :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a\"\n  }, \"Introduction aux Single Page Applications\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a1\"\n  }, \"Caract\\xE9ristiques et workflow associ\\xE9s \\xE0 une SPA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a2\"\n  }, \"Architectures associ\\xE9es \\xE0 une SPA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.3) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a3\"\n  }, \"Gestion des communications d'une SPA\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b\"\n  }, \"Gestion des communications d'une SPA\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b1\"\n  }, \"Introduction aux protocoles de communications d'une SPA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b2\"\n  }, \"Introduction aux librairies li\\xE9es aux requ\\xEAtes HTTP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b.3) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b3\"\n  }, \"Requ\\xEAtes asynchrones & introduction aux promesses\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c\"\n  }, \"Gestion de la s\\xE9curit\\xE9 des communications du browser\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c1\"\n  }, \"Single Origin Policy & CORS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c2\"\n  }, \"Relaxer la s\\xE9curit\\xE9 via des CORS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c.3) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c3\"\n  }, \"Contourner le SOP via un proxy\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d\"\n  }, \"Programmation asynchrone \\xE0 l'aide de promesses & async / await\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d1\"\n  }, \"Utilisation de promesses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d2\"\n  }, \"Cr\\xE9ation de fonctions asynchrones renvoyant une promesse\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#e\"\n  }, \"Exercice 6.1 : Int\\xE9gration de la RESTful API au sein de l'IHM de myMovies via un proxy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#f\"\n  }, \"\\uD83C\\uDF6C Exercice 6.2 : Autoriser des nouvelles origines via la RESTful API\"))), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"a\"\n  }), \" a) Introduction aux Single Page Applications\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a1\"\n  }), \" a.1) Caract\\xE9ristiques et workflow associ\\xE9s \\xE0 une SPA\"), mdx(\"p\", null, \"Une SPA (Single Page Application) offre de belles caract\\xE9ristiques :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Pas de rechargement de page pendant l'utilisation\"), \" : en effet, on t\\xE9l\\xE9charge une seule fois l'ensemble du frontend (et donc de toutes les pages) ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"La r\\xE9\\xE9criture dynamique du contenu de la page\"), \" : lorsque l'on navigue d'une page \\xE0 une autre, on change que les parties de l'IHM qui doivent \\xEAtre mises \\xE0 jour.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Pas d'interruption de l'exp\\xE9rience de l'utilisateur\"), \" : lorsque l'utilisateur, via ses actions, am\\xE8ne par exemple \\xE0 un appel \\xE0 une API, l'IHM reste disponible. Le browser peut r\\xE9aliser des actions\\nde mani\\xE8re asynchrone (ou autrement dit, en parall\\xE8le) et ne bloque pas l'exp\\xE9rience utilisateur lors de long chargements (\\xE0 l'exception bien s\\xFBr du tout premier acc\\xE8s \\xE0 l'application n\\xE9cessitant le chargement complet du frontend).\")), mdx(\"p\", null, \"Voici un exemple de workflow associ\\xE9 \\xE0 la SPA qui g\\xE9rera le site de la pizzeria, afin d'afficher le menu au sein de l'IHM :\"), mdx(ScrollableImage, {\n    name: \"readPizzas.png\",\n    minWidth: \"523px\",\n    maxWidth: \"523px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Exemple de Workflow classique d'une SPA\"), mdx(\"p\", null, \"Une fois la page \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" charg\\xE9e par le browser, celui-ci va faire des appels multiples au serveur de fichiers statiques afin de t\\xE9l\\xE9charger tous les assets n\\xE9cessaires \\xE0 l'IHM.\"), mdx(\"p\", null, \"Une fois l'IHM charg\\xE9e, le browser lance en parall\\xE8le un appel \\xE0 la RESTful API pour lire toutes les pizzas, tout en \\xE9tant \\xE0 l'\\xE9coute d'\\xE9v\\xE9nements qui pourrait se passer au niveau de l'IHM.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a2\"\n  }), \" a.2) Architectures associ\\xE9es \\xE0 une SPA\"), mdx(\"p\", null, \"Il existe diff\\xE9rentes architectures associ\\xE9es \\xE0 une SPA.\"), mdx(\"p\", null, \"Dans le cadre de ce cours, nous avons choisi d'avoir une IHM qui soit enti\\xE8rement ind\\xE9pendante de la RESTful API :\"), mdx(ScrollableImage, {\n    name: \"independentFrontBackSPA.png\",\n    minWidth: \"914px\",\n    maxWidth: \"914px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Frontend ind\\xE9pendant de l'API\"), mdx(\"p\", null, \"Lors du d\\xE9veloppement, nous utiliserons donc le boilerplate du cours pour avoir une IHM qui soit enti\\xE8rement ind\\xE9pendante de l'API. Webpack sera utilis\\xE9 comme serveur de fichiers statiques lors du d\\xE9veloppement. Notons qu'il est possible d'utiliser d'autres serveurs lors du d\\xE9veloppement, comme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Live Server\"), \" de VS Code, ou un package npm comme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"serve\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En production, lorsque nous mettrons l'IHM sur le web, nous devrons nous tourner vers un autre serveur de fichiers statiques.\"), mdx(\"p\", null, \"Voici l'architecture de l'API telle que d\\xE9velopp\\xE9e dans les modules pr\\xE9c\\xE9dents :\"), mdx(ScrollableImage, {\n    name: \"architecture.png\",\n    minWidth: \"859px\",\n    maxWidth: \"859px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"RESTful API ind\\xE9pendante du frontend\"), mdx(\"p\", null, \"Nous voyons que ces architectures (frontend & backend) am\\xE8nent \\xE0 deux projets bien distincts, un projet pour le frontend, et un autre pour le backend.\"), mdx(\"p\", null, \"Pour votre information, il est aussi possible d'avoir une architecture monolithique pour une SPA.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Dans ce sc\\xE9nario, la RESTful API s'occupe tant de fournir l'IHM via un serveur de fichiers statiques que d'offrir les op\\xE9rations sur les ressources via un serveur dynamique.\"), mdx(\"p\", null, \"Voici un exemple d'architecture monolithique possible \\xE0 l'aide de Node.js :\"), mdx(ScrollableImage, {\n    name: \"monolithicSPA.png\",\n    minWidth: \"758px\",\n    maxWidth: \"758px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"SPA monolithique sous Express : chargement du frontend\"), mdx(\"p\", null, \"Une fois le frontend charg\\xE9, le browser pourra faire appel aux API et c'est le ou les router(s) de l'API qui prendront en compte les appels.\"), mdx(\"p\", null, \"Nous n'appliquerons pas cette architecture dans le cadre de ce cours. N\\xE9anmoins, vous aurez toutes les connaissances pour l'appliquer si vous le souhaitez.\"), mdx(\"p\", null, \"Voici en r\\xE9sum\\xE9 les caract\\xE9ristiques des deux architectures pr\\xE9sent\\xE9es ci-dessus :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPA dont le frontend est ind\\xE9pendant du backend :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Frontend avec Serveur de fichiers statiques pour d\\xE9ployer l'IHM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 serveurs : 1 serveur pour le frontend, 1 serveur pour le backend\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ports diff\\xE9rents pour le Frontend & le Backend\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPA monolithique :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"RESTful API avec Serveur de fichiers statiques pour d\\xE9ployer l'IHM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xEAme serveur pour d\\xE9ployer le backend & le frontend\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xEAme port pour le frontend & le backend\")))), mdx(\"p\", null, \"Pour information, les ports permettent \\xE0 un m\\xEAme appareil de communiquer sur un r\\xE9seau en offrant plusieurs services. Chaque service, ou application, communique sur un et un seul port.\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"b\"\n  }), \" b) Gestion des communications d'une SPA\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"b1\"\n  }), \" b.1) Introduction aux protocoles de communications d'une SPA\"), mdx(\"p\", null, \"Quelles protocoles & techniques principales allons-nous utiliser pour communiquer au sein d'une SPA ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Il en existe plusieurs. Dans le cadre de ce cours, nous allons simplement voir la technique principale, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AJAX\"), \" (ou \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"A\"), \"synchronous \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ja\"), \"vaScript and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"X\"), \"ML).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AJAX\"), \" est une combinaison de technologies (HTML/CSS, DOM, JSON ou XML, XMLHttpRequest, JS) pour r\\xE9aliser une application web asynchrone.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"C'est-\\xE0-dire que le frontend reste disponible aux actions des utilisateurs m\\xEAme lorsqu'il fait des requ\\xEAtes HTTP asynchrone \\xE0 des API.\\nLe transport de donn\\xE9es entre le frontend et l'API se faisait autrefois via \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XML\"), \", or actuellement, il se fait via \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JSON\"), \".\"), mdx(\"p\", null, \"Notons que dans le cadre d'architectures MPA \\\"old school\\\" (non vues dans le cadre de ce cours), g\\xE9n\\xE9ralement, l'appel aux API se fait pas par le frontend, mais par le backend. Pendant toute la dur\\xE9e de l'appel du frontend au backend,\\ncelui-ci reste en attente car la demande faite au backend est synchrone : par exemple, lorsqu'un formulaire est envoy\\xE9 au serveur, l'action du formulaire est de faire l'appel \\xE0 une nouvelle page au serveur (via la propri\\xE9t\\xE9 \\\"action\\\" du formulaire HTML) ; jusqu'\\xE0 la r\\xE9ponse du backend, aucune action d'un utilisateur ne sera possible au niveau de l'IHM.\"), mdx(\"p\", null, \"Il existe d'autres moyens de communiquer entre applications web. Par exemple, les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"websockets\"), \" sont une technologie de communication temps-r\\xE9el client / serveur et bidirectionnelle.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"A la fin de ce cours, vous devriez \\xEAtre apte \\xE0 d\\xE9couvrir cette technologie par vous m\\xEAme si vous le souhaitiez.\"), mdx(\"p\", null, \"Avec \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AJAX\"), \", c'est le client qui doit initier la communication. Ca n'est pas le cas pour les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"websockets\"), \", le serveur peut le faire. Ainsi, avec \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AJAX\"), \", le client doit cr\\xE9er une connexion HTTP \\xE0 chaque requ\\xEAte.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"b2\"\n  }), \" b.2) Introduction aux librairies li\\xE9es aux requ\\xEAtes HTTP\"), mdx(\"p\", null, \"Voici une liste de librairies bien connues pouvant parfois \\xEAtre utilis\\xE9e tant au niveau d'un browser (frontend) que via Node.js (backend) :\"), mdx(ScrollableImage, {\n    name: \"ajax.png\",\n    minWidth: \"569px\",\n    maxWidth: \"569px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Comparaison de librairies AJAX/HTTP [R.60]\"), mdx(\"p\", null, \"Anciennement, il y a environ 20 ans, c'est la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XMLHttpRequest\"), \" qui \\xE9tait utilis\\xE9e.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Puis la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ajax\"), \" avait pris l'ascendant via la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"$.ajax()\"), \".\"), mdx(\"p\", null, \"Le standard actuel pour le Vanilla JS, au niveau des browser, c'est la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Fetch API\"), \". Dans ce cours, Nous allons utiliser cette API offerte par tous les browsers pour faire des requ\\xEAtes vers nos API.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Notez que si vous souhaitez un jour utiliser une librairie pour vos requ\\xEAtes HTTP, probablement que la plus utilis\\xE9e actuellement c'est \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"axios\"), \".\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"b3\"\n  }), \" b.3) Requ\\xEAtes asynchrones & introduction aux promesses\"), mdx(\"p\", null, \"La m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" permet de faire des requ\\xEAtes HTTP d'un browser vers des API.\"), mdx(\"p\", null, \"Cette m\\xE9thode est asynchrone, c'est-\\xE0-dire quelle n'est pas bloquante, elle renvoie des promesses de r\\xE9sultats via des objets \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Promise\"), \". Nous allons de mani\\xE8re intuitive d\\xE9couvrir la programmation asynchrone. Nous pourrons voir plus en d\\xE9tails par la suite ce qu'est la programmation asynchrone \\xE0 l'aide de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"promises\"), \" (les promesses).\"), mdx(\"p\", null, \"Si un jour vous avez besoin de plus de documentation sur la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \", n'h\\xE9sitez pas \\xE0 consulter la \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\"\n  }, \"documentation MDN\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r61\"\n  }, \"[R.61]\"), \".\"), mdx(\"p\", null, \"Pour la pizzeria, l'IHM que nous avons d\\xE9velopp\\xE9 au module 3 s'est termin\\xE9e avec ce code :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/routing-hmi\"\n  }, \"routing-hmi\"), \").\"), mdx(\"p\", null, \"Cette IHM \\xE9tait enti\\xE8rement frontend, le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MENU\"), \" \\xE9tant hardcod\\xE9 dans la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nous souhaitons maintenant changer cela, l'IHM doit faire une requ\\xEAte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" \\xE0 notre RESTful API d\\xE9velopp\\xE9e au module 5 :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \".\"), mdx(\"p\", null, \"Nous n'allons donc plus utiliser REST Client mais une fonction offerte par le browser pour faire l'\\xE9quivalent de cette requ\\xEAte :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\"\n  }, \"### Read all pizzas with File variable\\nGET {{baseUrl}}/pizzas\\n\")), mdx(\"p\", null, \"Veuillez d\\xE9marrer la RESTful API de la pizzeria. En cas de souci, vous pouvez utiliser ce code-ci :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \".\"), mdx(\"p\", null, \"Nous allons maintenant continuer le d\\xE9veloppement de l'IHM \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/routing-hmi\"\n  }, \"routing-hmi\"), \".\"), mdx(\"p\", null, \"Au sein de votre repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \", veuillez cr\\xE9er le projet nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/basic-fetch\"), \" sur base d'un copi\\xE9 coll\\xE9 de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/routing-hmi\"), \" (ou \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/routing-hmi\"\n  }, \"routing-hmi\"), \".\"), mdx(\"p\", null, \"Pour la suite du tutoriel, nous consid\\xE9rons que tous les chemins absolus d\\xE9marrent du r\\xE9pertoire\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/basic-fetch\"), \".\"), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"src/Components/Pages/HomePage.js\"), \" en supprimant l'array \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MENU\"), \" et en rempla\\xE7ant la ligne \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"renderMenuFromString(pizzas);\")), \" par cette requ\\xEAte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" pour lire toutes les pizzas :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {4-14}\",\n    \"numbered\": true,\n    \"{4-14}\": true\n  }, \"const HomePage = () => {\\n  clearPage();\\n\\n  fetch('http://localhost:3000/pizzas')\\n    .then((response) => {\\n      if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n      return response.json();\\n    })\\n    .then((pizzas) => {\\n      renderMenuFromString(pizzas);\\n    })\\n    .catch((err) => {\\n      console.error('HomePage::error: ', err);\\n    });\\n\\n  attachOnMouseEventsToGoGreen();\\n\\n  renderDrinksFromNodes(DRINKS);\\n};\\n\")), mdx(\"p\", null, \"Veuillez ex\\xE9cuter le frontend.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Ca ne fonctionne pas, nous obtenons ces erreurs dans la console du browser :\"), mdx(ScrollableImage, {\n    name: \"errors.png\",\n    minWidth: \"589px\",\n    maxWidth: \"589px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"p\", null, \"La premi\\xE8re erreur, est tr\\xE8s int\\xE9ressante pour comprendre la nature asynchrone de la fonction\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \".\"), mdx(\"p\", null, \"Par d\\xE9faut, la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" fait une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Ici on a donc demand\\xE9 \\xE0 la RESTful API, qui tourne sur le port \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8080\"), \" de votre machine locale, la lecture (requ\\xEAte GET) de toutes les ressources de type \\\"pizzas\\\" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"  fetch('http://localhost:3000/pizzas')\\n};\\n\")), mdx(\"p\", null, \"Comme la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" est asynchrone, le programme principal ne se bloque pas et n'attend\\ndonc pas les r\\xE9sultats de l'appel de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \". Directement apr\\xE8s le d\\xE9but du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \", on passe \\xE0 la ligne 16 du morceau de code pr\\xE9c\\xE9dent : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"attachOnMouseEventsToGoGreen(pizzas);\")), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Dans cette fonction, voici ce qui est fait :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {2-3}\",\n    \"numbered\": true,\n    \"{2-3}\": true\n  }, \"function attachOnMouseEventsToGoGreen() {\\n  const table = document.querySelector('table');\\n  table.addEventListener('mouseover', () => {\\n    table.className = 'table table-success';\\n  });\\n\\n  table.addEventListener('mouseout', () => {\\n    table.className = 'table table-danger';\\n  });\\n}\\n\")), mdx(\"p\", null, \"On essaie d'acc\\xE9der \\xE0 la table HTML qui doit \\xEAtre cr\\xE9\\xE9e par la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"renderMenuFromString()\")), \" qui n'a pas encore \\xE9t\\xE9 appel\\xE9e...\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uD83D\\uDCAD Mais pourquoi la table n'a pas \\xE9t\\xE9 cr\\xE9\\xE9e alors que le morceau de code \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"attachOnMouseEventsToGoGreen(pizzas);\")), \" se trouve plus haut ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"H\\xE9 bien c'est \\xE7a la programmation asynchrone, \\xE7a n'est qu'une fois le programme principal ex\\xE9cut\\xE9 que les t\\xE2ches asynchrones, de priorit\\xE9 plus basses, pourront s'ex\\xE9cuter.\"), mdx(\"p\", null, \"Comment r\\xE9ecrire ce code pour cha\\xEEner l'appel de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"attachOnMouseEventsToGoGreen(pizzas);\")), \"\\nau succ\\xE8s de l'op\\xE9ration \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" ?\"), mdx(\"p\", null, \"La m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" renvoie une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Promise\"), \", qui est un objet repr\\xE9sentant un \\xE9tat interm\\xE9diaire d'une op\\xE9ration. Le code des callbacks s'ex\\xE9cute quand la t\\xE2che asynchrone est finie avec succ\\xE8s ou si la t\\xE2che \\xE9choue.\"), mdx(\"p\", null, \"Les \\xE9tats d'une promesse sont les suivants :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pending\"), \" : \\xE9tat initial,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fulfilled\"), \" : l'op\\xE9ration asynchrone a \\xE9t\\xE9 termin\\xE9e avec succ\\xE8s ; par exemple la requ\\xEAte\\nfetch() a obtenu un flux de donn\\xE9es avec la RESTful API,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"rejected\"), \" : l'op\\xE9ration asynchrone a \\xE9chou\\xE9e ; par exemple la requ\\xEAte \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch\"), \" est mal construite.\")), mdx(\"p\", null, \"Pour r\\xE9cup\\xE9rer le r\\xE9sultat d'une m\\xE9thode asynchrone, on va faire appel :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".then( callback )\"), \" : ce morceau de code permet de cha\\xEEner des traitements asynchrones. Par exemple, \\xE0 la fin du premier traitement asynchrone associ\\xE9 au \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch()\"), \", on appelle\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {2-5}\",\n    \"numbered\": true,\n    \"{2-5}\": true\n  }, \"fetch('http://localhost:3000/pizzas')\\n  .then((response) => {\\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n    return response.json();\\n  })\\n  .then((pizzas) => {\\n    renderMenuFromString(pizzas);\\n  })\\n  .catch((err) => {\\n    console.error('HomePage::error: ', err);\\n  });\\n};\\n\")), mdx(\"p\", null, \"La callback sera appel\\xE9e et recevra comme param\\xE8tre un objet de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Response\"), \", un objet ne contenant pas encore le contenu du body de la r\\xE9ponse sous forme d'un objet JS. En fait, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Response.body\"), \" est un flux de donn\\xE9es (un stream), il faudra donc faire appel \\xE0 un traitement asynchrone pour obtenir le contenu du body sous forme d'un objet JS.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"C'est ce qui est fait en renvoyant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"return response.json();\")), \" : la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"json()\"), \" renvoie une promesse, c'est \\xE0 dire qu'une fois le traitement termin\\xE9, nous pourrons cha\\xEEner celui-ci via un autre \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".then()\"), \".\\nC'est ainsi que nous cha\\xEEnons, une fois le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"body\"), \" (au format JSON) disponible, l'appel d'une deuxi\\xE8me callback qui s'occupe de faire un render du menu de la pizzeria. Cette deuxi\\xE8me callback recevra en param\\xE8tre le body de la r\\xE9ponse sous forme d'un objet JS :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {6-8}\",\n    \"numbered\": true,\n    \"{6-8}\": true\n  }, \"fetch('http://localhost:3000/pizzas')\\n  .then((response) => {\\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n    return response.json();\\n  })\\n  .then((pizzas) => {\\n    renderMenuFromString(pizzas);\\n  })\\n  .catch((err) => {\\n    console.error('HomePage::error: ', err);\\n  });\\n};\\n\")), mdx(\"p\", null, \"Si nous souhaitons cha\\xEEner l'ajout des \\xE9couteurs d'\\xE9v\\xE9nements sur la table HTML, puis l'affichage des boissons, c'est donc dans cette callback qu'il faut le faire. Veuillez mettre \\xE0 jour le code afin d'\\xE9liminer la premi\\xE8re erreur qu'il y avait dans la console :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {9-13}\",\n    \"numbered\": true,\n    \"{9-13}\": true\n  }, \"const HomePage = () => {\\n  clearPage();\\n\\n  fetch('http://localhost:3000/pizzas')\\n    .then((response) => {\\n      if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n      return response.json();\\n    })\\n    .then((pizzas) => {\\n      renderMenuFromString(pizzas);\\n      attachOnMouseEventsToGoGreen();\\n      renderDrinksFromNodes(DRINKS);\\n    })\\n    .catch((err) => {\\n      console.error('HomePage::error: ', err);\\n    });\\n};\\n\")), mdx(\"p\", null, \"La console de votre browser devrait afficher une erreur en moins.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".catch( callback )\"), \" : ce morceau de code permet d'ex\\xE9cuter une callback lorsque la t\\xE2che asynchrone associ\\xE9e \\xE0 la promesse \\xE9choue. Dans le code, on voit que l'on affiche juste un message dans la console :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {11-13}\",\n    \"numbered\": true,\n    \"{11-13}\": true\n  }, \"fetch('http://localhost:3000/pizzas')\\n  .then((response) => {\\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n    return response.json();\\n  })\\n  .then((pizzas) => {\\n    renderMenuFromString(pizzas);\\n    attachOnMouseEventsToGoGreen();\\n    renderDrinksFromNodes(DRINKS);\\n  })\\n  .catch((err) => {\\n    console.error('HomePage::error: ', err);\\n  });\\n};\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".finally( callback )\"), \" : si l'on souhaite ex\\xE9cuter une callback quelque soit le r\\xE9sultat de la promesse, en cas de succ\\xE8s ou d'\\xE9chec.\")), mdx(\"p\", null, \"\\u26A1 Pour le cha\\xEEnage des traitements via plusieurs callback appel\\xE9es au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".then()\"), \", cela n'est possible que s'il y a un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"return\"), \" dans les callback.\"), mdx(\"p\", null, \"En effet, si une callback dans la gestion de promesses retourne :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Une valeur\"), \" : la promesse retourn\\xE9e par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"then\"), \" est r\\xE9solue avec la valeur.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Pas de valeur\"), \" : la promesse retourn\\xE9e par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"then\"), \" est r\\xE9solue avec \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"undefined\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Une autre promesse \\\"pending\\\"\"), \": la promesse retourn\\xE9e par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"then\"), \" est r\\xE9solue/rejet\\xE9e \\xE0 la suite de la r\\xE9solution/rejet de la promesse retourn\\xE9e par la callback.\")), mdx(\"p\", null, \"Pour info, autrefois, pour la programmation asynchrone en JS, nous utilisions simplement les callbacks, des fonctions que l'on passait en argument d'autres fonctions. Le code pouvait facilement devenir illisible et donc difficilement maintenable.\"), mdx(\"p\", null, \"\\uD83D\\uDCAD OK, nous avons appris les fondements de la programmation asynchrone moderne en JS...\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Mais \\xE7a ne fonctionne pas, nous n'avons toujours l'erreur associ\\xE9e aux \\\"CORS policy\\\".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Cette erreur, c'est un mur classique contre lequel tous les programmeurs web doivent se cogner au moins une fois dans leur carri\\xE8re.\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"c\"\n  }), \" c) Gestion de la s\\xE9curit\\xE9 des communications du browser\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"c1\"\n  }), \" c.1) Single Origin Policy & CORS\"), mdx(\"p\", null, \"La \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Single Origin Policy\"), \" (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SOP\"), \") sont des r\\xE8gles appliqu\\xE9es par le browser afin :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de restraindre les interactions entre un document ou script charg\\xE9 par une origine avec une ressource d'une autre origine\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d'isoler des documents ou scripts malicieux, afin de r\\xE9duire le risque des attaques.\")), mdx(\"p\", null, \"Deux URL ont une m\\xEAme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"origine\"), \" si ces caract\\xE9ristiques sont les m\\xEAmes :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"protocole\"), \" ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"port\"), \" ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"host\"), \" ; l'URL pointe vers le m\\xEAme appareil connect\\xE9 \\xE0 internet ou \\xE0 un r\\xE9seau local\")), mdx(\"p\", null, \"Il est possible de relaxer la s\\xE9curit\\xE9 via des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cross Origin Resource Sharing\"), \" (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \" est un m\\xE9canisme qui utilise des headers HTTP pour indiquer aux browsers qu'ils peuvent autoriser les acc\\xE8s \\xE0 des ressources d'origines diff\\xE9rentes.\"), mdx(\"p\", null, \"Cela signifie qu'une application web qui utilise une API ne peut le faire que si les ressources demand\\xE9es \\xE0 l'API proviennent d'une m\\xEAme origine, \\xE0 moins que la r\\xE9ponse de l'API inclue les bonnes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \" (via des header HTTP).\"), mdx(\"p\", null, \"Si l'on autorise trop d'origine, voici un exemple classique d'attaque :\"), mdx(ScrollableImage, {\n    name: \"cors-issue.png\",\n    minWidth: \"500px\",\n    maxWidth: \"700px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"p\", null, \"Imaginez qu'un site d'une banque ne soit pas s\\xE9curis\\xE9 avec des techniques modernes. Ce site utiliserait une IHM (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://my-bank.com\"), \"), qui, via un formulaire, permettrait de faire un versement, sous r\\xE9serve d'envoyer un cookie qui contiendrait une variable de session (simple m\\xE9canisme de s\\xE9curit\\xE9) lors d'une requ\\xEAte \\xE0 l'API de la banque.\"), mdx(\"p\", null, \"Maintenant, prenons le cas d'un utilisateur qui adore jouer sur le web, un gamer en puissance. Il joue \\xE0 un jeu de pinguins, mais soudainement, il est redirig\\xE9 vers un site malicieux (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://malicious.com\"), \"), qui lui offre un nouveau jeu avec des dinosaures. Ce site malicieux, en arri\\xE8re plan, pourrait faire une requ\\xEAte vers la m\\xEAme API utilis\\xE9e par \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my-bank\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Comme c'est le m\\xEAme browser utilis\\xE9 par notre gamer, tant pour faire ses virements, que pour jouer, toute requ\\xEAte faite vers \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.my-bank.com\"), \" enverra d'office les cookies existants et associ\\xE9s au domaine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"api.my-bank.com\"), \".\\nLes r\\xE9sultats peuvent \\xEAtre dramatiques, l'attaquant peut faire des versements jusqu'\\xE0 vider le compte de notre pauvre gamer.\"), mdx(\"p\", null, \"Bien s\\xFBr, gr\\xE2ce \\xE0 la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SOP\"), \" appliqu\\xE9e par nos browser, par d\\xE9faut, d\\xE8s que le site malicieux communique avec l'API de la banque, celui-ci bloque l'acc\\xE8s aux ressources de l'API car l'origine du site malicieux est diff\\xE9rente de l'origine de l'API.\"), mdx(\"p\", null, \"Les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \" permettent de rel\\xE2cher la s\\xE9curit\\xE9, afin notamment, dans le sc\\xE9nario \\xE9voqu\\xE9, d'autoriser l'origine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://my-bank.com\"), \" \\xE0 acc\\xE9der \\xE0 l'origine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.my-bank.com\"), \". En effet, c'est ce que le site de la banque souhaite.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Par contre, si la banque poss\\xE8de des d\\xE9veloppeurs nuls au niveau s\\xE9curit\\xE9 et que ceux-ci autorisent toutes les origines \\xE0 interroger l'API, l\\xE0, nous pourrions arriver au hacking d\\xE9crit ci-dessus.\"), mdx(\"p\", null, \"Attention \\xE0 ne pas confondre les attaques associ\\xE9es \\xE0 une mauvaise gestion des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \" aux attaques \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XSS\"), \". Les attaques \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XSS\"), \", ou \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cross-Site Scripting\"), \", sont un type d'injection de scripts malicieux dans une application web.\"), mdx(\"p\", null, \"Imaginez le forum web de la banque d\\xE9crite pr\\xE9c\\xE9dente et ce sc\\xE9nario :\"), mdx(ScrollableImage, {\n    name: \"xss.png\",\n    minWidth: \"500px\",\n    maxWidth: \"700px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"p\", null, \"L'API de la banque permet d'enregistrer des messages qui sont associ\\xE9s \\xE0 des forums sur lesquels leurs clients peuvent poster des messages.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si l'API de la banque \\xE9tait mal s\\xE9curis\\xE9e et qu'elle permettait d'enregistrer n'importe quels types d'information en tant que \\\"messages\\\" du forum, il serait possible \\xE0 un attaquant d'injecter du JS malicieux dans l'API.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Plus tard, lors de l'affichage des messages par le forum de la banque (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://forum.my-bank.com \"), \"), le JS malicieux pourra s'ex\\xE9cuter dans le browser de n'importe quel utilisateur, y-compris le gamer d\\xE9crit ci-dessus !\\nEt vous avez vu que via du JS, on peut envoyer de l'information n'importe o\\xF9, notamment \\xE0 l'aide de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \". Ce qui permettrait donc \\xE0 notre hacker, via son script malicieux, d'envoyer des cookies contenant des infos sensibles \\xE0 son API malicieuse, en vue de futures attaques encore plus malicieuses, comme notamment vider son compte en banque.\"), mdx(\"p\", null, \"La protection contre des attaques XSS se fait \\xE0 diff\\xE9rents niveaux. Ca n'est pas l'objet de ce cours, mais nous verrons n\\xE9anmoins, plus tard, certaines techniques pour \\xE9viter les attaques XSS.\"), mdx(\"p\", null, \"Nous allons voir comment nous pouvons communiquer entre un frontend et une API fonctionnant sous deux origines diff\\xE9rentes, \\xE0 l'aide de deux techniques diff\\xE9rentes.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"c2\"\n  }), \" c.2) Relaxer la s\\xE9curit\\xE9 via des CORS\"), mdx(\"p\", null, \"A cette partie-ci, nous allons voir comment mettre \\xE0 jour une API afin que dans chaque r\\xE9ponse faite \\xE0 un client, on ajoute un header permettant d'autoriser une ou plusieurs origines.\"), mdx(\"p\", null, \"Nous allons partir de la derni\\xE8re version de la RESTful de pizzas.\"), mdx(\"p\", null, \"Au sein de votre repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \", veuillez cr\\xE9er le projet nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/cors\"), \" sur base d'un copi\\xE9 coll\\xE9 de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/fat-model\"), \" (ou \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \").\"), mdx(\"p\", null, \"Pour la suite du tutoriel, nous consid\\xE9rons que tous les chemins absolus d\\xE9marrent du r\\xE9pertoire\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/cors\"), \".\"), mdx(\"p\", null, \"Dans ce projet, veuillez installer le package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cors\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i cors\\n\")), mdx(\"p\", null, \"Nous allons configurer les headers de la RESTful API \\xE0 l'aide du middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cors\"), \" offert par\\nla librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cors\"), \".\"), mdx(\"p\", null, \"Pour configurer et utiliser les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \", veuillez mettre \\xE0 jour le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/app.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {4-8,21}\",\n    \"numbered\": true,\n    \"{4-8,21}\": true\n  }, \"const express = require('express');\\nconst cookieParser = require('cookie-parser');\\nconst logger = require('morgan');\\nconst cors = require('cors');\\n\\nconst corsOptions = {\\n  origin: 'http://localhost:8080',\\n};\\n\\nconst usersRouter = require('./routes/users');\\nconst pizzaRouter = require('./routes/pizzas');\\n\\nconst app = express();\\n\\napp.use(logger('dev'));\\napp.use(express.json());\\napp.use(express.urlencoded({ extended: false }));\\napp.use(cookieParser());\\n\\napp.use('/users', usersRouter);\\napp.use('/pizzas', cors(corsOptions), pizzaRouter);\\n\\nmodule.exports = app;\\n\")), mdx(\"p\", null, \"Ici, nous pr\\xE9cisons que l'API doit autoriser l'origine associ\\xE9e au port sur lequel tourne\\nle serveur de fichiers statiques de Webpack (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8080\"), \"). Notons que nous n'avons pas rel\\xE2ch\\xE9 la s\\xE9curit\\xE9 pour les ressources de type \\\"users\\\", la fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cors\"), \" n'est pas appel\\xE9e au niveau du router de pizza.\"), mdx(\"p\", null, \"Veuillez vous assurer que l'API \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fat-model\"), \" est ferm\\xE9e et veuillez d\\xE9marrer votre nouvelle version de l'API (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api-cors\"), \").\"), mdx(\"p\", null, \"Il vous reste \\xE0 vous assurer que votre frontend (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/basic-fetch\"), \") est lui aussi bien d\\xE9marr\\xE9 et peut enfin r\\xE9aliser son fetch impl\\xE9ment\\xE9 dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage.js\"), \".\"), mdx(\"p\", null, \"Tout fonctionne correctement ?\"), mdx(\"p\", null, \"Normalement oui, vous devriez avoir le site de la pizzeria qui affiche le menu des pizzas suite \\xE0 un appel \\xE0 l'API (api-cors).\"), mdx(\"p\", null, \"Si tout fonctionne bien, faites un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre repo (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") avec le message\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api-cors\"), \"\\\".\"), mdx(\"p\", null, \"En cas de souci, vous pouvez acc\\xE9der au code du tutoriel ici :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour l'API : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/cors\"\n  }, \"api-cors\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour le frontend :\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch\"\n  }, \"basic-fetch-no-proxy\"), \".\")), mdx(\"p\", null, \"\\uD83D\\uDCAD OK, \\xE7a fonctionne bien... Mais cela est possible seulement si nous sommes les propri\\xE9taires de la RESTful API. Maintenant, que faire si une API tierce doit \\xEAtre int\\xE9gr\\xE9e dans notre frontend ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Imaginez que vous souhaitez int\\xE9grer une op\\xE9ration d'une API offerte par Google...\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pensez-vous que vous pouvez leur donner un coup de t\\xE9l\\xE9phone et dire : \\\"Google, peux-tu STP autoriser l'origine associ\\xE9e \\xE0 mon site web ?\\\".\"), mdx(\"p\", null, \"Il y a peu de chances...\\nNous allons donc voir un autre moyen de contourner la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SOP\"), \" (Single Origin Policy) impos\\xE9e par le browser.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"c3\"\n  }), \" c.3) Contourner le SOP via un proxy\"), mdx(\"p\", null, \"Il est possible de mettre en place un proxy au niveau du frontend afin de faire croire au browser que l'API et le frontend ont la m\\xEAme origine.\"), mdx(\"p\", null, \"Ici, nous sommes dans la situation o\\xF9 nous ne souhaitons pas, ou nous n'avons pas les moyens, d'ajouter des origines au niveau de l'API.\"), mdx(\"p\", null, \"Pour le tutoriel, veuillez donc stopper l'ex\\xE9cution de l'API nomm\\xE9e \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api-cors\"), \".\"), mdx(\"p\", null, \"Veuillez d\\xE9marrer l'API pr\\xE9c\\xE9dente d\\xE9velopp\\xE9e au module 5 : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/fat-model\"), \" ou via le code de ce web repo si vous avez un souci \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \".\"), mdx(\"p\", null, \"Il vous reste aussi \\xE0 vous assurer que votre frontend (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/basic-fetch\"), \") est lui aussi bien d\\xE9marr\\xE9. Il devrait toujours y avoir l'erreur associ\\xE9es aux \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \" donn\\xE9e au sein de la console.\"), mdx(\"p\", null, \"Nous allons mettre en place un m\\xE9canisme au niveau du frontend pour faire passer toutes les requ\\xEAtes \\xE0 destination de l'API par un proxy ; le proxy aura la m\\xEAme origine que le serveur de fichiers statiques ayant offert le frontend.\"), mdx(\"p\", null, \"Voici le workflow que nous allons appliquer \\xE0 notre site g\\xE9rant la pizzeria :\"), mdx(ScrollableImage, {\n    name: \"proxy.png\",\n    minWidth: \"691px\",\n    maxWidth: \"691px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Redirections des requ\\xEAtes via un proxy\"), mdx(\"p\", null, \"Gr\\xE2ce \\xE0 ce diagramme, on voit comment mettre \\xE0 jour le tutoriel pr\\xE9c\\xE9dent qui affichait une erreur au niveau des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORS\"), \" : on va faire une requ\\xEAte GET vers \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/api/pizzas\"), \" et non plus vers \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"http://localhost:3000/pizzas\"), \".\"), mdx(\"p\", null, \"Pour cela, nous avons besoin d'un proxy. Et bien \\xE7a tombe bien, le serveur de d\\xE9veloppement de Webpack met \\xE0 disposition un proxy. Celui-ci est d'ailleurs configur\\xE9 ainsi dans le boilerplate (voir fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"./webpack.config.js\"), \") :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"proxy: {\\n      '/api': {\\n        target: 'http://localhost:3000',\\n        pathRewrite: { '^/api': '' },\\n      },\\n    },\\n\")), mdx(\"p\", null, \"Cela signifie qu'\\xE0 chaque fois qu'une requ\\xEAte sera faite sur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/api\"), \" (on reste sur la m\\xEAme origine que le serveur de fichiers statiques, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8080\"), \" tel que configur\\xE9 dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"./webpack.config.js\"), \" du boilerplate), celle-ci sera redirig\\xE9e vers le port \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3000\"), \", le port de l'API.\\nLe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pathRewrite\"), \" permet de ne pas reprendre \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/api\"), \" dans l'URL de la redirection :\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET /api/pizzas\"), \" devient \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET http://localhost:3000/pizzas\"), \".\"), mdx(\"p\", null, \"Dans le code du tutoriel en cours (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"basic-fetch\"), \"), veuillez mettre \\xE0 jour l'URL au niveau du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {4}\",\n    \"numbered\": true,\n    \"{4}\": true\n  }, \"const HomePage = () => {\\n  clearPage();\\n\\n  fetch('/api/pizzas')\\n    .then((response) => {\\n      if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n      return response.json();\\n    })\\n    .then((pizzas) => {\\n      renderMenuFromString(pizzas);\\n      attachOnMouseEventsToGoGreen();\\n      renderDrinksFromNodes(DRINKS);\\n    })\\n    .catch((err) => {\\n      console.error('HomePage::error: ', err);\\n    });\\n};\\n\")), mdx(\"p\", null, \"N'oubliez pas que votre API (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fat-model\"), \") doit \\xEAtre ex\\xE9cut\\xE9e, tout comme votre frontend (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"basic-fetch\"), \").\"), mdx(\"p\", null, \"A ce stade-ci, l\\xE0 aussi, tout devrait fonctionner, le menu des pizzas est affich\\xE9 suite \\xE0 l'appel \\xE0 notre RESTful API ne relaxant pas la s\\xE9curit\\xE9 !\"), mdx(\"p\", null, \"Si tout fonctionne bien, faites un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre repo (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") avec le message\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"hmi-proxy\"), \"\\\".\"), mdx(\"p\", null, \"En cas de souci, vous pouvez utiliser le code du tutoriel :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour le frontend : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch\"\n  }, \"basic-fetch\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour l'API : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \".\")), mdx(\"p\", null, \"\\uD83C\\uDF6C Voici quelques infos non capitales pour ce cours-ci :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il existe une multitude de proxy pour un environnement de d\\xE9veloppement : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Webpack devServer\"), \" et son proxy, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"VS Code proxy\"), \", proxy l\\xE9ger de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Node\"), \" directement configurable via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"package.json\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"proxy\\\": \\\"http://localhost:3000\\\",\"), \"), ...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il existe par exemple un proxy complet sous Node : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"http-proxy-middleware\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour la production, lorsque vous d\\xE9ployer une application web sur le cloud, il faudra trouver les instructions de votre provider pour voir comment configurer le proxy.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Par exemple, pour configurer un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"static file server\"), \" et son \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"proxy\"), \" sous \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"heroku\"), \" (provider de services d'h\\xE9bergements sur le cloud), il faut configurer le fichier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/static.json\"), \".\")), mdx(\"p\", null, \"\\uD83D\\uDCAD Que pensez-vous du code associ\\xE9 aux t\\xE2ches asynchrones, afin de cha\\xEEner des actions suite au \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Ca n'est pas des plus lisibles... imaginez que vous avez des tonnes de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".then()\"), \", dans lesquels vous allez aussi faire appel \\xE0 des fonctions asynchrones... Ca deviendra vite compliqu\\xE9 comme code.\"), mdx(\"p\", null, \"Nous allons donc voir comment rendre la programmation asynchrone plus l\\xE9g\\xE8re, \\xE0 l'aide de promesses et de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async\"), \" / \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"await\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"d\"\n  }), \" d) Programmation asynchrone \\xE0 l'aide de promesses & async / await\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"d1\"\n  }), \" d.1) Utilisation de promesses\"), mdx(\"h3\", null, \"d.1.1) Introduction\"), mdx(\"p\", null, \"Plut\\xF4t que d'utiliser des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".then()\"), \" pour cha\\xEEner des traitements asynchrones, il est possible de simplifier la syntaxe des promesses \\xE0 l'aide de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"await\"), \".\"), mdx(\"p\", null, \"On va donc \\xE9crire du code d'une mani\\xE8re \\xE9quivalente \\xE0 ce qui serait fait en programmation synchrone.\"), mdx(\"h3\", null, \"d.1.2) async / await & op\\xE9ration asynchrone de lecture de ressources\"), mdx(\"p\", null, \"Nous allons refactorer l'IHM \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch\"\n  }, \"basic-fetch\"), \".\"), mdx(\"p\", null, \"Au sein de votre repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \", veuillez cr\\xE9er le projet nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/async-await\"), \" sur base d'un copi\\xE9 coll\\xE9 de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/basic-fetch\"), \" (ou \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch\"\n  }, \"routing-hmi\"), \".\"), mdx(\"p\", null, \"Pour la suite du tutoriel, nous consid\\xE9rons que tous les chemins absolus d\\xE9marrent du r\\xE9pertoire\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/async-await\"), \".\"), mdx(\"p\", null, \"Nous allons donc refactorer le code o\\xF9 est fait le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \", c'est \\xE0 dire \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Pages/HomePage.js\"), \" (veuillez mettre \\xE0 jour tout le code de la fonction arrow associ\\xE9e \\xE0 la variable \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \") :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {1,5,9}\",\n    \"numbered\": true,\n    \"{1,5,9}\": true\n  }, \"const HomePage = async () => {\\n  try {\\n    clearPage();\\n\\n    const response = await fetch('/api/pizzas');\\n\\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n    const pizzas = await response.json();\\n\\n    renderMenuFromString(pizzas);\\n    attachOnMouseEventsToGoGreen();\\n    renderDrinksFromNodes(DRINKS);\\n  } catch (err) {\\n    console.error('HomePage::error: ', err);\\n  }\\n};\\n\")), mdx(\"p\", null, \"Pour tester ce code, il ne faut pas oublier de d\\xE9marrer la RESTful API auparavant : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/fat-model\"), \" ou via le code de ce web repo si vous avez un souci \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \".\"), mdx(\"p\", null, \"Voici quelques caract\\xE9ristiques importantes de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async\"), \" / \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"await\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"await\"), \" est utilis\\xE9 pour cha\\xEEner une t\\xE2che asynchrone (sur une fonction renvoyant une promesse) et ne peut se faire qu'au sein d'une fonction tagu\\xE9e par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"async\"), \" ; c'est donc le rempla\\xE7ant du \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".then(callback)\"), \".\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\u26A1 Attention, il est donc important qu'au niveau de la fonction arrow, \\xE0 la ligne 1 du code donn\\xE9 ci-dessus, on indique le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"async\"), \" !\\n\\u26A1 Dans le code donn\\xE9 ci-dessus, il est aussi tr\\xE8s important de ne pas oublier les \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"await\"), \". N'h\\xE9sitez pas \\xE0 faire le test en enlevant le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"await\"), \" de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"const pizzas = await response.json();\")), \". Que se passe-t-il dans ce cas ? \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"response.json()\")), \" \\xE9tant une fonction asynchrone, on passera directement \\xE0 la fonction \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"renderMenuFromString(pizzas);\")), \" avant m\\xEAme d'avoir r\\xE9cup\\xE9r\\xE9 les pizzas de notre RESTful API !\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Toute fonction \\\"tagu\\xE9e\\\" par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"async\"), \" renvoie automatiquement une promesse ; cela signifie dans le code ci-dessus que la fonction \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HomePage\"), \" est elle m\\xEAme asynchrone.\\n\\uD83D\\uDCAD Il est \\xE0 parier, et n'h\\xE9sitez pas \\xE0 trouver un moyen de vous en rendre compte visuellement, que le footer s'affiche avant le menu !\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On utilise des blocs \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"try\"), \" / \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"catch\"), \" pour g\\xE9rer les erreur ; c'est donc le rempla\\xE7ant du \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".catch(callback)\"), \".\")), mdx(\"h3\", null, \"d.1.3) Op\\xE9ration asynchrone d'\\xE9criture d'une ressource\"), mdx(\"p\", null, \"A pr\\xE9sent, nous souhaiterions que notre IHM puisse cr\\xE9er une ressource au sein de la RESTful API. Dans un premier temps, nous allons mettre \\xE0 jour le frontend en acceptant que n'importe quel utilisateur puisse cr\\xE9er une pizza et l'ajouter au menu de la pizzeria.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Bien entendu, cela est temporaire. Nous verrons plus tard comment s\\xE9curiser cette op\\xE9ration, en autorisant un admin seulement \\xE0 r\\xE9aliser l'ajout d'une pizza au menu.\"), mdx(\"p\", null, \"Nous allons cr\\xE9er une nouvelle page nomm\\xE9e \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AddPizzaPage.js\"), \".\\nDans un premier temps, nous allons juste r\\xE9aliser une page statique car il est toujours plus ais\\xE9 de d'abord avoir une version visuelle d'une application web, avec la navigation entre les pages, avant de peaufiner chaque page et leurs interactions avec les utilisateurs et les APIS.\\nVeuillez ajouter ce code dans la nouvelle page \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Pages/AddPizzaPage.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { clearPage, renderPageTitle } from '../../utils/render';\\n\\nconst AddPizzaPage = () => {\\n  clearPage();\\n  renderPageTitle('Add a pizza to the menu');\\n  renderAddPizzaForm();\\n};\\n\\nfunction renderAddPizzaForm() {\\n  const main = document.querySelector('main');\\n  const form = document.createElement('form');\\n  form.className = 'p-5';\\n  const title = document.createElement('input');\\n  title.type = 'text';\\n  title.id = 'title';\\n  title.placeholder = 'title of your pizza';\\n  title.required = true;\\n  title.className = 'form-control mb-3';\\n  const content = document.createElement('input');\\n  content.type = 'text';\\n  content.id = 'content';\\n  content.required = true;\\n  content.placeholder = 'Content of your pizza';\\n  content.className = 'form-control mb-3';\\n  const submit = document.createElement('input');\\n  submit.value = 'Add pizza to the menu';\\n  submit.type = 'submit';\\n  submit.className = 'btn btn-danger';\\n  form.appendChild(title);\\n  form.appendChild(content);\\n  form.appendChild(submit);\\n  main.appendChild(form);\\n}\\n\\nexport default AddPizzaPage;\\n\")), mdx(\"p\", null, \"Nous devons aussi ajouter un \\xE9l\\xE9ment dans la Navbar afin de pouvoir acc\\xE9der \\xE0 cette nouvelle page. Pour ce faire, veuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Navbar/Navbar.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {36-38}\",\n    \"numbered\": true,\n    \"{36-38}\": true\n  }, \"// eslint-disable-next-line no-unused-vars\\nimport { Navbar as BootstrapNavbar } from 'bootstrap';\\n\\nconst Navbar = () => {\\n  renderNavbar();\\n};\\n\\nfunction renderNavbar() {\\n  const navbar = document.querySelector('#navbarWrapper');\\n  navbar.innerHTML = `\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-danger\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">e-Pizzeria</a>\\n          <button\\n            class=\\\"navbar-toggler\\\"\\n            type=\\\"button\\\"\\n            data-bs-toggle=\\\"collapse\\\"\\n            data-bs-target=\\\"#navbarSupportedContent\\\"\\n            aria-controls=\\\"navbarSupportedContent\\\"\\n            aria-expanded=\\\"false\\\"\\n            aria-label=\\\"Toggle navigation\\\"\\n          >\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n          </button>\\n          <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <ul class=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\">\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link active\\\" aria-current=\\\"page\\\" href=\\\"#\\\" data-uri=\\\"/\\\">Home</a>\\n              </li>\\n              <li id=\\\"loginItem\\\" class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/login\\\">Login</a>\\n              </li>\\n              <li id=\\\"registerItem\\\" class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/register\\\">Register</a>\\n              </li>  \\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/add-pizza\\\">Add a pizza</a>\\n              </li>           \\n            </ul>\\n          </div>\\n        </div>\\n      </nav>\\n  `;\\n}\\n\\nexport default Navbar;\\n\")), mdx(\"p\", null, \"Et finalement, comme le frontend de ce tutoriel utilise le boilerplate du cours, il faut encore configurer le router de l'IHM afin d'indiquer la page \\xE0 afficher lorsqu'on clique sur le lien dont \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"data-uri\")), \" vaut \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"add-pizza\"), \". Pour ce faire, veuillez mettre \\xE0 jour le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Router/Router.js\"), \" pour ajouter ces deux lignes :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{1,10}\",\n    \"{1,10}\": true\n  }, \"import AddPizzaPage from '../Pages/AddPizzaPage';\\nimport HomePage from '../Pages/HomePage';\\nimport LoginPage from '../Pages/LoginPage';\\nimport RegisterPage from '../Pages/RegisterPage';\\n\\nconst routes = {\\n  '/': HomePage,\\n  '/login': LoginPage,\\n  '/register': RegisterPage,\\n  '/add-pizza': AddPizzaPage,\\n};\\n\")), mdx(\"p\", null, \"A ce stade-ci, votre application \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/async-await\"), \" devrait \\xEAtre fonctionnelle, vous devriez pouvoir naviguer vers la nouvelle page contenant un formulaire pour ajouter une pizza.\"), mdx(\"p\", null, \"Nous allons maintenant ajouter l'interaction avec l'API au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AddPizzaPage\"), \".\\nLorsque nous soumettons le formulaire, nous voulons faire une requ\\xEAte de cr\\xE9ation de pizza \\xE0 la RESTful API, c'est donc une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /pizzas\"), \" qui doit \\xEAtre l'\\xE9quivalent de ce que nous faisions avec REST Client. Pour rappel, nous faisions une requ\\xEAte de ce genre :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\"\n  }, \"### Create a pizza\\nPOST {{baseUrl}}/pizzas\\nContent-Type: application/json\\n\\n{\\n    \\\"title\\\":\\\"Magic Green\\\",\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\n}\\n\")), mdx(\"p\", null, \"Ici, c'est le JS \\xE0 rajouter dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AddPizzaPage\"), \" qui doit, lors du clic, aller chercher les valeurs des deux champs du formulaire pour cr\\xE9er la repr\\xE9sentation des donn\\xE9es \\xE0 cr\\xE9er (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"title\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"content\"), \") et faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" de l'op\\xE9ration de cr\\xE9ation offerte par l'API.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si l'ajout se fait avec succ\\xE8s, on souhaite faire en sorte que l'utilisateur soit redirig\\xE9 vers la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \".\"), mdx(\"p\", null, \"Pour arriver \\xE0 nos fins, veuillez ajouter ce code dans la page \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Pages/AddPizzaPage.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {34,37-63}\",\n    \"numbered\": true,\n    \"{34,37-63}\": true\n  }, \"import { clearPage, renderPageTitle } from '../../utils/render';\\nimport Navigate from '../Router/Navigate';\\n\\nconst AddPizzaPage = () => {\\n  clearPage();\\n  renderPageTitle('Add a pizza to the menu');\\n  renderAddPizzaForm();\\n};\\n\\nfunction renderAddPizzaForm() {\\n  const main = document.querySelector('main');\\n  const form = document.createElement('form');\\n  form.className = 'p-5';\\n  const title = document.createElement('input');\\n  title.type = 'text';\\n  title.id = 'title';\\n  title.placeholder = 'title of your pizza';\\n  title.required = true;\\n  title.className = 'form-control mb-3';\\n  const content = document.createElement('input');\\n  content.type = 'text';\\n  content.id = 'content';\\n  content.required = true;\\n  content.placeholder = 'Content of your pizza';\\n  content.className = 'form-control mb-3';\\n  const submit = document.createElement('input');\\n  submit.value = 'Add pizza to the menu';\\n  submit.type = 'submit';\\n  submit.className = 'btn btn-danger';\\n  form.appendChild(title);\\n  form.appendChild(content);\\n  form.appendChild(submit);\\n  main.appendChild(form);\\n  form.addEventListener('submit', onAddPizza);\\n}\\n\\nasync function onAddPizza(e) {\\n  e.preventDefault();\\n\\n  const title = document.querySelector('#title').value;\\n  const content = document.querySelector('#content').value;\\n\\n  const options = {\\n    method: 'POST',\\n    body: JSON.stringify({\\n      title,\\n      content,\\n    }),\\n    headers: {\\n      'Content-Type': 'application/json',\\n    },\\n  };\\n\\n  const response = await fetch('/api/pizzas', options); // fetch return a promise => we wait for the response\\n\\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n  const newPizza = await response.json(); // json() returns a promise => we wait for the data\\n\\n  console.log('New pizza added : ', newPizza);\\n\\n  Navigate('/');\\n}\\n\\nexport default AddPizzaPage;\\n\")), mdx(\"p\", null, \"Quelques explications sur ce code, pour les parties d\\xE9j\\xE0 connues :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La gestion d'\\xE9v\\xE9nements n'est pas nouvelle. Ici, on met un \\xE9couteur d'\\xE9v\\xE9nements de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"submit\"), \" sur le formulaire. Cela permet d'\\xE9couter tant les clics sur le champs de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"submit\"), \" (le bouton) que si l'utilisateur appuie sur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Enter\"), \".\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\uD83D\\uDC4D On recommande, pour les formulaires, d'utiliser des \\xE9v\\xE9nements de type \\\"submit\\\" plut\\xF4t que des \\xE9v\\xE9nements de type \\\"click\\\" sur le bouton \\\"submit\\\" afin notamment de prendre en compte si l'utilisateur appuie sur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Enter\"), \" pour tenter de soumettre le formulaire.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L'action par d\\xE9faut d'un formulaire, lors d'un submit, et de faire une requ\\xEAte synchrone vers l'URL du backend indiqu\\xE9 dans la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"action\"), \" du formulaire, ou sur la m\\xEAme URL que la page en cours si \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"action\"), \" n'est pas donn\\xE9. Pour \\xE9viter un chargement de page non d\\xE9sir\\xE9 dans le cadre d'une SPA, on stoppe cette action par d\\xE9faut via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"e.preventDefault()\")), \".\")), mdx(\"p\", null, \"Pour la nouveaut\\xE9 et le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour faire une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"POST\"), \", tout comme pour les requ\\xEAtes de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DELETE\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PATCH\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UPDATE\"), \"..., il faut l'indiquer \\xE0 la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch\"), \".\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Cela est indiqu\\xE9 dans un objet que nous appelons g\\xE9n\\xE9ralement \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"options\"), \" qui doit contenir la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"method\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lorsque l'on doit envoyer des donn\\xE9es dans le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"body\"), \" d'une requ\\xEAte, alors il faut le faire au sein de la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"body\"), \". Ici, nous souhaitons envoyer un objet content les propri\\xE9t\\xE9s \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"title\"), \" et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"content\"), \" au format JSON. Nous devons donc utiliser la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"JSON.stringify\")), \" qui permet de cr\\xE9er une repr\\xE9sentation JSON d'un objet JS. Notez ici que nous avons \\xE9crit l'objet JS selon une notation simplifi\\xE9e :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{4-7,9-12}\",\n    \"{4-7,9-12}\": true\n  }, \"const title = document.querySelector('#title').value;\\nconst content = document.querySelector('#content').value;\\n\\n{\\n  title,\\n  content,\\n}\\n// Cet object literal est l'\\xE9quivalent de :\\n{\\n  title: title,\\n  content: content,\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il est tr\\xE8s important de sp\\xE9cifier le type de la repr\\xE9sentation de l'objet qui devrait \\xEAtre utilis\\xE9 par l'API et qui se trouve dans le body de la requ\\xEAte. Cela est fait via un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"header\"), \" et la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Content-Type\"), \" (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"'Content-Type': 'application/json',\")), \").\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\u26A1 Si vous oubliez cela, l'API ne pourra pas parser les donn\\xE9es au format JSON vers des objets JS et donc les op\\xE9rations d'\\xE9criture de ressources \\xE9choueront !\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finalement, si l'op\\xE9ration de cr\\xE9ation de la pizza r\\xE9ussi, nous redirigeons l'utilisateur vers la \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HomePage\"), \" \\xE0 l'aide de la fonction \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Navigate\")), \" offert par le dossier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Router\"), \" du boilerplate du frontend.\")), mdx(\"p\", null, \"Si tout fonctionne bien, faites un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre repo (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") avec le message\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async-await\"), \"\\\".\"), mdx(\"p\", null, \"En cas de souci, vous pouvez acc\\xE9der au code du tutoriel ici :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/async-await\"\n  }, \"async-await\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"d2\"\n  }), \" d.2) Cr\\xE9ation de fonctions asynchrones renvoyant une promesse\"), mdx(\"p\", null, \"Il est si simple, \\xE0 l'aide d'\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async\"), \" / \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"await\"), \", de cr\\xE9er des fonctions asynchrones qui renvoient une promesse, qu'il serait dommage de ne pas le voir.\"), mdx(\"p\", null, \"Imaginons que nous souhaitons cr\\xE9er une fonction asynchrone qui renvoie toutes les pizzas qui sont offertes par l'op\\xE9ration de lecture des pizzas de la RESTful API.\"), mdx(\"p\", null, \"Voici comment nous \\xE9cririons ce code :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"async function getAllPizzas() {\\n  try {\\n    const response = await fetch('/api/pizzas');\\n\\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n    const pizzas = await response.json();\\n\\n    return pizzas;\\n  } catch (err) {\\n    console.error('getAllPizzas::error: ', err);\\n    throw err;\\n  }\\n}\\n\")), mdx(\"p\", null, \"Cette fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAllPizzas\"), \" ne renvoie pas un array de pizzas, mais une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Promise\"), \" !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si la promesse :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"r\\xE9sout avec succ\\xE8s, alors c'est bien un array de pizzas qui sera renvoy\\xE9 par cette fonction.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xE9choue, c'est une exception qui sera renvoy\\xE9e.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Pour que cela fonctionne, vous devez donc faire en sorte, dans vos fonctions asynchrones, de faire un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"throw\"), \" d'une erreur en cas d'\\xE9chec du traitement asynchrone.\")), mdx(\"p\", null, \"Comment utiliser ce code au sein de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \" ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Voici comment le code pourrait \\xEAtre mis \\xE0 jour pour utiliser la fonction asynchrone \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAllPizzas\"), \" au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{1,5}\",\n    \"{1,5}\": true\n  }, \"const HomePage = async () => {\\n  try {\\n    clearPage();\\n\\n    const pizzas = await getAllPizzas();\\n\\n    renderMenuFromString(pizzas);\\n    attachOnMouseEventsToGoGreen();\\n    renderDrinksFromNodes(DRINKS);\\n  } catch (err) {\\n    console.error('HomePage::error: ', err);\\n  }\\n};\\n\")), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"e\"\n  }), \" e) Exercice 6.1 : Int\\xE9gration de la RESTful API au sein de l'IHM de myMovies via un proxy\"), mdx(\"p\", null, \"Vous allez int\\xE9grer le frontend de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies\"), \" r\\xE9alis\\xE9 au module 3 (Exercice 3.1) avec la RESTful API d\\xE9velopp\\xE9e au module 5 (Exercice 5.2).\"), mdx(\"p\", null, \"L'application \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies\"), \" doit permettre ces nouveaux cas d'utilisation (ou use cases):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC1 : l'affichage, sous forme de tableau, de toutes les ressources de type films.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC2 : l'ajout d'une ressource de type films via un formulaire d'ajout d'un film.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC3 : la suppression d'un film.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC4 : la mise \\xE0 jour des donn\\xE9es d'un film (\\xE0 l'exception de l'id associ\\xE9 \\xE0 un film).\")), mdx(\"p\", null, \"Nous acceptons, \\xE0 ce stade-ci, que des utilisateurs anonymes puissent r\\xE9aliser des op\\xE9rations qui normalement devraient \\xEAtre s\\xE9curis\\xE9es. Nous verrons au module prochain comment authentifier et autoriser des utilisateurs afin de prot\\xE9ger l'acc\\xE8s aux op\\xE9rations d'API.\"), mdx(\"p\", null, \"Afin de r\\xE9aliser cet exercice, voici les contraintes d'impl\\xE9mentation :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ex\\xE9cutez votre API se trouvant dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module5/5.2\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Utilisez le contenu de votre r\\xE9pertoire d'exercices \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module3/myMovies\"), \" comme point de d\\xE9part pour cr\\xE9er,dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"web2\"), \"), le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module6/6.1\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Veuillez utiliser le proxy de votre frontend afin de contourner les probl\\xE8mes associ\\xE9 \\xE0 la gestion des CORS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Veuillez d\\xE9velopper de mani\\xE8re incr\\xE9mentale votre IHM, use case par use case, en v\\xE9rifiant le bon fonctionnement de chaque cas d'utilisation avant de passer au d\\xE9veloppement de l'UC suivant (=> d\\xE9velopper UC1, puis UC2, puis UC3, puis UC4).\")), mdx(\"h4\", null, \"\\uD83E\\uDD1D Tips\"), mdx(\"p\", null, \"Cet exercice de consommation d'une API consiste simplement en la mise-\\xE0-jour du frontend \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies\"), \" r\\xE9alis\\xE9 au module 3 (Exercice 3.1) : vous devriez cr\\xE9er de nouvelles pages et ajouter des op\\xE9rations de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" vers votre RESTful API d\\xE9velopp\\xE9e au module 5 (Exercice 5.2). Il n'y a normalement rien \\xE0 faire au niveau de la RESTFul API, si ce n'est de l'ex\\xE9cuter.\"), mdx(\"p\", null, \"Comment g\\xE9rer l'UC de suppression d'un film ?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vous pourriez avoir un bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Delete\"), \" pour chaque ligne du tableau affichant les films. Lors du clic sur un bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Delete\"), \", vous feriez une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DELETE\"), \" vers la RESTful API. Attention, pour une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DELETE\"), \", l'identifiant de l'objet \\xE0 supprimer doit \\xEAtre donn\\xE9e dans l'URL associ\\xE9e au \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Comment retrouver l'identifiant du film affich\\xE9 dans le tableau ?\\nPensez au \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"data-attribute\"), \", vous pouvez cacher de l'information dans l'HTML. Par exemple, chaque bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Delete\"), \" pourrait contenir un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"data-attribute\"), \" \\xE9tant l'id du film. Il est aussi possible d'utiliser la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"id\"), \" du bouton.\")), mdx(\"p\", null, \"Comment g\\xE9rer la mise \\xE0 jour des donn\\xE9es d'un film ?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Option 1 (la plus cool \\xE0 d\\xE9couvrir \\uD83D\\uDE09) : Vous pourriez faire en sorte que l'HTML du tableau affichant les films, lors d'un clic, devienne \\xE9ditable. Pour cette option :\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Voici, \\xE0 quoi pourrait ressembler votre application \\xE0 la fin de l'exercice. Vous avez bien s\\xFBr la libert\\xE9 de faire qqch de totalement diff\\xE9rent visuellement !\", mdx(ScrollableImage, {\n    name: \"movies.png\",\n    minWidth: \"700px\",\n    maxWidth: \"1268px\",\n    mdxType: \"ScrollableImage\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vous pouvez utiliser la propri\\xE9t\\xE9 HTML \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"contenteditable=\\\"true\\\"\"), \" pour rendre les cellules du tableau \\xE9ditables. Voici un exemple pour rendre une cellule associ\\xE9e au titre \\xE9ditable :\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"<td class=\\\"fw-bold text-info\\\" contenteditable=\\\"true\\\">${\\n            element.title\\n}</td>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour acc\\xE9der aux cellules qui se trouvent dans une m\\xEAme ligne que vous mettez \\xE0 jour, vous pouvez utiliser la DOM API de votre browser :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"on obtient le parent d'un \\xE9l\\xE9ment HTML via l'attribut \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"parentElement\"), \" ; par exemple, si vous avez un \\xE9couteur d'\\xE9v\\xE9nements de clics sur un bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Save\"), \", ce bouton se trouvant au sein d'une \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"td\"), \" qui se trouve elle-m\\xEAme au sein d'une \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"tr\"), \" : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"e.target.parentElement.parentElement\")), \"  donne acc\\xE8s \\xE0 la \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"tr\"), \" associ\\xE9e au bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Save\"), \" sur lequel on a cliqu\\xE9.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"on acc\\xE8de aux enfants d'un \\xE9l\\xE9ment HTML via l'attribut \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"children\"), \" ; par exemple, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"tr.children[0]\")), \" donne acc\\xE8s \\xE0 la premi\\xE8re \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"td\"), \" au sein de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"tr\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vous pourriez avoir un bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Save\"), \" pour chaque ligne du tableau affichant un film. Lors d'un clic sur un bouton \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Save\"), \", vous faites appel \\xE0 l'API en faisant la requ\\xEAte de mettre \\xE0 jour toutes les propri\\xE9t\\xE9s du film, m\\xEAme celle n'ayant pas de nouvelles valeurs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attention, pour une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PUT\"), \" (mise \\xE0 jour de toutes les propri\\xE9t\\xE9s d'une ressource) ou de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PATCH\"), \" (mise \\xE0 jour partielle d'une ressource), vous devez indiquer l'id dans l'URL du \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch\"), \", et la repr\\xE9sentation de donn\\xE9es \\xE0 mettre \\xE0 jour doit se trouver dans le body de la requ\\xEAte (ce sont les conventions REST que nous avons fix\\xE9es dans le cadre de ce cours).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si vous aviez besoin de r\\xE9aliser une action en cas de changement du contenu d'une cellule dont \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"contenteditable\"), \" est activ\\xE9, vous pouvez g\\xE9rer le type d'\\xE9v\\xE9nement \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"input\"), \".\")), mdx(\"br\", null)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Option 2 : il est aussi possible de cr\\xE9er un nouveau composant Javascript (une page, une modal ou autre) qui reprendrait un formulaire dont les inputs contiendraient d\\xE9j\\xE0 les valeurs existantes des propri\\xE9t\\xE9s d'un film. \"))), mdx(\"p\", null, \"Veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 6 : integration with RESTful API\"), \"\\\"\\\".\"), mdx(\"p\", null, \"NB : Le code de votre application web se trouve dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") toujours le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module6/6.1\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"f\"\n  }), \" f) \\uD83C\\uDF6C Exercice 6.2 : Autoriser des nouvelles origines via la RESTful API\"), mdx(\"p\", null, \"S'il vous reste du temps, n'h\\xE9sitez pas \\xE0 mettre \\xE0 jour l'API se trouvant dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module5/5.2\"), \" afin d'autoriser toutes les origines locales : faites en sorte que tous les ports soient autoris\\xE9s !\"), mdx(\"p\", null, \"Veuillez ensuite cr\\xE9er une copie de votre frontend d\\xE9velopp\\xE9 \\xE0 l'exercice pr\\xE9c\\xE9dent (Exercice 6.1) et le mettre \\xE0 jour pour ne plus utiliser le proxy du frontend. Vous consommez directement l'API en indiquant son URL compl\\xE8te, y compris le port. Par exemple, pour lire les pizzas du menu, vous faites un fetch \\xE0 l'URL : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:300/pizzas\"), \".\"), mdx(\"p\", null, \"Une fois l'API mise \\xE0 jour, veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 6 : cors\"), \"\\\"\\\".\"), mdx(\"p\", null, \"Le code de votre API se trouve dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") dans le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module6/6.2/api-cors\"), \".\"), mdx(\"p\", null, \"Une fois le frontend mis \\xE0 jour, veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 6 : integration with RESTful API without proxy\"), \"\\\"\\\".\"), mdx(\"p\", null, \"Le code de votre application web se trouve dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") toujours le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module6/6.2/hmi-no-proxy\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/6.fr","frontmatter":{"title":"Module 6 : SPA & comms","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"Cr√©ation de SPA et gestion des communications entre une RESTful API et une IHM","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='512'%20viewBox='0%200%20512%20512'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M227%202a256%20256%200%201059%20509A256%20256%200%2000227%202m7%2054c-82%209-150%2068-172%20147l-2%208%20120%20121c116%20116%20121%20120%20124%20119%2021-4%2052-19%2074-35%2047-35%2079-98%2079-154v-6H329v36h44l43%201a167%20167%200%2001-97%20115l-8%203-105-105-105-105%203-8a165%20165%200%2001287-32l27-23a202%20202%200%2000-184-82M56%20267a200%20200%200%2000196%20189L56%20260v7'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='544'%20height='492'%20viewBox='0%200%20544%20492'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M146%207c-31%208-51%2035-50%2068%201%2015%203%2020%2023%2056a3456%203456%200%200090%20151%2053177%2053177%200%200182%20145c16%2029%2018%2031%2026%2039a66%2066%200%2000113-47c0-19-1-20-33-75l-28-49h52c56%200%2064%200%2075-4a67%2067%200%2000-2-127l-8-2-39-1h-39l17-30c22-38%2023-41%2023-59%200-13%200-15-2-22a66%2066%200%2000-110-25c-8%208-9%2010-35%2055l-28%2048-28-47c-27-46-28-48-36-56a64%2064%200%2000-63-18'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}}]}},"pageContext":{"slug":"/modules/6/"}},"staticQueryHashes":["1696221415","3028011774","3458129946","493526238","575455071"]}