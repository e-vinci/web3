{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/7/","result":{"data":{"mdx":{"id":"cf15ca0b-477a-5bff-b07d-baa8d3979070","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Module 7 : React router & UI library\",\n  \"description\": \"React router & UI library\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar InternalPageMenu = makeShortcode(\"InternalPageMenu\");\nvar PathViewer = makeShortcode(\"PathViewer\");\nvar PathViewerItem = makeShortcode(\"PathViewerItem\");\nvar InternalPageMenuItem = makeShortcode(\"InternalPageMenuItem\");\nvar InternalPageTitle = makeShortcode(\"InternalPageTitle\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 7 : React router & Ant Design\"), mdx(\"p\", null, \"Ce module vous offre principalement la gestion de React Router et l'utilisation d'Ant Design.\"), mdx(InternalPageMenu, {\n    mdxType: \"InternalPageMenu\"\n  }, mdx(PathViewer, {\n    mdxType: \"PathViewer\"\n  }, mdx(PathViewerItem, {\n    to: \"/\",\n    mdxType: \"PathViewerItem\"\n  }, \" web3course \"), mdx(PathViewerItem, {\n    to: \"/modules/7\",\n    selected: true,\n    mdxType: \"PathViewerItem\"\n  }, \" Module 7 \")), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Introduction au routing \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Navigation basique entre pages \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Mise en place de React Router \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Utilisation de useNavigate \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Nested routes \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" URL dynamiques \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Exercice 7.1 : React Router de base \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Comment g\\xE9rer l'\\xE9tat avec React Router ? \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Utilisation d'un OutletContext \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Exercice 7.2 : \\xC9tat avec un router \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Exercice 7.3 : Routes dynamiques \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Introduction \\xE0 Ant Design \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" Exercice 7.4 : Int\\xE9gration de Ant Design dans un projet \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" \\uD83C\\uDF6C Encore d'autres composants Ant Design \"), mdx(InternalPageMenuItem, {\n    mdxType: \"InternalPageMenuItem\"\n  }, \" \\uD83C\\uDF6C Solution des exercices \")), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Introduction au routing \")), mdx(\"p\", null, \"Lorsqu'on parle d'une IHM, nous souhaitons g\\xE9n\\xE9ralement afficher diff\\xE9rents \\xE9crans en r\\xE9agissant aux actions des utilisateurs.\"), mdx(\"p\", null, \"Le routage (ou routing en anglais) est ce qui rend possible l'affichage de diff\\xE9rents \\xE9crans.\"), mdx(\"p\", null, \"Dans les applications \\\"old school\\\" de type Multi-Page-Application (MPA), chaque clic de la souris g\\xE9n\\xE8re une requ\\xEAte HTTP GET vers le serveur qui renvoie l'enti\\xE8ret\\xE9 de la page HTML, m\\xEAme si seulement une petite partie doit \\xEAtre modifi\\xE9e. Par exemple, un clic pour afficher ou cacher un \\xE9l\\xE9ment de la page va initier une requ\\xEAte HTTP GET vers le serveur qui renverra une nouvelle page enti\\xE8re, avec l'\\xE9l\\xE9ment maintenant affich\\xE9 ou cach\\xE9.\"), mdx(\"p\", null, \"Dans les applications que nous d\\xE9veloppons dans ce cours, l'architecture est compl\\xE8tement diff\\xE9rente. Nous d\\xE9veloppons des Single-Page-Applications (SPA) o\\xF9 seulement des parties de page sont modifi\\xE9es en r\\xE9ponse \\xE0 une action de l'utilisateur. Donc on charge une page principale lors du premier acc\\xE8s \\xE0 l'application et ensuite seulement des parties de cette page se voient modifi\\xE9es en fonction des actions de l'utilisateur (d'o\\xF9 le nom Single Page App).\"), mdx(\"p\", null, \"Le routage est le principe d'associer une URL \\xE0 une modification de page (en SPA) ou \\xE0 une navigation vers une autre page (en MPA).\"), mdx(\"p\", null, \"Ainsi, dans une SPA, une seule page est charg\\xE9e la toute premi\\xE8re fois que l'on acc\\xE8de au serveur : c'est \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"index.html\")), \" et tous les assets associ\\xE9s (scripts JS, les images, CSS, sons...).\\nEnsuite, les diff\\xE9rentes parties de l'application qui peuvent \\xEAtre affich\\xE9es sont associ\\xE9es \\xE0 une URL qui sera d\\xE9crite dans la configuration du router de l'application React. L'affichage de ces parties (composants) se fera via une navigation par hyperlink, typiquement via un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"<a>\")), \". Le browser se charge alors de modifier le DOM (c\\xE0d le rendu de toute la page web) g\\xE9n\\xE9ralement en rempla\\xE7ant des \\xE9l\\xE9ments du DOM par le composant React associ\\xE9 \\xE0 la nouvelle route.\"), mdx(\"p\", null, \"Dans nos applications \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Vite + React\"), \", c'est le code transpil\\xE9 du JSX vers le JS qui s'occupera :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d'acc\\xE9der \\xE0 un container pr\\xE9sent dans la repr\\xE9sentation m\\xE9moire des \\xE9l\\xE9ments HTML de la page (par exemple la \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"div#root\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de mettre \\xE0 jour la repr\\xE9sentation m\\xE9moire de ce container avec les \\xE9l\\xE9ments HTML attendu pour la page demand\\xE9.  \")), mdx(\"p\", null, \"Ensuite, le browser n'aura plus qu'\\xE0 redessiner la page sur base de la nouvelle repr\\xE9sentation m\\xE9moire des \\xE9l\\xE9ments HTML de la page.\"), mdx(\"p\", null, \"Notons que dans une MPA, on parle de \\\"Server Side Rendering\\\", car c'est le backend qui est responsable de la g\\xE9n\\xE9ration de l'HTML ; cela se fait souvent \\xE0 l'aide d'un moteur de templating pour g\\xE9n\\xE9rer des views (par exemple via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Handlebars\"), \" qui permet de g\\xE9n\\xE9rer des views dans une application \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Node.js\"), \").\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Navigation basique entre pages \")), mdx(\"p\", null, \"A notre stade actuel de connaissances, nous pourrions tr\\xE8s facilement organiser la navigation entre plusieurs pages, simplement \\xE0 l'aide d'une variable d'\\xE9tat et des gestionnaires de clics.\"), mdx(\"p\", null, \"Pour ce tutoriel, nous allons partir d'une base de code minimaliste. Veuillez donc cr\\xE9er un nouveau projet \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Vite + React\"), \" nomm\\xE9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"routing\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Vous ne vous souvenez plus comment faire ? Voici la commande :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm create vite@latest routing -- --template react\\n\")), mdx(\"p\", null, \"Veuillez remplacer le code de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { useState } from \\\"react\\\";\\n\\nconst HomePage = () => <div>Home Page</div>;\\nconst AboutPage = () => <div>About Page</div>;\\nconst ContactPage = () => <div>Contact Page</div>;\\n\\nconst App = () => {\\n  const [currentPage, setCurrentPage] = useState(\\\"Home\\\");\\n\\n  const navigateTo = (page) => {\\n    setCurrentPage(page);\\n  };\\n\\n  const renderPage = () => {\\n    switch (currentPage) {\\n      case \\\"Home\\\":\\n        return <HomePage />;\\n      case \\\"About\\\":\\n        return <AboutPage />;\\n      case \\\"Contact\\\":\\n        return <ContactPage />;\\n      default:\\n        return <HomePage />;\\n    }\\n  };\\n\\n  return (\\n    <div>\\n      <nav>\\n        <button onClick={() => navigateTo(\\\"Home\\\")}>Home</button>\\n        <button onClick={() => navigateTo(\\\"About\\\")}>About</button>\\n        <button onClick={() => navigateTo(\\\"Contact\\\")}>Contact</button>\\n      </nav>\\n      {renderPage()}\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\")), mdx(\"p\", null, \"Nous avons donc ici d\\xE9fini 3 composants React qui repr\\xE9sentent 3 pages, et une fonction qui permet, lors d'un clic, d'afficher la page associ\\xE9e au bouton.\"), mdx(\"p\", null, \"Veuillez ex\\xE9cuter l'application.\"), mdx(\"p\", null, \"Tout fonctionne bien !\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Mais qu'est-ce qui nous manque ?\"), mdx(\"p\", null, \"Voici ce qui fait d\\xE9faut :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si nous faisons un refresh de la page, nous perdons la page en cours. Par exemple, si nous sommes sur \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ContactPage\"), \", nous serons redirig\\xE9 vers \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HomePage\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nous n'avons pas d'historique des pages visit\\xE9es, nous ne pouvons pas revenir en arri\\xE8re, ni en avant dans le temps.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nous n'avons pas une URL sp\\xE9cifique pour chaque \\xE9cran.\")), mdx(\"p\", null, \"Nous allons donc mettre en place en routeur afin de b\\xE9n\\xE9ficier de ces fonctions manquantes.\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Mise en place de React Router \")), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React Router\"), \" est une librairie qui fournit une belle solution pour g\\xE9rer la navigation dans une application React.\"), mdx(\"p\", null, \"Sa documentation est disponible ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactrouter.com/en/main\"\n  }, \"https://reactrouter.com/en/main\")), mdx(\"h2\", null, \"Installation de la librairie\"), mdx(\"p\", null, \"Dans un premier temps, il faut donc installer la librairie : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npm i react-router-dom\\n\")), mdx(\"h2\", null, \"Mise en place de routes basiques\"), mdx(\"p\", null, \"Dans un premier temps, nous allons voir comment cr\\xE9er la configuration la plus simple d'un router. Veuillez mettre \\xE0 jour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/src/main.jsx\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"5,7-20,24\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"5,7-20,24\\\"\"\n  }, \"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom/client\\\";\\nimport { AboutPage, ContactPage, HomePage } from \\\"./App.jsx\\\";\\nimport \\\"./index.css\\\";\\nimport { RouterProvider, createBrowserRouter } from \\\"react-router-dom\\\";\\n\\nconst router = createBrowserRouter([\\n  {\\n    path: \\\"/\\\",\\n    element: <HomePage />,\\n  },\\n  {\\n    path: \\\"/about\\\",\\n    element: <AboutPage />,\\n  },\\n  {\\n    path: \\\"/contact\\\",\\n    element: <ContactPage />,\\n  },\\n]);\\n\\nReactDOM.createRoot(document.getElementById(\\\"root\\\")).render(\\n  <React.StrictMode>\\n    <RouterProvider router={router}/>  \\n  </React.StrictMode>\\n);\\n\")), mdx(\"p\", null, \"Ici, nous avons donc \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createBrowserRouter\"), \" qui cr\\xE9e une configuration pour nos 3 routes, et chaque route va afficher une page.\"), mdx(\"p\", null, \"Ensuite, nous utilisons le \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RouterProvider\"), \" pour fournir la configuration du routeur \\xE0 l'ensemble de l'application et pour permettre aux composants de l'application d'acc\\xE9der au contexte du router.\"), mdx(\"p\", null, \"Pour cette premi\\xE8re utilisation du router, nous n'allons pas tenter d'optimiser la navigation. Nous allons donc int\\xE9grer \\xE0 chaque page une \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavBar\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Chaque \\xE9l\\xE9ment de navigation va utiliser \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" comme composant pour faire le lien avec les routes que nous avons configur\\xE9es.\"), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"1,5-7\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"1,5-7\\\"\"\n  }, \"import { Link } from \\\"react-router-dom\\\";\\n\\nconst NavBar = () => (\\n  <nav>\\n    <Link to=\\\"/\\\">Home</Link>\\n    <Link to=\\\"/about\\\">About</Link>\\n    <Link to=\\\"/contact\\\">Contact</Link>\\n  </nav>\\n);\\n\\nconst HomePage = () => (\\n  <div>\\n    <NavBar />\\n    <p>Home Page</p>\\n  </div>\\n);\\nconst AboutPage = () => (\\n  <div>\\n    <NavBar />\\n    <p>About Page</p>\\n  </div>\\n);\\nconst ContactPage = () => (\\n  <div>\\n    <NavBar />\\n    <p>Contact Page</p>\\n  </div>\\n);\\n\\nconst App = () => {\\n  return <div></div>;\\n};\\n\\nexport default App;\\nexport { HomePage, AboutPage, ContactPage };\\n\")), mdx(\"p\", null, \"Veuillez lancer votre application et v\\xE9rifier que tout fonctionne. Lorsque vous cliquez sur un lien, le router d\\xE9tecte qu'il y a eu un changement d'\\xE9tat, et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"element\"), \" dans la configuration du router est rappel\\xE9 pour la route associ\\xE9e, amenant au render du composant.\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Utilisation de useNavigate \")), mdx(\"p\", null, \"Si l'on souhaite se rapprocher du design initial, nous pouvons utiliser le hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useNavigate\"), \" qui offre une fonction pour naviguer vers une nouvelle route.\"), mdx(\"p\", null, \"Veuillez mettre \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" \\xE0 jour :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"1,7-9\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"1,7-9\\\"\"\n  }, \"import { useNavigate } from \\\"react-router-dom\\\";\\n\\nconst NavBar = () => {\\n  const navigate = useNavigate();\\n  return (\\n    <nav>\\n      <button onClick={() => navigate(\\\"/\\\")}>Home</button>\\n      <button onClick={() => navigate(\\\"/about\\\")}>About</button>\\n      <button onClick={() => navigate(\\\"/contact\\\")}> Contact</button>\\n    </nav>\\n  );\\n};\\n\\nconst HomePage = () => (\\n  <div>\\n    <NavBar />\\n    <p>Home Page</p>\\n  </div>\\n);\\nconst AboutPage = () => (\\n  <div>\\n    <NavBar />\\n    <p>About Page</p>\\n  </div>\\n);\\nconst ContactPage = () => (\\n  <div>\\n    <NavBar />\\n    <p>Contact Page</p>\\n  </div>\\n);\\n\\nconst App = () => {\\n  return <div></div>;\\n};\\n\\nexport default App;\\nexport { HomePage, AboutPage, ContactPage };\\n\")), mdx(\"p\", null, \"Voila, nous avons un design qui ressemble au design initial.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"N'h\\xE9sitez pas \\xE0 tester le router : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faites un reload quand vous \\xEAtes dans la \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ContactPage\"), \" pour voir que vous y restez bien.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Naviguez sur plusieurs pages, puis utiliser les fonctionnalit\\xE9s \\\"Back\\\" and \\\"Forward\\\" pour voyager dans l'historique de votre Browser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"V\\xE9rifiez bien que l'URL dans le browser correspond bien \\xE0 la page demand\\xE9e.\")), mdx(\"p\", null, \"\\uD83D\\uDCAD Est-ce qu'il n'y a pas quelque chose qui vous d\\xE9range dans la solution actuelle du layout de nos pages ?\"), mdx(\"p\", null, \"Actuellement, nous int\\xE9grons une \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavBar\"), \" dans chaque page. Cela signifie qu'\\xE0 chaque navigation d'une page \\xE0 une autre, c'est l'enti\\xE8ret\\xE9 de la page qui doit \\xEAtre rendue, y compris les \\xE9l\\xE9ments de la \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \", qui pourtant ne changent pas !\"), mdx(\"p\", null, \"Il serait int\\xE9ressant de pouvoir d\\xE9finir un layout de tout ce qui devrait \\xEAtre rendu qu'une seule fois dans notre page, comme par exemple une \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \".\"), mdx(\"p\", null, \"Pour ce faire, nous allons voir les \\\"nested routes\\\".\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Nested routes \")), mdx(\"p\", null, \"Il est possible de d\\xE9finir une route parent, \\xE7a serait la route \\\"racine\\\" ici, pour afficher le squelette de nos pages.\"), mdx(\"p\", null, \"Ensuite, nous afficherons des routes \\\"enfants\\\" au sein de la route \\\"parent\\\". Pour indiquer o\\xF9 les routes \\\"enfants\\\" devront s'afficher chez le \\\"parent\\\", nous utiliserons un \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Outlet>\"), \".\"), mdx(\"p\", null, \"Voici comment d\\xE9finir la route \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/\"), \" pour le squelette de l'application qui se trouvera dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \", puis les 3 routes \\\"enfants\\\" pour les 3 pages (veuillez mettre \\xE0 jour le router au sein de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"main.jsx\"), \") :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"3-18\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"3-18\\\"\"\n  }, \"const router = createBrowserRouter([\\n  {\\n    path: \\\"/\\\",\\n    element: <App />,\\n    children: [\\n      {\\n        path: \\\"\\\",\\n        element: <HomePage />,\\n      },\\n      {\\n        path: \\\"about\\\",\\n        element: <AboutPage />,\\n      },\\n      {\\n        path: \\\"contact\\\",\\n        element: <ContactPage />,\\n      },\\n    ],\\n  },\\n]);\\n\")), mdx(\"p\", null, \"Il ne nous reste plus qu'\\xE0 mettre \\xE0 jour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" pour int\\xE9grer le \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Outlet\"), \" et pour enlever l'appel de chaque page \\xE0 la \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavBar\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"1,15-17,21-22\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"1,15-17,21-22\\\"\"\n  }, \"import { Outlet, useNavigate } from \\\"react-router-dom\\\";\\n\\nconst NavBar = () => {\\n  const navigate = useNavigate();\\n\\n  return (\\n    <nav>\\n      <button onClick={() => navigate(\\\"/\\\")}>Home</button>\\n      <button onClick={() => navigate(\\\"/about\\\")}>About</button>\\n      <button onClick={() => navigate(\\\"/contact\\\")}> Contact</button>\\n    </nav>\\n  );\\n};\\n\\nconst HomePage = () => <p>Home Page</p>;\\nconst AboutPage = () => <p>About Page</p>;\\nconst ContactPage = () => <p>Contact Page</p>;\\n\\nconst App = () => (\\n  <div>\\n    <NavBar />\\n    <Outlet />\\n  </div>\\n);\\n\\nexport default App;\\nexport { HomePage, AboutPage, ContactPage };\\n\")), mdx(\"p\", null, \"Nous avons l\\xE0 un code bien propre, et une navigation parfaitement fonctionnelle !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Il est \\xE0 noter que le code serait encore plus simple si nous utilisions le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" de la librairie (il suffirait de le styler pour qu'il ressemble \\xE0 un bouton).\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" URL dynamiques \")), mdx(\"p\", null, \"Parfois, il est int\\xE9ressant qu'un m\\xEAme composant soit appel\\xE9 sur toute une famille de routes. \"), mdx(\"p\", null, \"Par exemple, dans le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AboutPage\"), \", nous souhaitons afficher une liste d'utilisateurs.  Lorsque nous cliquons sur une utilisatrice ou un utilisateur, nous souhaitons faire appel \\xE0 un nouveau composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UserPage\"), \" qui permettra d'afficher sa page associ\\xE9e avec comme url : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/users/:userId\"), \".\"), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" pour cr\\xE9er la \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UserPage\"), \" et mettre \\xE0 jour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AboutPage\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"19-24,29-48,50-65\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"19-24,29-48,50-65\\\"\"\n  }, \"import { Link, Outlet, useMatch, useNavigate } from \\\"react-router-dom\\\";\\n\\nconst NavBar = () => {\\n  const navigate = useNavigate();\\n\\n  return (\\n    <nav>\\n      <button onClick={() => navigate(\\\"/\\\")}>Home</button>\\n      <button onClick={() => navigate(\\\"/about\\\")}>About</button>\\n      <button onClick={() => navigate(\\\"/contact\\\")}> Contact</button>\\n    </nav>\\n  );\\n};\\n\\nconst HomePage = () => <p>Home Page</p>;\\nconst AboutPage = () => (\\n  <div>\\n    <h1>About Page</h1>\\n    <h2>Authors:</h2>\\n    {users.map((user) => (\\n      <Link key={user.id} to={`/users/${user.id}`} style={{ display: \\\"block\\\" }}>\\n        {user.name}\\n      </Link>\\n    ))}\\n  </div>\\n);\\nconst ContactPage = () => <p>Contact Page</p>;\\n\\nconst users = [\\n  {\\n    id: 1,\\n    name: \\\"John Doe\\\",\\n    email: \\\"john.doe@example.com\\\",\\n    phone: \\\"123-456-7890\\\",\\n  },\\n  {\\n    id: 2,\\n    name: \\\"Jane Smith\\\",\\n    email: \\\"jane.smith@example.com\\\",\\n    phone: \\\"234-567-8901\\\",\\n  },\\n  {\\n    id: 3,\\n    name: \\\"James Brown\\\",\\n    email: \\\"james.brown@example.com\\\",\\n    phone: \\\"345-678-9012\\\",\\n  },\\n];\\n\\nconst UserPage = () => {\\n  const match = useMatch(\\\"/users/:userId\\\");\\n  const userId = match?.params.userId;\\n  if (!userId) return <p>User not found</p>;\\n\\n  const user = users.find((user) => user.id.toString() === userId);\\n  if (!user) return <p>User not found</p>;\\n\\n  return (\\n    <div>\\n      <h2>{user.name}</h2>\\n      <p>Email: {user.email}</p>\\n      <p>Phone: {user.phone}</p>\\n    </div>\\n  );\\n};\\n\\nconst App = () => (\\n  <div>\\n    <NavBar />\\n    <Outlet />\\n  </div>\\n);\\n\\nexport default App;\\nexport { HomePage, AboutPage, ContactPage, UserPage };\\n\")), mdx(\"p\", null, \"Le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AboutPage\"), \" contient des \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" qui pointent vers des URL qui sont \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/users/1\"), \" pour le premier user, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/users/2\"), \" pour le user qui a l'id \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2\"), \"...\"), mdx(\"p\", null, \"Pour r\\xE9cup\\xE9rer cette id dans la page des utilisateurs (le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UserPage\"), \"), nous utilisons le hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useMatch(\\\"/users/:userId\\\")\"), \" pour indiquer le segment dynamique de l'URL par une variable qui sera accessible via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"match.params.userId\"), \".\"), mdx(\"p\", null, \"Pour que tout cela fonctionne, il ne reste plus qu'\\xE0 configurer le router pour cette route dynamique. Veuillez mettre \\xE0 jour la configuration du router dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/src/main.jsx\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"18-21\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"18-21\\\"\"\n  }, \"const router = createBrowserRouter([\\n  {\\n    path: \\\"/\\\",\\n    element: <App />,\\n    children: [\\n      {\\n        path: \\\"\\\",\\n        element: <HomePage />,\\n      },\\n      {\\n        path: \\\"about\\\",\\n        element: <AboutPage />,\\n      },\\n      {\\n        path: \\\"contact\\\",\\n        element: <ContactPage />,\\n      },\\n      {\\n        path: \\\"users/:userId\\\",\\n        element: <UserPage />,\\n      }\\n    ],\\n  },\\n]);\\n\")), mdx(\"p\", null, \"Veuillez v\\xE9rifier que tout fonctionne bien, que vous pouvez afficher la page de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"James Brown\"), \".\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Il est \\xE0 noter que si nous n'avions pas voulu cr\\xE9er une nouvelle page mais plut\\xF4t afficher le d\\xE9tail d'un utilisateur dans le composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AboutPage\"), \", nous aurions pour cr\\xE9er une route \\\"enfant\\\" de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/about\"), \" (en utilisant un \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Outlet\"), \" dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AboutPage\"), \").\"), mdx(\"p\", null, \"Si n\\xE9cessaire, vous pouvez trouver le code associ\\xE9 \\xE0 ce tutoriel ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/ts-demos/tree/main/front/router\"\n  }, \"router\"), \".\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Exercice 7.1 : React Router de base \")), mdx(\"p\", null, \"Nous avons cr\\xE9\\xE9 pour vous une application contenant 3 pages. Malheureusement, nous avons oubli\\xE9 de mettre en place la navigation entre ces pages... \\uD83D\\uDE09\"), mdx(\"p\", null, \"Veuillez cr\\xE9er un nouveau projet nomm\\xE9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exercises/module7/7.1-2-3\"), \" sur base du starter donn\\xE9 ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/web3-exercises/tree/main/tutorials/router-starter\"\n  }, \"router-starter\"), \".\"), mdx(\"p\", null, \"Vous allez donc cr\\xE9er la nouvelle application \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"iMovies\"), \" qui s'occupera d'int\\xE9grer les 3 pages d\\xE9j\\xE0 offertes en mettant en place la navigation.\"), mdx(\"p\", null, \"Vous d\\xE9couvrirez que le router-starter vous offre d\\xE9j\\xE0 un composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Header\")), \" et un composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Footer\")), \". Utilisez donc les biens ; )\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez structurer votre application de mani\\xE8re \\xE0 ce que le header et le footer soient affich\\xE9s sur toutes les pages, mais que ceux-ci ne soient pas r\\xE9p\\xE9t\\xE9s dans chaque page (comme nous l'avons fait pour la \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavBar\"), \" dans le tutoriel).\"), mdx(\"p\", null, \"A vous d'int\\xE9grer le menu de navigation l\\xE0 o\\xF9 il vous semble appropri\\xE9.\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Comment g\\xE9rer l'\\xE9tat avec React Router ? \")), mdx(\"p\", null, \"Il est possible que vous ayez remarqu\\xE9, dans le code du router du tutoriel pr\\xE9c\\xE9dent, qu'il semble compliqu\\xE9, voire impossible, de faire passer des variables d'\\xE9tats & des fonctions pour mettre \\xE0 jour cet \\xE9tat, entre routes...\"), mdx(\"p\", null, \"Pour un site permettant de g\\xE9rer une pizzeria, nous avons mis en place un router pour vous. Ce router est compos\\xE9 de 3 pages : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddPizzaPage\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddDrinkPage\"), \". Nous avons aussi mis en place un \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavBar\"), \" pour la navigation.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pour ce nouveau tutoriel, veuillez cr\\xE9er un nouveau projet \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"router-state\"), \" sur base d'un copier/coller du projet \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/web3-exercises/tree/main/tutorials/router-state-starter\"\n  }, \"router-state-starter\"), \". Attention, il est normal que votre projet ne s'ex\\xE9cute pas car il manque la gestion de l'\\xE9tat.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"N'h\\xE9sitez pas \\xE0 utiliser ce site pour t\\xE9l\\xE9charger le code du dossier router-starter : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://download-directory.github.io/\"\n  }, \"https://download-directory.github.io/\")), mdx(\"p\", null, \"Veuillez vous assurer que vous comprenez le code associ\\xE9 au routage des pages : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"main.jsx\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddPizzaPage\"), \" sont \\xE0 bien analyser.\"), mdx(\"p\", null, \"Pour g\\xE9rer l'\\xE9tat entre siblings (deux pages ici, l'\\xE9quivalent de deux routes), nous avons appris pr\\xE9c\\xE9demment qu'il fallait :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d\\xE9clarer l'\\xE9tat et des fonctions pour mettre \\xE0 jour cet \\xE9tat au niveau du parent ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"passer cet \\xE9tat & fonctions aux enfants (les pages ici) qui vont devoir l'utiliser.\")), mdx(\"p\", null, \"Or ici, la relation \\\"parent/enfant\\\" est compliqu\\xE9e, car :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"il y a un composant \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<App>\"), \" qui contient tout le squelette de l'application, pour les 2 pages de l'application ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"il y a un composant \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Outlet>\"), \" qui s'occupe d'appeler les composants \\\"enfants\\\" (les pages) en fonction de la route.\")), mdx(\"p\", null, \"Ainsi, il n'est pas vraiment possible de classiquement faire un \\\"drill\\\" des variables d'\\xE9tat et des fonctions. On ne peut pas passer les variables d'\\xE9tat, ainsi que les fonctions pour mettre \\xE0 jour cet \\xE9tat, de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" vers \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddMoviePage\"), \".\"), mdx(\"p\", null, \"Il existe plusieurs fa\\xE7on de g\\xE9rer de mani\\xE8re \\xE9l\\xE9gante l'\\xE9tat de l'application. Nous avons vu il y a quelques semaines \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Context\"), \". Ici, nous allons voir ce que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Router\"), \" met \\xE0 notre disposition sans devoir utiliser une nouvelle librairie comme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Context\"), \".\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Utilisation d'un OutletContext \")), mdx(\"p\", null, \"Dans une route \\\"parent\\\", nous allons d\\xE9finir un contexte \\xE0 l'aide du composant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Outlet\"), \". Ce contexte peut \\xEAtre n'importe quelle donn\\xE9e ou fonction que nous souhaitons partager avec les routes \\\"enfants\\\".\"), mdx(\"p\", null, \"Dans une route \\\"enfant\\\", nous pouvons acc\\xE9der au contexte en utilisant le hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useOutletContext\"), \".\"), mdx(\"p\", null, \"Commen\\xE7ons par mettre \\xE0 jour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" en y ajoutant la d\\xE9finition et le passage du contexte aux routes \\\"enfants\\\" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"18-26,37\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"18-26,37\\\"\"\n  }, \"const App = () => {\\n  const [actionToBePerformed, setActionToBePerformed] = useState(false);\\n  const [pizzas, setPizzas] = useState(defaultPizzas);\\n\\n  const addPizza = (newPizza) => {\\n    const pizzaAdded = { ...newPizza, id: nextPizzaId(pizzas) };\\n    setPizzas([...pizzas, pizzaAdded]);\\n  };\\n\\n  const handleHeaderClick = () => {\\n    setActionToBePerformed(true);\\n  };\\n\\n  const clearActionToBePerformed = () => {\\n    setActionToBePerformed(false);\\n  };\\n\\n  const fullPizzaContext = {\\n    addPizza,\\n    pizzas,\\n    setPizzas,\\n    actionToBePerformed,\\n    setActionToBePerformed,\\n    clearActionToBePerformed,\\n    drinks,\\n  };\\n\\n  return (\\n    <div className=\\\"page\\\">\\n      <Header\\n        title=\\\"We love Pizza\\\"\\n        version={0 + 1}\\n        handleHeaderClick={handleHeaderClick}\\n      />\\n      <main>\\n        <NavBar />\\n        <Outlet context={fullPizzaContext} />\\n      </main>\\n      <Footer />\\n    </div>\\n  );\\n};\\n\")), mdx(\"p\", null, \"Maintenant, nous souhaitons mettre \\xE0 jour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \" pour r\\xE9cup\\xE9rer, via le hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useOutletContext\"), \", le \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PizzeriaContext\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"numbered highlighting=\\\"2-7\\\"\",\n    \"numbered\": true,\n    \"highlighting\": \"\\\"2-7\\\"\"\n  }, \"const HomePage = () => {\\n  const {\\n    actionToBePerformed,\\n    clearActionToBePerformed,\\n    pizzas,\\n    drinks,\\n  } = useOutletContext();\\n\\n  return (\\n    <>\\n      <h1>Ma Pizzeria</h1>\\n      <p>\\n        Parce que nous aimons le JS/TS, vous pouvez cliquer sur le header pour\\n        d\\xE9marrer / stopper la musique ; )\\n      </p>\\n      <AudioPlayer\\n        sound={sound}\\n        actionToBePerformed={actionToBePerformed}\\n        clearActionToBePerformed={clearActionToBePerformed}\\n      />\\n\\n      <PizzaMenu pizzas={pizzas} />\\n\\n      <DrinkMenu title=\\\"Nos boissons\\\" drinks={drinks} />\\n    </>\\n  );\\n};\\n\")), mdx(\"p\", null, \"N'oubliez pas dans la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"HomePage\")), \" d'importer \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"useOutletContext\")), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { useOutletContext } from \\\"react-router-dom\\\";\\n\")), mdx(\"p\", null, \"Puis, nous souhaitons aussi mettre \\xE0 jour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddMoviePage\"), \" pour r\\xE9cup\\xE9rer la fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addPizza\"), \" du contexte : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const AddPizzaPage = () => {\\n  const { addPizza } = useOutletContext();\\n\")), mdx(\"p\", null, \"N'oubliez pas de faire l'import de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useOutletContext\"), \" et du type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PizzeriaContext\"), \".\\nUne fois les changements effectu\\xE9s, vous devriez avoir une application pleinement fonctionnelle, avec un routing moderne et une gestion \\xE9l\\xE9gante de l'\\xE9tat.\"), mdx(\"p\", null, \"Si n\\xE9cessaire, vous pouvez trouver le code associ\\xE9 \\xE0 ce tutoriel ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/web3-exercises/tree/main/tutorials/router-state\"\n  }, \"router-state\"), \".\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Exercice 7.2 : \\xC9tat avec un router \")), mdx(\"p\", null, \"Veuillez continuer votre exercice pr\\xE9c\\xE9dent dans le projet existant et nomm\\xE9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exercises/module7/7.1-2-3\"), \" en y int\\xE9grant une \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddMoviePage\"), \" qui permette d'ajouter un film \\xE0 la liste des films. Bien s\\xFBr, la \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \" doit aussi \\xEAtre mise \\xE0 jour. Une fois un film ajout\\xE9, l'utilisateur est automatiquement redirig\\xE9 vers la \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MovieListPage\"), \" qui liste les films (et qui ne permet donc plus d'ajouter un film).\"), mdx(\"p\", null, \"Veuillez utiliser un \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OutletContext\"), \" pour g\\xE9rer l'\\xE9tat de l'application.\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Exercice 7.3 : Routes dynamiques \")), mdx(\"p\", null, \"Veuillez continuer l'exercice pr\\xE9c\\xE9dent dans le projet existant et nomm\\xE9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exercises/module7/7.1-2-3\"), \".\"), mdx(\"p\", null, \"Nous vous demandons : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"De mettre \\xE0 jour la \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HomePage\"), \" afin qu'elle affiche une liste reprenant uniquement les titres de vos films favoris (sans d'autres infos associ\\xE9es aux films telles que la description...).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il doit \\xEAtre possible de pouvoir cliquer sur le titre d'un de vos films favoris et de naviguer vers une nouvelle \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MoviePage\"), \" qui affichera toutes les infos de ce film-ci. Pour ce faire, vous devez ajouter un id \\xE0 vos films, et cette id doit \\xEAtre visible dans l'URL quand les utilisateurs cliquent sur un titre donn\\xE9 dans la \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HomePage\"), \".\")), mdx(\"p\", null, \"\\uD83D\\uDCAD Que pensez-vous de cette gestion de l'\\xE9tat par rapport \\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Context\"), \" ?\"), mdx(\"p\", null, \"Nous avons vu que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Router\"), \" nous offre une solution pour g\\xE9rer l'\\xE9tat de l'application sans devoir utiliser \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Context\"), \". Cela est une solution \\xE9l\\xE9gante pour des applications de taille moyenne, pour g\\xE9rer un \\xE9tat partag\\xE9 par plusieurs pages. \"), mdx(\"p\", null, \"Pour des applications bien plus complexes, il est possible que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React Context\"), \" soit plus adapt\\xE9.\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Introduction \\xE0 Ant Design \")), mdx(\"p\", null, \"Nous allons \\xE0 pr\\xE9sent int\\xE9grer une biblioth\\xE8que de composants React qui va nous rendre un certain nombre de services pour la conception, ainsi que la cr\\xE9ation de notre interface utilisateur. Il en existe plusieurs, mais nous avons choisi ici de vous proposer : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \".\"), mdx(\"p\", null, \"Dans un premier temps, \\\"d\\xE9ambulez\\\" sur le site internet \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ant.design/\"\n  }, \"https://ant.design/\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \" pour vous faire une id\\xE9e des \\\"services\\\" rendus par ce module (~5-10min). Vous remarquerez que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \" semble proposer plusieurs choses :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Un ensemble de \\\"patterns\\\", et \\\"principes\\\" \\xE0 respecter pour la cr\\xE9ation d'interfaces graphiques efficaces : \", \"[Introduction]\", \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/docs/spec/introduce\"\n  }, \"https://ant.design/docs/spec/introduce\"), \") \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Un ensemble d'outils pour vous aider dans la cr\\xE9ation d'interfaces (application de prototypage, des templates de sites web...).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Un ensemble de composants \\\"pr\\xEAts \\xE0 l'emploi\\\", pour la cr\\xE9ation d'interfaces graphiques : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/components/overview/\"\n  }, \"Components Overview\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \".\")), mdx(\"p\", null, \"C'est sur ce dernier point que nous allons principalement travailler. \"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" Exercice 7.4 : Int\\xE9gration de Ant Design dans un projet \")), mdx(\"p\", null, \"Veuillez cr\\xE9er un nouveau projet dans le r\\xE9pertoire \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"/exercises/module7/7.4\")), \" de votre repo sur base d'un \\\"copier / coller\\\" du contenu de l'application d\\xE9velopp\\xE9e aux exercices pr\\xE9c\\xE9dents (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/exercises/module7/7.1-2-3\"), \").\"), mdx(\"p\", null, \"Commen\\xE7ons par int\\xE9grer \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \" dans notre projet.\\nPour cela, consultez la documentation officielle \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ant.design/docs/react/use-with-vite\"\n  }, \"Use with Vite\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \". \"), mdx(\"p\", null, \"Veuillez faire attention \\xE0 ne pas copier simplement les commandes, mais \\xE0 bien r\\xE9fl\\xE9chir \\xE0 leur utilit\\xE9, tout en lisant attentivement la documentation.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Par exemple, inutile de faire la premi\\xE8re commande \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"npm create vite antd-demo\")), \" car notre projet existe d\\xE9j\\xE0...\"), mdx(\"h2\", null, \"Ant Design Inputs & Buttons\"), mdx(\"p\", null, \"Ensuite, commen\\xE7ons par changer les \\\"inputs\\\" de notre composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"AddMovieForm\")), \", en utilisant les composants \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Input\"), \"\\\" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ant.design/components/input/\"\n  }, \"Input\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pour cela, consultez la documentation officielle, en regardant plus en d\\xE9tail les exemples, et notamment le code source associ\\xE9. Cliquez sur l\\u2019ic\\xF4ne \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"< >\")), \"\\\" en dessous d'un exemple pour voir le code source associ\\xE9 \\xE0 l'exemple. Pour avoir une vue compl\\xE8te des props que vous pouvez passer au composant, consultez la section API \\xE0 la fin de la page. L'exemple \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Basic usage\"), \"\\\" devrait nous suffire dans un premier temps.\"), mdx(\"p\", null, \"Faisons de m\\xEAme pour le bouton, en utilisant le composant \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Button\")), \"\\\" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ant.design/components/button/\"\n  }, \"Button\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \".\"), mdx(\"p\", null, \"Si vous le souhaitez, n'h\\xE9sitez pas \\xE0 ajouter des petites ic\\xF4nes dans les boutons, des pr\\xE9fixes sur les inputs... pour vous rendre compte de la simplicit\\xE9.\"), mdx(\"h2\", null, \"Ant Design Forms\"), mdx(\"p\", null, \"Nous avons maintenant utilis\\xE9 nos premiers composants \\\"externes\\\" propos\\xE9s par \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \". Nous allons maintenant remplacer notre balise \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"form\")), \" par le formulaire \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \" qui va nous rendre beaucoup de services.\"), mdx(\"p\", null, \"Consultons la documentation officielle du composant \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ant.design/components/form/\"\n  }, \"Form\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \", et plus particuli\\xE8rement le \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Basic Usage\"), \"\\\", et adaptons notre code pour en faire usage. Nous constaterons que ce composant nous rend plusieurs services :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validation des champs : veuillez faire en sorte que tous les champs soient requis pour l'ajout d'une anecdote.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gestion de l'\\xE9tat du formulaire int\\xE9gr\\xE9 : nous ne devons plus utiliser des \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"useState()\")), \" avec des \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"onChange()\")), \" pour contr\\xF4ler le formulaire.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gestion plus simple du submit du formulaire.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gestion du \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"layout\"), \"\\\" du formulaire, avec alignement des labels...\")), mdx(\"p\", null, \"N'h\\xE9sitez pas \\xE0 consulter les autres options possibles sur les formulaires, il y en a pour tous les cas d'utilisation...\"), mdx(\"p\", null, \"Cet exercice se termine une fois que vous avez int\\xE9gr\\xE9 les composants \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Input\")), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"InputNumber\")), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Button\")), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Form\")), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ant Design\"), \" dans votre application, et que vous utilisez l'\\xE9tat int\\xE9gr\\xE9 du formulaire pour ajouter un film \\xE0 la liste des films.\"), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" \\uD83C\\uDF6C Encore d'autres composants Ant Design \")), mdx(\"p\", null, \"N'h\\xE9sitez pas \\xE0 continuer la modification de votre application en utilisant d'autres composants. \"), mdx(\"p\", null, \"Nous vous conseillons :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/components/layout/\"\n  }, \"Layout\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \" : pour le layout de votre projet, avec un menu, un footer...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/components/message/\"\n  }, \"Message\"), \" ou \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/components/alert/\"\n  }, \"Alert\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \" pour les notifications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/components/list/\"\n  }, \"List\"), \" ou \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ant.design/components/table/\"\n  }, \"Table\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r9\"\n  }, \"[R.9]\"), \" pour la liste des films.\")), mdx(\"h1\", null, mdx(InternalPageTitle, {\n    mdxType: \"InternalPageTitle\"\n  }, \" \\uD83C\\uDF6C Solution des exercices \")), mdx(\"p\", null, \"Une solution pour les exercices de ce module se trouvent ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/web3-exercises/tree/main/exercises/module7\"\n  }, \"module7\")), mdx(\"p\", null, \"N'h\\xE9sitez pas \\xE0 utiliser \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://download-directory.github.io/\"\n  }, \"https://download-directory.github.io/\"), \" pour t\\xE9l\\xE9charger le dossier complet (sans devoir cloner tout le repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"web3-exercises\")), \"). Vous devez juste indiquer le lien vers le dossier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"module7\")), \" dans le champ \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Download Directory\")), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/web3-exercises/tree/main/exercises/module7\"\n  }, \"https://github.com/e-vinci/web3-exercises/tree/main/exercises/module7\"), \" puis taper sur la touche \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Enter\")), \" de votre clavier.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/7.fr","frontmatter":{"title":"Module 7 : React router & UI library","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"React router & UI library","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#683898","images":{"fallback":{"src":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/web3/static/1b27e491527e99eeac84485aef739cd3/7af5e/opinions.png","srcSet":"/web3/static/1b27e491527e99eeac84485aef739cd3/7af5e/opinions.png 363w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/1b27e491527e99eeac84485aef739cd3/f319a/opinions.webp 363w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.41597796143250687}},"base":"opinions.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/web3/static/4ac56fca29eee6cf101be55d24c59b72/79afd/scores.png","srcSet":"/web3/static/4ac56fca29eee6cf101be55d24c59b72/79afd/scores.png 287w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/4ac56fca29eee6cf101be55d24c59b72/c6f03/scores.webp 287w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.494773519163763}},"base":"scores.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#181818","images":{"fallback":{"src":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/d8efd/autocompletion.png","srcSet":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/d8efd/autocompletion.png 570w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/08f60/autocompletion.webp 570w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6964912280701754}},"base":"autocompletion.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/web3/static/24dee9cafd76e7c25dc74141c33450b2/e53ce/propDrilling.png","srcSet":"/web3/static/24dee9cafd76e7c25dc74141c33450b2/c0a68/propDrilling.png 750w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/8e03e/propDrilling.png 1080w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/e53ce/propDrilling.png 1128w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/24dee9cafd76e7c25dc74141c33450b2/6e63e/propDrilling.webp 750w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/fcd24/propDrilling.webp 1080w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/9bf70/propDrilling.webp 1128w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7677304964539007}},"base":"propDrilling.png"}}]}},"pageContext":{"slug":"/modules/7/"}},"staticQueryHashes":["1696221415","3028011774","3458129946","493526238","501654901","575455071"]}