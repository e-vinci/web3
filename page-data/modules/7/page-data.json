{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/7/","result":{"data":{"mdx":{"id":"4d185e0d-4929-533b-9ad4-e981785d1a5c","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Module 7 : SPA & sécurisation\",\n  \"description\": \"Sécurisation de SPA à l'aide d'authentification & autorisation JWT\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ScrollableImage = makeShortcode(\"ScrollableImage\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 7 : SPA & s\\xE9curisation\"), mdx(\"p\", null, \"Ce module vous offre principalement la s\\xE9curisation de SPA \\xE0 l'aide d'authentification & autorisation JWT.\"), mdx(\"p\", null, \"Dans un premier temps, nous allons voir comment s\\xE9curiser les acc\\xE8s aux op\\xE9rations d'une API.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Puis, nous allons voir comment int\\xE9grer ces API s\\xE9curis\\xE9es au sein d'IHM.\"), mdx(\"p\", null, \"En r\\xE9sum\\xE9, on souhaite s\\xE9curiser l'acc\\xE8s\\naux utilisateurs, de fa\\xE7on moderne, \\xE0 certaines op\\xE9rations sur des ressources.\"), mdx(\"p\", null, \"Voici les sujets trait\\xE9s :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a\"\n  }, \"Authentification s\\xE9curis\\xE9e et autorisation d'acc\\xE8s aux op\\xE9rations d'une RESTful API via JWT\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a1\"\n  }, \"Authentification et autorisation : g\\xE9n\\xE9ralit\\xE9s\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a2\"\n  }, \"Token JWT\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.3) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a3\"\n  }, \"Authentification & autorisation stateless via JWT & Express\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a.4) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a4\"\n  }, \"Client REST\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b\"\n  }, \"Utilisation de JWT au sein d'une IHM\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b1\"\n  }, \"Authentifier un utilisateur via une IHM & JWT\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b2\"\n  }, \"Autoriser l'appel \\xE0 une op\\xE9ration prot\\xE9g\\xE9e\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b.3) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b3\"\n  }, \"Probl\\xE8mes de s\\xE9curit\\xE9\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c\"\n  }, \"Exercice 7.1 : Authentification & autorisation au sein de myMovies\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d\"\n  }, \"S\\xE9curisation de RESTful API\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d1\"\n  }, \"Introduction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d2\"\n  }, \"Protection contre les attaques XSS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d.3) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d3\"\n  }, \"S\\xE9curisation des passwords\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#e\"\n  }, \"Exercice 7.2 : S\\xE9curisation de l'API de myMovies\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#f\"\n  }, \"\\uD83C\\uDF6C Exercice 7.3 : Auto-refresh de myMovies\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"g) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#g\"\n  }, \"\\uD83C\\uDF6C Exercice 7.4 : Gestion de la navigation lors de l'auto-refresh de myMovies\"))), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"a\"\n  }), \"a) Authentification s\\xE9curis\\xE9e et autorisation d'acc\\xE8s aux op\\xE9rations d'une RESTful API via JWT\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a1\"\n  }), \" a.1) Authentification et autorisation : g\\xE9n\\xE9ralit\\xE9s\"), mdx(\"h3\", null, \"a.1.1) Authentification, c'est quoi ?\"), mdx(\"p\", null, \"L'authentification, c'est le processus de v\\xE9rifier qui est l'utilisateur d'une application.\"), mdx(\"p\", null, \"Pour authentifier un utilisateur, on va g\\xE9n\\xE9ralement passer via un formulaire de connexion, lui demandant un username et un password.\"), mdx(\"h3\", null, \"a.1.2) Autorisation, c'est quoi ?\"), mdx(\"p\", null, \"L'autorisation, c'est le processus de v\\xE9rifier ce \\xE0 quoi un utilisateur \\xE0 acc\\xE8s.\"), mdx(\"p\", null, \"Une API va autoriser les acc\\xE8s \\xE0 certaines op\\xE9rations en fonction des privil\\xE8ges associ\\xE9s aux utilisateurs. Il y aura des op\\xE9rations qui seront autoris\\xE9es : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour tous les utilisateurs, tant anonymes qu'authentifi\\xE9s ; imaginez par exemple les op\\xE9rations de lectures de produits sur un site \\\"vitrine\\\". Il ne faut pas devoir cr\\xE9er de compte utilisateur pour pouvoir afficher les produits du site.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour tous les utilisateurs authentifi\\xE9s, peu importe leurs privil\\xE8ges ; imaginez le fait de pouvoir poster des messages dans un forum ; il faut avoir un compte pour pouvoir le faire, mais il ne faut pas de privil\\xE8ges sp\\xE9cifiques (pas besoin d'\\xEAtre admin).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour seulement un ou plusieurs utilisateur(s) authentifi\\xE9(s) ayant les privil\\xE8ges requis ; imaginez une op\\xE9ration de lecture de tous les profils des utilisateurs d'une banque ; il faut avoir un compte admin de la banque pour pouvoir le faire. Ca serait catastrophique si n'importe quel utilisateur authentifi\\xE9 pourrait acc\\xE9der aux profils de tous les utilisateurs !\")), mdx(\"h3\", null, \"a.1.3) Diff\\xE9rents moyens d'authentification\"), mdx(\"p\", null, \"Il existe de nombreux m\\xE9canismes d'authentification.\"), mdx(\"p\", null, \"Traditionnellement, ou anciennement, nous avons l'authentification qui est support\\xE9e \\xE0 l'aide de cookies. L'utilisateur envoie via un formulaire son username et password, le serveur v\\xE9rifie ceux-ci et cr\\xE9e un id de session et le renvoie \\xE0 l'utilisateur via un cookie.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Apr\\xE8s l'authentification, \\xE0 chaque requ\\xEAte du client sur ce serveur, le cookie est envoy\\xE9, et le serveur, qui a sauvegard\\xE9 la session, va retrouver la session sur base de l'id de session pr\\xE9sent dans le cookie et va autoriser ou non l'acc\\xE8s \\xE0 l'op\\xE9ration demand\\xE9e par le client.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"C'est ce qu'on appelle une authentification \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stateful\"), \".\"), mdx(\"p\", null, \"Un m\\xE9canisme d'authentification \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stateful\"), \" indique que le serveur est responsable de sauvegarder les donn\\xE9es de session des utilisateurs. \"), mdx(\"p\", null, \"On parle de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"session\"), \" d'un utilisateur comme \\xE9tant toute la dur\\xE9e o\\xF9 le client s'authentifie \\xE0 l'application web jusqu'\\xE0 ce qu'il quitte cette application, lorsqu'il ferme son browser.\"), mdx(\"p\", null, \"De mani\\xE8re plus moderne, nous avons des m\\xE9canismes d'authentification qui sont dits \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stateless\"), \". Dans ce genre de m\\xE9canisme, c'est le client qui doit sauvegarder les donn\\xE9es de session, et donc le browser. L'authentification \\xE0 l'aide de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tokens\"), \" devient tr\\xE8s populaires.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Il existe diff\\xE9rents moyen de l'impl\\xE9menter. Dans le cadre de ce cours, nous focusserons sur la fa\\xE7on la plus habituel, les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JSON Web Token\"), \", ou \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JWT\"), \".\"), mdx(\"p\", null, \"Il existe d'autres m\\xE9canismes tr\\xE8s modernes qui utilisent des tokens, mis en place par des tiers : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OAuth\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OpenId\"), \"... Ces m\\xE9canismes sont mis en place par Microsoft, Google, Facebook... Nous ne les verrons pas dans le cadre de cours. N\\xE9anmoins, \\xE0 la fin de ce cours, vous devriez \\xEAtre aptes \\xE0 pouvoir les utiliser, sous r\\xE9serve de bien lire la documentation.\"), mdx(\"h3\", null, \"## \", mdx(\"a\", {\n    id: \"a1.4\"\n  }), \"  a.1.4) Stateful VS stateless authentication\"), mdx(\"p\", null, \"Quels sont les avantages & inconv\\xE9nients d'une authentification stateful ? et d'une authentification stateless ?\"), mdx(\"h4\", null, \"Authentification stateful\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Inconv\\xE9nients\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La session utilise de la m\\xE9moire pour chaque utilisateur.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Le backend n'a aucune mani\\xE8re de d\\xE9terminer si le frontend s'est d\\xE9connect\\xE9 du site ou non : gestion de l'expiration d'une session plus compliqu\\xE9e, notamment si le frontend revient apr\\xE8s une longue dur\\xE9e.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Toutes les sessions sont perdues en cas de red\\xE9marrage du serveur (r\\xE9authentification).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Load balancing compliqu\\xE9 ; en effet, si un client fait une requ\\xEAte, pendant toute la dur\\xE9e de la session, s'il y a plusieurs serveurs qui peuvent y r\\xE9pondre, comment est g\\xE9r\\xE9 la session de ce client, par quel(s) serveur(s), comment se partagent-ils les donn\\xE9es de session ? Ou est-ce que \\xE7a doit toujours \\xEAtre le m\\xEAme serveur qui r\\xE9pond au m\\xEAme client ?\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Avantages\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Peu gourmand en ressource et tr\\xE8s rapide ; en effet, une fois qu'une session est en place, il est tr\\xE8s rapide de v\\xE9rifier que le cookie contient le bon id de session.\")), mdx(\"h4\", null, \"Authentification stateless\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Inconv\\xE9nients\"), \" :\\nComme le serveur ne retient plus l'utilisateur en m\\xE9moire, il doit utiliser de la cryptographie pour cr\\xE9er et valider les token ; c'est donc consommateur en ressource.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Avantages\"), \" : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pas de session \\xE0 g\\xE9rer, m\\xEAme apr\\xE8s red\\xE9marrage du serveur, il n'y a pas de r\\xE9authentification n\\xE9cessaire.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Evolutif, utilisation facile de plusieurs serveurs si du load balancing est n\\xE9cessaire ; en effet, comme chaque requ\\xEAte du client contient toutes les infos pour se faire autoriser, peu importe quel est le serveur qui va prendre en charge la requ\\xEAte.\")), mdx(\"p\", null, \"Notons que la \\\"scalability\\\" horizontale, la possibilit\\xE9 de permettre \\xE0 une application d'augmenter sa capacit\\xE9 de r\\xE9pondre \\xE0 une charge grandissante simplement en ajoutant des machines, est quelque chose de tr\\xE8s important \\xE0 notre \\xE9poque.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Certaines applications web ont des centaines de millions d'utilisateurs ; pour celles-ci, on ne peut pas compter sur la \\\"scalability\\\" verticale, c'est-\\xE0-dire le fait d'augmenter les ressources d'une machine, en augmentant sa RAM, son processeur, son espace de stockage...\"), mdx(\"p\", null, \"D\\xE8s lors, dans le cadre de ce cours, nous allons pr\\xE9f\\xE9rer les applications web qui peuvent tourner sur des serveurs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stateless\"), \".\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a2\"\n  }), \"a.2) Token JWT\"), mdx(\"p\", null, \"Les JSON Web token, ou JWT, appartiennent \\xE0 un standard internet permettant l'\\xE9change s\\xE9curis\\xE9 de tokens entre plusieurs parties.\"), mdx(\"p\", null, \"Un JWT contient trois parties et ressemblera \\xE0 qqch du style car ses 3 parties, une fois pr\\xEAtes, sont encod\\xE9es en base64 :\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.\")), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.\")), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\")), \".\"), mdx(\"p\", null, \"Voici les caract\\xE9ristiques de ses trois parties :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"l'\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ent\\xEAte\"), \" (ou header) : un objet JSON identifiant le type de token (JWT) et l'algorithme utilis\\xE9 pour g\\xE9n\\xE9rer la signature du token (HS256), un algorithme de hachage. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"payload\"), \" : un objet JSON permettant de sp\\xE9cifier le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"claim\"), \" ; ce sont des param\\xE8tres optionnels pr\\xE9cisant les affirmations associ\\xE9es au token, comme la date d'expiration du token, son cr\\xE9ateur, le fait que l'utilisateur est admin... g\\xE9n\\xE9ralement, on y met pas trop d'info, principalement l'identifiant de l'utilisateur ; si l'API a besoin de plus d'info concernant l'utilisateur, elle ira g\\xE9n\\xE9ralement les chercher dans son support de donn\\xE9es.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"la \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"signature\"), \" : c'est une signature num\\xE9rique construite \\xE0 partir d'un secret priv\\xE9 ou d'une cl\\xE9 publique/priv\\xE9e, via l'algorithme pr\\xE9cis\\xE9 dans la signature.\")), mdx(\"p\", null, \"\\uD83D\\uDCAD C'est bien joli tout \\xE7a, mais comment \\xE7a permet de s\\xE9curiser la session d'un utilisateur ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"G\\xE9n\\xE9ralement, l'API, et elle uniquement, connait le secret priv\\xE9. Elle va donc cr\\xE9er le token d'un utilisateur authentifi\\xE9, en y ajoutant le claim (ou les affirmations) qu'elle juge utile.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Lorsque le client re\\xE7oit son token, il va le sauvegarder dans son browser.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pour chaque requ\\xEAte o\\xF9 il devra se faire autoriser par l'API, le client enverra son token au sein d'un header de la requ\\xEAte.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"L'API utilisera le secret priv\\xE9, connu d'elle-m\\xEAme uniquement, pour v\\xE9rifier la signature du token. Si tout est OK, c'est que l'utilisateur est bien authentifi\\xE9 et que son claim est OK.\"), mdx(\"p\", null, \"Imaginez maintenant qu'un hackeur tente de modifier le token, pour modifier le claim, notamment en changeant l'id de l'utilisateur pr\\xE9sent dans le payload du token.\\nEt bien la signature ne correspondra plus \\xE0 ce token l\\xE0 ! L'API le d\\xE9tectera.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pour que le hackeur r\\xE9ussisse son acte malicieux, il est oblig\\xE9 de conna\\xEEtre le secret priv\\xE9 qui ne doit \\xEAtre connu que de l'API.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Seulement dans le cas o\\xF9 le hackeur ou la hackeuse conna\\xEEt le secret priv\\xE9, pourra-t-il ou pourra-t-elle g\\xE9n\\xE9rer un nouveau token qui sera valid\\xE9 par l'API. Pas \\xE9vident...\"), mdx(\"p\", null, \"Ainsi, on peut imaginer un token comme une enveloppe s\\xE9curis\\xE9 par un cadenas tr\\xE8s sp\\xE9cial : ce cadenas, qui est mis sur l'enveloppe contenant, par exemple, l'identifiant d'un utilisateur, est ferm\\xE9 par la cl\\xE9 \\uD83D\\uDD11 que seulement conna\\xEEt l'API.\\nSi quelqu'un touche \\xE0 l'enveloppe, le cadenas ne s'ouvrira plus avec la \\uD83D\\uDD11 de l'API : la tentative de hackage sera d\\xE9tect\\xE9e !\\nSi quelqu'un tente de cr\\xE9er une enveloppe s\\xE9curis\\xE9, il le fera avec une autre cl\\xE9, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uD83D\\uDDDD\"), \" par exemple, car il ne conna\\xEEt pas \\uD83D\\uDD11. L'API, tentant d'ouvrir l'enveloppe s\\xE9curis\\xE9e \\xE0 l'aide de \\uD83D\\uDD11, elle ne s'ouvrira pas : la tentative de hacking sera d\\xE9tect\\xE9e ! \"), mdx(\"p\", null, \"\\uD83D\\uDCAD Est-ce que cette m\\xE9taphore d'enveloppe s\\xE9curis\\xE9e vous parle ?\\nAttention que dans la r\\xE9alit\\xE9, le payload classique d'un token sera d\\xE9codable, que l'on connaisse ou pas le secret priv\\xE9. Il est encod\\xE9 en base64 ! Ne mettez donc jamais de secrets dans le payload d'un token !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si vraiment un jour vous deviez mettre un secret dans un payload, bien que d\\xE9conseill\\xE9, vous pourriez toujours le faire en cryptant le payload.\"), mdx(\"p\", null, \"\\uD83D\\uDC4D Le m\\xE9canisme de token assure que l'on aie une tr\\xE8s haute probabilit\\xE9 de d\\xE9tecter les alt\\xE9rations faites sur les tokens, les tentatives de forgeage gr\\xE2ce \\xE0 la signature de ceux-ci.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u26A1 Par contre, si nous laissons tra\\xEEner des informations dans le payload d'un token comme un password d'un utilisateur et son username, alors l\\xE0, c'est juste un beau cadeau pour les hackeurs, il n'auront qu'\\xE0 utiliser le formulaire de connexion et prendre possession de notre identit\\xE9 \\uD83D\\uDE28.\"), mdx(\"p\", null, \"Il existe un site fort int\\xE9ressant qui montre la structure d'un token et qui permet de les d\\xE9coder : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jwt.io/\"\n  }, \"jwt.io\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r63\"\n  }, \"[R.63]\"), \". Nous l'utiliserons plus tard pour d\\xE9coder les tokens g\\xE9n\\xE9r\\xE9s par nos RESTful API.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a3\"\n  }), \"a.3) Authentification & autorisation stateless via JWT & Express\"), mdx(\"h3\", null, \"a.2.1) Introduction\"), mdx(\"p\", null, \"Via un exemple concret associ\\xE9 \\xE0 notre RESTful API qui g\\xE8re les ressources de type \\\"pizzas\\\", nous allons mettre en place un processus d'authentification et d'autorisation JWT.\"), mdx(\"p\", null, \"La librairie que nous allons utiliser dans le cadre de ce cours pour g\\xE9rer des tokens JWT est \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/jsonwebtoken\"\n  }, \"jsonwebtoken\"), \".\"), mdx(\"p\", null, \"Nous allons maintenant continuer le d\\xE9veloppement de l'API \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \" pour ajouter des op\\xE9rations permettant l'authentification et l'autorisation d'utilisateurs.\"), mdx(\"p\", null, \"Au sein de votre repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \", veuillez cr\\xE9er le projet nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/auths\"), \" sur base d'un copi\\xE9 coll\\xE9 de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/fat-model\"), \" (ou \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \".\"), mdx(\"p\", null, \"Pour la suite du tutoriel, nous consid\\xE9rons que tous les chemins absolus d\\xE9marrent du r\\xE9pertoire\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/auths\"), \".\"), mdx(\"p\", null, \"Veuillez installer la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jsonwebtoken\"), \" au sein de votre nouveau projet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i jsonwebtoken\\n\")), mdx(\"h3\", null, \"a.3.2) M\\xE9canisme d'authentification et cr\\xE9ation du token\"), mdx(\"p\", null, \"Toujours \\xE0 l'aide d'Express, nous allons cr\\xE9er un router \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths\"), \" qui mettra \\xE0 disposition les op\\xE9rations de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \" et de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \".\\nVoici le contrat associ\\xE9 \\xE0 ces nouvelles op\\xE9rations :\"), mdx(\"h5\", null, \"Op\\xE9rations sur les ressources de type \\\"auths\\\"\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xE9thode HTTP\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Op\\xE9ration\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"auths/login\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"V\\xE9rifier les credentials d'une ressource de type \\\"users\\\" et renvoyer le username et un token JWT si les credentials sont OK\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"auths/register\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cr\\xE9er une ressource de type \\\"users\\\" et renvoyer le username et un token JWT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"p\", null, \"Un model \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users\"), \" s'occupera de cr\\xE9er les utilisateur, de v\\xE9rifier leurs credentials ainsi que de cr\\xE9er des token.\"), mdx(\"p\", null, \"Voici le workflow attendu pour une op\\xE9ration de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \" ou de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" :\"), mdx(ScrollableImage, {\n    name: \"login.png\",\n    minWidth: \"879px\",\n    maxWidth: \"879x\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Appel \\xE0 une RESTful API pour s'authentifier et obtenir un JWT\"), mdx(\"p\", null, \"Ce que l'on voit dans l'image ci-dessus : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"si le mod\\xE8le consid\\xE8re que l'utilisateur est authentifiable, que ses credentials sont OK, alors il va utiliser une librairie \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"jwt\"), \" et la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sign\"), \" pour cr\\xE9er un token. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"le token est envoy\\xE9 dans le body de la r\\xE9ponse \\xE0 l'utilisateur. \")), mdx(\"p\", null, \"Ce que l'on ne voit pas dans l'image ci-dessus :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c'est le job du client de sauvegarder le token. Si l'application cliente est un browser, alors celui-ci pourra \\xEAtre sauvegard\\xE9 dans le web storage du browser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"l'application cliente peut \\xEAtre faite avec n'importe quelle technologie. Par exemple, nous pourrons utiliser REST Client pour faire une requ\\xEAte \\xE0 l'API...\")), mdx(\"p\", null, \"Dans notre RESTful API, nous avons d\\xE9cid\\xE9 que lorsqu'un client s'enregistre, qu'il fait appel \\xE0 l'op\\xE9ration \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" pour cr\\xE9er un compte, l'API consid\\xE8re automatiquement que cet utilisateur est authentifi\\xE9. Tout comme la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \", la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" cr\\xE9era et renverra un token JWT \\xE0 l'utilisateur.\"), mdx(\"p\", null, \"NB : Il est possible d'envisager un workflow diff\\xE9rent : apr\\xE8s le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \", l'application demanderait \\xE0 l'utilisateur un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" ne renvoyant jamais de token \\xE0 l'utilisateur.\"), mdx(\"p\", null, \"Nous allons \\xE0 pr\\xE9sent mettre en place le code permettant d'impl\\xE9menter le workflow que l'on vient de d\\xE9couvrir.\"), mdx(\"p\", null, \"Veuillez cr\\xE9er le mod\\xE8le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users\"), \" en cr\\xE9ant le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/models/users.json\"), \" et y inclure ce code :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {1,5-6,23-27,29-31,34,43-47,49-52,54}\",\n    \"numbered\": true,\n    \"{1,5-6,23-27,29-31,34,43-47,49-52,54}\": true\n  }, \"const jwt = require('jsonwebtoken');\\nconst path = require('node:path');\\nconst { parse, serialize } = require('../utils/json');\\n\\nconst jwtSecret = 'ilovemypizza!';\\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\\n\\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\\n\\nconst defaultUsers = [\\n  {\\n    id: 1,\\n    username: 'admin',\\n    password: 'admin',\\n  },\\n];\\n\\nfunction login(username, password) {\\n  const userFound = readOneUserFromUsername(username);\\n  if (!userFound) return undefined;\\n  if (userFound.password !== password) return undefined;\\n\\n  const token = jwt.sign(\\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\\n  );\\n\\n  const authenticatedUser = {\\n    username,\\n    token,\\n  };\\n\\n  return authenticatedUser;\\n}\\n\\nfunction register(username, password) {\\n  const userFound = readOneUserFromUsername(username);\\n  if (userFound) return undefined;\\n\\n  createOneUser(username, password);\\n\\n  const token = jwt.sign(\\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\\n  );\\n\\n  const authenticatedUser = {\\n    username,\\n    token,\\n  };\\n\\n  return authenticatedUser;\\n}\\n\\nfunction readOneUserFromUsername(username) {\\n  const users = parse(jsonDbPath, defaultUsers);\\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\\n  if (indexOfUserFound < 0) return undefined;\\n\\n  return users[indexOfUserFound];\\n}\\n\\nfunction createOneUser(username, password) {\\n  const users = parse(jsonDbPath, defaultUsers);\\n\\n  const createdUser = {\\n    id: getNextId(),\\n    username,\\n    password,\\n  };\\n\\n  users.push(createdUser);\\n\\n  serialize(jsonDbPath, users);\\n\\n  return createdUser;\\n}\\n\\nfunction getNextId() {\\n  const users = parse(jsonDbPath, defaultUsers);\\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\\n  if (lastItemIndex === undefined) return 1;\\n  const lastId = users[lastItemIndex]?.id;\\n  const nextId = lastId + 1;\\n  return nextId;\\n}\\n\\nmodule.exports = {\\n  login,\\n  register,\\n};\\n\\n\")), mdx(\"p\", null, \"Dans le code ci-dessus, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jwtSecret\"), \" est le secret priv\\xE9 connu uniquement du serveur. C'est la m\\xEAme secret qu'il faudra utiliser pour v\\xE9rifier un token.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"jwt.sign()\")), \" permet de cr\\xE9er le token et ses 3 parties :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"le payload du token, la 2\\xE8me partie du token, est compl\\xE9t\\xE9 principalement via le permier argument de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sign()\"), \" ; ici, le token affirme que l'utilisateur poss\\xE9dant le username donn\\xE9 est authentifi\\xE9.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"le payload du token sera aussi modifi\\xE9 sur base de la dur\\xE9e d'expiration du token, selon l'argument \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"expiresIn\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"jwtSecret\"), \" est utilis\\xE9 pour cr\\xE9er la 3\\xE8me partie du token, sa signature.\")), mdx(\"p\", null, \"Il faut maintenant que nous cr\\xE9ons le router \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths\"), \" offrant les op\\xE9rations de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \" et de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \", en faisant appel au mod\\xE8le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez cr\\xE9er le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/routes/auths.js\"), \" et y inclure le code suivant :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const express = require('express');\\nconst { register, login } = require('../models/users');\\n\\nconst router = express.Router();\\n\\n/* Register a user */\\nrouter.post('/register', (req, res) => {\\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\\n\\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\\n\\n  const authenticatedUser = register(username, password);\\n\\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\\n\\n  return res.json(authenticatedUser);\\n});\\n\\n/* Login a user */\\nrouter.post('/login', (req, res) => {\\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\\n\\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\\n\\n  const authenticatedUser = login(username, password);\\n\\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\\n\\n  return res.json(authenticatedUser);\\n});\\n\\nmodule.exports = router;\\n\")), mdx(\"p\", null, \"Il n'y a rien de bien sp\\xE9cial \\xE0 ce code. On fait simplement appel aux op\\xE9rations du mod\\xE8le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users\"), \".\"), mdx(\"p\", null, \"Attention, il faut rajouter un router au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"app.js\"), \" pour que notre API puisse offrir les nouvelles op\\xE9rations. Veuillez ajouter ce code dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/app.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{7,18}\",\n    \"{7,18}\": true\n  }, \"const express = require('express');\\nconst cookieParser = require('cookie-parser');\\nconst logger = require('morgan');\\n\\nconst usersRouter = require('./routes/users');\\nconst pizzaRouter = require('./routes/pizzas');\\nconst authsRouter = require('./routes/auths');\\n\\nconst app = express();\\n\\napp.use(logger('dev'));\\napp.use(express.json());\\napp.use(express.urlencoded({ extended: false }));\\napp.use(cookieParser());\\n\\napp.use('/users', usersRouter);\\napp.use('/pizzas', pizzaRouter);\\napp.use('/auths', authsRouter);\\n\\nmodule.exports = app;\\n\")), mdx(\"p\", null, \"Veuillez d\\xE9marrer votre API \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths\"), \".\\n\\uD83D\\uDCAD Comment tester ces nouvelles op\\xE9rations ?\\nH\\xE9 bien rien de neuf, on va utiliser REST Client.\"), mdx(\"p\", null, \"Veuillez cr\\xE9er le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/REST Client/auths.http\"), \" et y ajouter le code suivant :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\"\n  }, \"@baseUrl = http://localhost:3000\\n\\n### Try to login an unknow user\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"unknown\\\",\\n    \\\"password\\\":\\\"admin\\\"\\n}\\n\\n### Login the default admin\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"admin\\\",\\n    \\\"password\\\":\\\"admin\\\"\\n}\\n\\n\\n### Create the manager user\\nPOST {{baseUrl}}/auths/register\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"manager\\\",\\n    \\\"password\\\":\\\"manager\\\"\\n}\\n\\n### Login the manager user\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"manager\\\",\\n    \\\"password\\\":\\\"manager\\\"\\n}\\n\")), mdx(\"p\", null, \"Veuillez ex\\xE9cuter les diff\\xE9rentes requ\\xEAtes. Tout devrait fonctionner, vous devriez r\\xE9cup\\xE9rer le username et le token d'un utilisateur authentifi\\xE9.\"), mdx(\"p\", null, \"Pour le fun, nous allons d\\xE9coder un token. Veuillez copier le token de ce que renvoie votre API pour la requ\\xEAte de login de l'utilisateur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"manager\"), \" (qqch qui doit ressembler \\xE0 une string du genre : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjEyNDg1MjksImV4cCI6MTc0NzY0ODUyOX0.JvYzM0gtmVkqFr9R3f1Bf6ow_QuyHJY-vedJ39N7JKw\"), \").\"), mdx(\"p\", null, \"Veuillez vous rendre sur le site  et coller dans le champs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Encoded\"), \" votre token. Dans la colonne \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Decoded\"), \", vous devriez voir l'algorithme utilis\\xE9 par la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sign\"), \", ainsi que les donn\\xE9es pr\\xE9sentes dans le payload, dont \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"username\\\": \\\"manager\\\"\"), \" !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Vous comprenez pourquoi on n'ajoute pas des secrets dans un token \\uD83D\\uDE09.\"), mdx(\"h4\", null, \"\\uD83C\\uDF6C Cacher ses secrets\"), mdx(\"p\", null, \"Dans ce cours-ci, nous ne verrons pas directement comment faire en sorte que le secret,  permettant de signer & v\\xE9rifier les token, ne soit pas pr\\xE9sent sur le web repository de vos API (par exemple ici le mod\\xE8le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users.js\"), \" hardcode ce secret). En effet, pour des raisons de s\\xE9curit\\xE9, si votre secret est visible pour tous les d\\xE9veloppeurs qui acc\\xE8de \\xE0 votre repository public, c'est un probl\\xE8me.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si vous souhaitez d\\xE9couvrir comment faire en sorte de rendre invisible des informations sensibles sur un web repository, tout en pouvant b\\xE9n\\xE9ficiant de ces infos dans votre environnement de d\\xE9veloppement, vous pouvez utiliser la librairie \", \"[dotenv]\", \"/(\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/dotenv\"\n  }, \"https://www.npmjs.com/package/dotenv\"), \") qui vous permet de g\\xE9rer facilement des variables d'environnement. C'est ce genre de librairies qui est utilis\\xE9e par les professionnels pour cacher leurs secrets et certaines variables de configuration, comme le password pour se connecter \\xE0 une DB, l'URL vers une API, le port de l'application...\"), mdx(\"h3\", null, \"a.3.3) M\\xE9canisme d'autorisation et v\\xE9rification du token\"), mdx(\"p\", null, \"Suite au \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" ou au \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \" de l'utilisateur, tel qu'il a \\xE9t\\xE9 d\\xE9cid\\xE9 pour notre RESTful API, celui-ci a re\\xE7u un token. C'est le job de l'application cliente de trouver un moyen de sauvegarder ce token. \"), mdx(\"p\", null, \"Lorsqu'une application client souhaite cr\\xE9er une pizza, on souhaite autoriser cette op\\xE9ration qu'\\xE0 l'administrateur du site g\\xE9rant la pizz\\xE9ria.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nous d\\xE9cidons donc pour l'op\\xE9ration de cr\\xE9ation de pizza que l'utilisateur doit non seulement \\xEAtre authentifi\\xE9, mais qu'en plus, il doit \\xEAtre l'admin.\"), mdx(\"p\", null, \"Pour que l'application client qui fait la requ\\xEAte \\xE0 l'API puisse s'autoriser, elle doit ajouter un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorization header\"), \" \\xE0 sa requ\\xEAte contenant comme valeur le token re\\xE7u lors du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \" ou du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" :\"), mdx(ScrollableImage, {\n    name: \"authorizeOK.png\",\n    minWidth: \"879px\",\n    maxWidth: \"879x\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Appel \\xE0 une op\\xE9ration d'une RESTful API n\\xE9cessitant une autorisation JWT : autorisation valide\"), mdx(\"p\", null, \"Le router de \\\"pizzas\\\", avant m\\xEAme de passer la requ\\xEAte \\xE0 la route \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /pizzas\"), \", va lancer la fonction middleware d'autorisation nomm\\xE9e \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \". La fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" va s'occuper de v\\xE9rifier le token envoy\\xE9 par le client dans un header \\xE0 l'aide de la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"verifiy\"), \" de la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jwt\"), \".\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Si le token est valide, est-ce que \\xE7a signifie que l'utilisateur est bien authentifi\\xE9 ?\\nH\\xE9 bien non, car imaginez qu'entre le moment o\\xF9 l'utilisateur se soit logu\\xE9, il ait \\xE9t\\xE9 supprim\\xE9 de l'application par un admin... dans ce cas-ci, on ne veut pas l'autoriser \\xE0 ajouter une pizza au menu de la pizzeria ! Il n'est p-e m\\xEAme plus un employ\\xE9, il souhaite p-e \\xE9crire du contenu malicieux \\uD83D\\uDE28\"), mdx(\"p\", null, \"Donc si le token est valide, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" fera appel au mod\\xE8le de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users\"), \" pour v\\xE9rifier que l'utilisateur existe bien dans le support de donn\\xE9es (fichiers JSON, base de donn\\xE9es ou autres) et pour obtenir toutes les infos sur cet utilisateur. Si l'utilisateur existe, alors cela signifie que l'utilisateur est bien authentifi\\xE9. La fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" va passer la main \\xE0 une autre fonction middleware pour v\\xE9rifier que l'utilisateur est bien l'admin.\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Comment est-ce que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" peut faire appel au mod\\xE8le pour v\\xE9rifier que l'utilisateur existe bien ? Est-ce que cela signifie que le token doit contenir tout un tas de donn\\xE9es sur l'utilisateur ?\\n\\uD83D\\uDC4D En r\\xE8gle g\\xE9n\\xE9rale, on va juste mettre un identifiant de l'utilisateur dans ce qu'on appelle le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"payload\"), \" du token. C'est ensuite l'API, suite au d\\xE9codage de l'identifiant de l'utilisateur, qui fera appel au support de donn\\xE9es pour retrouver toutes les donn\\xE9es de l'utilisateur.\"), mdx(\"p\", null, \"NB : notez que l'on pourrait aussi laisser la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"createOnePizza\"), \" s'occuper de v\\xE9rifier que l'utilisateur demandant la cr\\xE9ation de la pizza soit bien l'admin. Ici, comme il s'agit de v\\xE9rifier que le contrat de l'API soit respect\\xE9, c'est-\\xE0-dire que l'utilisateur soit bien authentifi\\xE9 & admin, alors on pr\\xE9f\\xE8re r\\xE9aliser cette action en dehors du mod\\xE8le, car dans nos choix architecturaux au niveau de nos RESTful API, nous avons d\\xE9cid\\xE9 que ce n'est pas le mod\\xE8le qui s'occupe de pr\\xE9senter les donn\\xE9es aux clients.\"), mdx(\"p\", null, \"La fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \" associ\\xE9 au token va v\\xE9rifier que l'utilisateur est bien l'admin. Si c'est OK, elle passera la main \\xE0 la fonction middleware qui g\\xE8re la route \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /pizzas\"), \" au sein du router de pizzas en faisant l'appel \\xE0 la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"next\"), \".\"), mdx(\"p\", null, \"Maintenant que le client a les bons privil\\xE8ges, l'op\\xE9ration de cr\\xE9ation de la pizza peut donc \\xEAtre autoris\\xE9e. L'op\\xE9ration de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"createOnePizza\"), \" du mod\\xE8le renverra la nouvelle pizza au router qui s'occupera de pr\\xE9senter la nouvelle pizza au client, au format JSON.\"), mdx(\"p\", null, \"Par contre, voici le workflow si le token n'est pas valide :\"), mdx(ScrollableImage, {\n    name: \"authorizeNOK.png\",\n    minWidth: \"879px\",\n    maxWidth: \"879x\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"figcaption\", null, \"Appel \\xE0 une op\\xE9ration d'une RESTful API n\\xE9cessitant une autorisation JWT : autorisation invalide\"), mdx(\"p\", null, \"Dans ce cas l\\xE0, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" ne passe pas la main \\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \" ni m\\xEAme \\xE0 la fonction middleware qui g\\xE8re la route \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /pizzas\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"La fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" renvoie directement un code d'erreur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"401 Unauthorized\"), \" au client. \"), mdx(\"p\", null, \"Vous pourriez aussi imaginer le workflow o\\xF9 le client envoie un token valide, mais l'utilisateur associ\\xE9 n'est pas admin. Dans ce cas-ci, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" ferait appel \\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \", mais \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \" renverrait directement un code d'erreur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"403 Forbidden\"), \" au client.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En effet, l'API indiquerait ainsi qu'elle aurait v\\xE9rifi\\xE9 que l'utilisateur est bien authentifi\\xE9, mais que celui ne poss\\xE8de pas les privil\\xE8ges suffisant pour acc\\xE9der \\xE0 l'op\\xE9ration demand\\xE9e.\"), mdx(\"p\", null, \"\\uD83D\\uDE28 Wow, le workflow d'autorisation pour la cr\\xE9ation d'une pizza est assez long.  Nous allons maintenant l'impl\\xE9menter. Nous vous inqui\\xE9tez pas, ce qui importe dans le code qui va suivre, \\xE7a n'est pas de savoir \\xE9crire tout le code, mais de bien comprendre le m\\xE9canisme. En effet, en r\\xE8gle g\\xE9n\\xE9rale, vous allez utiliser des librairies vous permettant d'autoriser les acc\\xE8s aux op\\xE9rations de vos API. Vous \\xE9crirez donc rarement le m\\xE9canisme d'autorisation, par contre, vous devrez pouvoir utiliser ces m\\xE9canismes.\"), mdx(\"p\", null, \"Veuillez cr\\xE9er les nouvelles fonctions middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \" au sein d'un nouveau fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/utils/auths.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {1,4,7,11,}\",\n    \"numbered\": true,\n    \"{1,4,7,11,}\": true\n  }, \"const jwt = require('jsonwebtoken');\\nconst { readOneUserFromUsername } = require('../models/users');\\n\\nconst jwtSecret = 'ilovemypizza!';\\n\\nconst authorize = (req, res, next) => {\\n  const token = req.get('authorization');\\n  if (!token) return res.sendStatus(401);\\n\\n  try {\\n    const decoded = jwt.verify(token, jwtSecret);\\n    const { username } = decoded;\\n\\n    const existingUser = readOneUserFromUsername(username);\\n\\n    if (!existingUser) return res.sendStatus(401);\\n\\n    req.user = existingUser; // request.user object is available in all other middleware functions\\n    return next();\\n  } catch (err) {\\n    console.error('authorize: ', err);\\n    return res.sendStatus(401);\\n  }\\n};\\n\\nconst isAdmin = (req, res, next) => {\\n  const { username } = req.user;\\n\\n  if (username !== 'admin') return res.sendStatus(403);\\n  return next();\\n};\\n\\nmodule.exports = { authorize, isAdmin };\\n\")), mdx(\"p\", null, \"Quelques explications sur le code de la fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authorize\"), \" : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gr\\xE2ce \\xE0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"req.get('authorization')\"), \", on r\\xE9cup\\xE8re le token qui a \\xE9t\\xE9 envoy\\xE9 par le client au sein de l'\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authorization header\"), \" de la requ\\xEAte, c'est une string.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La m\\xE9thode \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"jwt.verify(token, jwtSecret)\"), \" v\\xE9rifie tant la signature du token que le fait que le token n'a pas encore expir\\xE9. Elle utilie le secret \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"jwtSecret\"), \" qui doit \\xEAtre le m\\xEAme que celui utilis\\xE9 lors de la cr\\xE9ation du token.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Elle charge toutes les donn\\xE9es de l'utilisateur authentifi\\xE9 au sein de l'objet \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"request\"), \", dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"user\"), \". Cela est une bonne pratique, cela permet, pour toute la dur\\xE9e du traitement de cette requ\\xEAte, de mettre \\xE0 disposition ces donn\\xE9es \\xE0 toutes les fonctions middleware.\\n\\uD83D\\uDCAD Mais pourquoi faire cela ?\\nImaginez que vous faites un appel \\xE0 une base de donn\\xE9es externes \\xE0 chaque fois que vous souhaitez obtenir les informations d'un utilisateur... Cela est tr\\xE8s consommateur en temps... Lorsque vous allez utiliser d'autres fonctions middleware comme \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \", vous n'avez plus besoin de faire appel \\xE0 la base de donn\\xE9es.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDCAD Qu'est-ce que ce code : \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const { username } = decoded;\"), \" ?\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"C'est ce que l'on appelle du \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"destructuring assignement\"), \", c'est une fa\\xE7on tr\\xE8s concise en JS de cr\\xE9er des variables \\xE0 partir de propri\\xE9t\\xE9s d'objets ou des valeurs d'arrays.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Imaginez ici que la valeur de \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"decoded\"), \" soit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{ username: 'admin', iat: 1661251095, exp: 1747651095 }\"), \". Ce code \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const { username } = decoded;\"), \" est l'\\xE9quivalent de \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const username = decoded.username;\"), \". OK, mais \\xE7a n'a pas vraiment de valeur ajout\\xE9e ici, c'est juste un poil plus concis... Cela devient vraiment int\\xE9ressant quand vous souhaitez cr\\xE9er plusieurs variables, comme pour l'exemple donn\\xE9, on pourrait cr\\xE9er 3 variables ainsi \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const { username, iat, exp } = decoded;\"), \" au lieu d'\\xE9crire :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const username = decoded.username;\\nconst iat = decoded.iat;\\nconst exp = decoded.exp;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour en savoir plus sur la puissance du \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"destructuring assignement\"), \", vous pouvez consulter la \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\"\n  }, \"documentation de MDN\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r64\"\n  }, \"[R.64]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si tout est OK, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \" fait appel \\xE0 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"next()\"), \", qui sera la prochaine fonction middleware qui est pr\\xE9sente apr\\xE8s l'appel de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authorize\"), \".\")), mdx(\"p\", null, \"La fonction middleware \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \" r\\xE9cup\\xE8re les donn\\xE9es de l'utilisateur authentifi\\xE9 via l'objet \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"req.user\"), \" et le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"destructuring assignement\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si l'utilisateur n'est pas \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \", c'est le code '403 Forbidden' qui est renvoy\\xE9 \\xE0 l'application cliente, signifiant que l'utilisateur est bien authentifi\\xE9, mais il n'a pas les privil\\xE8ges pour acc\\xE9der \\xE0 l'op\\xE9ration demand\\xE9e (cr\\xE9ation de pizza).\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si tout est OK, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \" fait appel \\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"next()\"), \", qui sera la prochaine fonction middleware qui est pr\\xE9sente apr\\xE8s l'appel de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isAdmin\"), \".\"), mdx(\"p\", null, \"O\\xF9 allons-nous utiliser ces nouvelles fonctions middleware ?\"), mdx(\"p\", null, \"Nous pouvons le faire au niveau que nous souhaitons, soit au niveau :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de l'application, pour toutes les routes, via \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"app.use(authorize)\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d'un router, pour toutes les routes associ\\xE9es ; par exemple, on pourrait dire que toutes les routes du router de pizzas sont prot\\xE9g\\xE9es par une autorisation JWT. On \\xE9crirait : \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"app.use(\\\"/pizzas\\\", authorize, pizzaRouter);\"), \". Cela signifierait que toutes les op\\xE9rations sur des ressources de type \\\"pizzas\\\" ne seraient autoris\\xE9es que si l'utilisateur est authentifi\\xE9. Cela serait probl\\xE9matique pour deux raisons :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On veut pouvoir afficher le menu des pizzas pour tous les utilisateurs, m\\xEAme s'ils sont anonymes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On ne veut pas simplement v\\xE9rifier qu'un utilisateur est authentifi\\xE9 pour cr\\xE9er une pizza, on veut aussi v\\xE9rifier qu'il est admin.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d'une route, pour une op\\xE9ration de notre RESTful API. C'est ce que nous souhaitons faire ici. Veuillez mettre \\xE0 jour le code du router de \\\"pizzas\\\" au sein de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/routes/pizzas.js\"), \" :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{2,7}\",\n    \"{2,7}\": true\n  }, \"// See existing code\\nconst { authorize, isAdmin } = require('../utils/auths');\\n\\n// See existing code\\n\\n// Create a pizza to be added to the menu.\\nrouter.post('/', authorize, isAdmin, (req, res) => {\\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\\n\\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\\n\\n  const createdPizza = createOnePizza(title, content);\\n\\n  return res.json(createdPizza);\\n});\\n\")), mdx(\"p\", null, \"Ainsi, nous avons juste fait l'appel de deux fonctions middleware pour v\\xE9rifier :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"que l'utilisateur est authentifi\\xE9\"), \" via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authorize\"), \" ; si tout est OK au niveau du token fournit par l'application cliente, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authorize\"), \" fait appel via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"next()\"), \" \\xE0 la prochaine fonction middleware. Dans ce cas-ci, c'est \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \". S'il y a un probl\\xE8me, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authorize\"), \" termine le traitement de la requ\\xEAte en envoyant un code d'erreur au client et les prochaines fonctions middleware (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \", puis la fonction arrow) ne sont pas ex\\xE9cut\\xE9es.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"que l'utilisateur est admin\"), \" via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \" ; si tout est OK, que l'utilisateur authentifi\\xE9 est l'admin, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \" fait appel via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"next()\"), \" \\xE0 la prochaine fonction middleware. Dans ce cas-ci, c'est la fonction arrow qui appelle \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createOnePizza\"), \" pour cr\\xE9er la pizza, la fonction traitant l'op\\xE9ration demand\\xE9e. Si l'utilisateur authentifi\\xE9 n'est pas l'admin, alors \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"isAdmin\"), \" termine le traitement en envoyant un code d'erreur au client et la fonction traitant de l'op\\xE9ration de cr\\xE9ation n'est pas ex\\xE9cut\\xE9e.\")), mdx(\"p\", null, \"Comment pouvons-nous tester l'op\\xE9ration de cr\\xE9ation d'une pizza ? Via REST Client.\\nTentons le coup \\xE0 l'aide de cette requ\\xEAte (elle est d\\xE9j\\xE0 pr\\xE9sente dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/REST Client/pizzas.http\"), \") :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\"\n  }, \"POST {{baseUrl}}/pizzas\\nContent-Type: application/json\\n\\n{\\n    \\\"title\\\":\\\"Magic Green\\\",\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\n}\\n\")), mdx(\"p\", null, \"Apr\\xE8s avoir ex\\xE9cut\\xE9 cette requ\\xEAte, vous devriez avoir re\\xE7u un status code '401 Unauthorized'.\\nEt bien oui, nous n'avons pas envoy\\xE9 de token, nous ne pouvons donc pas \\xEAtre autoris\\xE9.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Au prochain point nous allons voir comment utiliser REST Client pour sauvegarder de l'information, comme un token, suite \\xE0 une requ\\xEAte vers une API.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"a4\"\n  }), \"a.4) Client REST\"), mdx(\"h3\", null, \"a.4.1) Client REST avec JWT\"), mdx(\"p\", null, \"Au module 3, nous avons appris \\xE0 utiliser REST Client, l'extension de VS Code, pour faire des requ\\xEAtes vers des API.\"), mdx(\"p\", null, \"Voici quelques notions suppl\\xE9mentaire pour utiliser REST Client avec des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JWT\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il est possible de cr\\xE9er des \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Request Variables\"), \" afin de r\\xE9cup\\xE9rer la r\\xE9ponse associ\\xE9e\\n\\xE0 une requ\\xEAte au sein d'une variable.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On va donc pouvoir r\\xE9cup\\xE9rer le token, suite \\xE0 une requ\\xEAte d'authentification,\\nau sein d'une \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Request Variable\"), \", pour ensuite fournir ce token dans le\\n\\xAB \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Authorization header\"), \" \\xBB de toutes les requ\\xEAtes demandant une autorisation JWT.\")), mdx(\"p\", null, \"Si vous souhaitez plus d'infos sur les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Request Variables\"), \", vous pouvez consulter la \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Huachao/vscode-restclient#request-variables\"\n  }, \"documentation de REST Client\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r55\"\n  }, \"[R.55]\"), \".\"), mdx(\"p\", null, \"Voici comment mettre \\xE0 jour le script \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/REST Client/pizzas.http\"), \" pour cr\\xE9er une pizza en passant le token de l'utilisateur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\"\n  }, \"### Create a pizza by using the admin account\\n#### First login as the admin\\n##### Define a request variable nammed admin :\\n# @name admin\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"admin\\\",\\n    \\\"password\\\":\\\"admin\\\"\\n}\\n\\n#### Create a pizza with the admin token\\nPOST {{baseUrl}}/pizzas\\nContent-Type: application/json\\nAuthorization: {{admin.response.body.token}}\\n\\n{\\n    \\\"title\\\":\\\"Magic Green\\\",\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\n}\\n\")), mdx(\"p\", null, \"Pour tester l'op\\xE9ration de cr\\xE9ation de pizza, veuillez d'abord ex\\xE9cuter la premi\\xE8re requ\\xEAte, puis la seconde donn\\xE9e ci-dessus.\"), mdx(\"p\", null, \"A ce stade-ci, il serait aussi int\\xE9ressant de tester certains cas d'erreurs associ\\xE9s aux tokens. Veuillez compl\\xE9ter le script \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/REST Client/pizzas.http\"), \" avec :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\"\n  }, \"### 1. Create a pizza without a token\\nPOST {{baseUrl}}/pizzas\\nContent-Type: application/json\\n\\n{\\n    \\\"title\\\":\\\"Magic Green\\\",\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\n}\\n\\n### 2. Create a pizza without being the admin, use manager account\\n#### 2.1 First login as the manager\\n##### 2.1.1 Define a request variable nammed manager\\n# @name manager\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"manager\\\",\\n    \\\"password\\\":\\\"manager\\\"\\n}\\n\\n##### 2.1.2 Define a file variable to simplify the access to the token of manager\\n@managerToken = {{manager.response.body.token}}\\n\\n#### 2.2 Try to create a pizza with the manager token\\nPOST {{baseUrl}}/pizzas\\nContent-Type: application/json\\nAuthorization: {{managerToken}}\\n\\n{\\n    \\\"title\\\":\\\"Magic Green\\\",\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\n}\\n\")), mdx(\"p\", null, \"Nous voyons qu'\\xE0 l'aide de REST Client, nous pouvons utiliser une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"File Variable\"), \" pour allouer une partie de la r\\xE9ponse faite \\xE0 une requ\\xEAte.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Dans ce cas, on peut faire appel \\xE0 l'API en passant le token via la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"File Variable\"), \" nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"managerToken\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Authorization: {{managerToken}}\"), \") au lieu d'utiliser une partie seulement de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Request Variable\"), \" nomm\\xE9e \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"manager\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Authorization: {{manager.response.body.token}}\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Cela permet de cr\\xE9er des requ\\xEAtes plus concises.\"), mdx(\"h3\", null, \"a.4.2) Finaliser l'API et les requ\\xEAtes associ\\xE9es\"), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour votre RESTful API g\\xE9rant les pizzas afin que toutes les op\\xE9rations d'\\xE9criture soient prot\\xE9g\\xE9es par une autorisation JWT, n'autorisant que l'utilisateur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \".\"), mdx(\"p\", null, \"Voici le code \\xE0 mettre \\xE0 jour dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/routes/pizzas\"), \" pour correctement autoriser les op\\xE9rations de suppression et de modification sur des ressources de type \\\"pizzas\\\":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{2,11}\",\n    \"{2,11}\": true\n  }, \"// Delete a pizza from the menu based on its id\\nrouter.delete('/:id', authorize, isAdmin, (req, res) => {\\n  const deletedPizza = deleteOnePizza(req.params.id);\\n\\n  if (!deletedPizza) return res.sendStatus(404);\\n\\n  return res.json(deletedPizza);\\n});\\n\\n// Update a pizza based on its id and new values for its parameters\\nrouter.patch('/:id', authorize, isAdmin, (req, res) => {\\n  const title = req?.body?.title;\\n  const content = req?.body?.content;\\n\\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) {\\n    return res.sendStatus(400);\\n  }\\n\\n  const updatedPizza = updateOnePizza(req.params.id, { title, content });\\n\\n  if (!updatedPizza) return res.sendStatus(404);\\n\\n  return res.json(updatedPizza);\\n});\\n\")), mdx(\"p\", null, \"Pour vous assurer que les op\\xE9rations de suppression et de modification sont bien fonctionnelles, veuillez mettre \\xE0 jour les requ\\xEAtes associ\\xE9es afin d'utiliser un token. Veuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/REST Client/pizzas.http\"), \" en ajoutant ces deux lignes :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http\",\n    \"metastring\": \"numbered {25,30}\",\n    \"numbered\": true,\n    \"{25,30}\": true\n  }, \"### Create a pizza by using the admin account\\n#### First login as the admin\\n##### Define a request variable nammed admin\\n# @name admin\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n    \\\"username\\\":\\\"admin\\\",\\n    \\\"password\\\":\\\"admin\\\"\\n}\\n\\n#### Create a pizza with the admin token\\nPOST {{baseUrl}}/pizzas\\nContent-Type: application/json\\nAuthorization: {{admin.response.body.token}}\\n\\n{\\n    \\\"title\\\":\\\"Magic Green\\\",\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\n}\\n\\n### Delete pizza identified by 2 with the admin token\\nDELETE {{baseUrl}}/pizzas/2\\nAuthorization: {{admin.response.body.token}}\\n\\n### Update the pizza identified by 6 with the admin token\\nPATCH {{baseUrl}}/pizzas/6\\nContent-Type: application/json\\nAuthorization: {{admin.response.body.token}}\\n\\n{\\n    \\\"title\\\":\\\"Magic Green 2\\\"\\n}\\n\")), mdx(\"p\", null, \"Veuillez ex\\xE9cutez les requ\\xEAtes de type DELETE et de type PATCH afin de vous assurer que l'API est en ordre.\"), mdx(\"p\", null, \"Si tout fonctionne bien, faites un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre repo (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") avec le message\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths\"), \"\\\".\"), mdx(\"p\", null, \"En cas de souci, vous pouvez utiliser le code du tutoriel \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"b\"\n  }), \"b) Authentification & autorisation JWT via une IHM\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"b1\"\n  }), \"b.1) Authentifier un utilisateur via une IHM & JWT\"), mdx(\"p\", null, \"Pour authentifier un utilisateur via une IHM, il suffit de faire une requ\\xEAte \\xE0 une RESTful API.\"), mdx(\"p\", null, \"G\\xE9n\\xE9ralement, l'utilisateur devra d'abord cr\\xE9er son compte. Il utilisera un formulaire demandant au minimum un identifiant (username, adresse e-mail ou autres) et un password.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Dans le cadre d'une SPA, l'IHM fera appel \\xE0 une op\\xE9ration de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" lorsque l'utilisateur soumet le formulaire.\"), mdx(\"p\", null, \"Par la suite, lorsque le compte de l'utilisateur existe, l'IHM fera appel \\xE0 une op\\xE9ration de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \" lorsque l'utilisateur tentera de se connecter \\xE0 l'aide d'un formulaire.\"), mdx(\"p\", null, \"Dans les deux cas, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" ou \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"login\"), \", le d\\xE9veloppeur devra conna\\xEEtre les op\\xE9rations mises \\xE0 disposition par l'API. \"), mdx(\"p\", null, \"Dans le cadre du site de la pizzeria, nous savons que l'API met \\xE0 disposition ces deux op\\xE9rations :\\n| URI | M\\xE9thode HTTP | Op\\xE9ration |\\n|---|---|---|---|\\n| \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths/login\"), \" | POST | V\\xE9rifier les credentials d'une ressource de type \\\"users\\\" et renvoyer le username et un token JWT si les credentials sont OK |\\n| \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths/register\"), \" | POST | Cr\\xE9er une ressource de type \\\"users\\\" et renvoyer le username et un token JWT |\"), mdx(\"p\", null, \"Veuillez d\\xE9marrer la derni\\xE8re version de la RESTful API de la pizzeria. En cas de souci, vous pouvez utiliser ce code-ci :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\"), mdx(\"p\", null, \"Nous allons maintenant continuer le d\\xE9veloppement de l'IHM \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/async-await\"\n  }, \"async-await\"), \" pour que le formulaire de register et de login fassent appelle \\xE0 l'API et sauve temporairement le token renvoy\\xE9.\"), mdx(\"p\", null, \"Au sein de votre repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \", veuillez cr\\xE9er le projet nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/jwt-fetch\"), \" sur base d'un copi\\xE9 coll\\xE9 de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/async-await\"), \" (ou \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch\"\n  }, \"async-await\"), \").\"), mdx(\"p\", null, \"Pour la suite du tutoriel, nous consid\\xE9rons que tous les chemins absolus d\\xE9marrent du r\\xE9pertoire\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/hmi/jwt-fetch\"), \".\"), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le code de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RegisterPage\"), \" afin de faire appel \\xE0 la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /auths/register\"), \" et, si tout est OK, renvoyer l'utilisateur vers la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \" via la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navigate\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {2,34-63}\",\n    \"numbered\": true,\n    \"{2,34-63}\": true\n  }, \"import { clearPage, renderPageTitle } from '../../utils/render';\\nimport Navigate from '../Router/Navigate';\\n\\nconst RegisterPage = () => {\\n  clearPage();\\n  renderPageTitle('Register');\\n  renderRegisterForm();\\n};\\n\\nfunction renderRegisterForm() {\\n  const main = document.querySelector('main');\\n  const form = document.createElement('form');\\n  form.className = 'p-5';\\n  const username = document.createElement('input');\\n  username.type = 'text';\\n  username.id = 'username';\\n  username.placeholder = 'username';\\n  username.required = true;\\n  username.className = 'form-control mb-3';\\n  const password = document.createElement('input');\\n  password.type = 'password';\\n  password.id = 'password';\\n  password.required = true;\\n  password.placeholder = 'password';\\n  password.className = 'form-control mb-3';\\n  const submit = document.createElement('input');\\n  submit.value = 'Register';\\n  submit.type = 'submit';\\n  submit.className = 'btn btn-danger';\\n  form.appendChild(username);\\n  form.appendChild(password);\\n  form.appendChild(submit);\\n  main.appendChild(form);\\n  form.addEventListener('submit', onRegister);\\n}\\n\\nasync function onRegister(e) {\\n  e.preventDefault();\\n\\n  const username = document.querySelector('#username').value;\\n  const password = document.querySelector('#password').value;\\n\\n  const options = {\\n    method: 'POST',\\n    body: JSON.stringify({\\n      username,\\n      password,\\n    }),\\n    headers: {\\n      'Content-Type': 'application/json',\\n    },\\n  };\\n\\n  const response = await fetch('/api/auths/register', options);\\n\\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n  const authenticatedUser = await response.json();\\n\\n  console.log('Newly registered & authenticated user : ', authenticatedUser);\\n\\n  Navigate('/');\\n}\\n\\nexport default RegisterPage;\\n\\n\")), mdx(\"p\", null, \"Veuillez ex\\xE9cuter le frontend et vous assurer que l'utilisateur que vous tentez de cr\\xE9er est bien cr\\xE9\\xE9 par votre API. Si tout fonctionne, vous aurez une confirmation dans la console de votre browser.\"), mdx(\"p\", null, \"Bien, nous souhaitons pour l'instant sauvegarder \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authenticatedUser\"), \" de mani\\xE8re temporaire, car cet objet contient comme info le username et le token de l'utilisateur.\\n\\uD83D\\uDCAD Comment faire pour que cet objet soit disponible dans d'autres modules ?\\nCette question nous permet d'explorer un propri\\xE9t\\xE9 importante des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"export\"), \" d'objets via ECMAScript : ce sont des objets immuables, c'est-\\xE0-dire dont vous ne pouvez pas directement changer leurs valeurs. Comment faire alors pour offrir \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authenticatedUser\"), \" ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Nous allons offrir quatre nouvelles fonctions : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"une fonction qui renverra l'\\xE9tat d'une variable \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authenticatedUser\"), \" ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"une fonction qui permettra de modifier la variable \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"authenticatedUser\"), \" ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"une fonction qui indiquera si l'utilisateur est authentifi\\xE9 ou pas ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"une fonction qui permettra de faire un reset de l'utilisateur en cours (on utilisera cette fonction lors d'un logout).\\n.\")), mdx(\"p\", null, \"Veuillez cr\\xE9er le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/utils/auths.js\"), \" et y ajouter le code suivant :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered\",\n    \"numbered\": true\n  }, \"let currentUser;\\n\\nconst getAuthenticatedUser = () => currentUser;\\n\\nconst setAuthenticatedUser = (authenticatedUser) => {\\n  currentUser = authenticatedUser;\\n};\\n\\nconst isAuthenticated = () => currentUser !== undefined;\\n\\nconst clearAuthenticatedUser = () => {\\n  currentUser = undefined;\\n};\\n\\n// eslint-disable-next-line object-curly-newline\\nexport { getAuthenticatedUser, setAuthenticatedUser, isAuthenticated, clearAuthenticatedUser };\\n\")), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le code de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RegisterPage\"), \" afin de sauver en m\\xE9moire vive l'utilisateur authentifi\\xE9. Nous allons aussi pr\\xE9parer la suite afin d'avoir une Navbar qui s'adaptera lorsqu'un utilisateur est authentifi\\xE9, c'est pourquoi nous allons appeler le composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {1,3,66,68}\",\n    \"numbered\": true,\n    \"{1,3,66,68}\": true\n  }, \"import { setAuthenticatedUser } from '../../utils/auths';\\nimport { clearPage, renderPageTitle } from '../../utils/render';\\nimport Navbar from '../Navbar/Navbar';\\nimport Navigate from '../Router/Navigate';\\n\\nconst RegisterPage = () => {\\n  clearPage();\\n  renderPageTitle('Register');\\n  renderRegisterForm();\\n};\\n\\nfunction renderRegisterForm() {\\n  const main = document.querySelector('main');\\n  const form = document.createElement('form');\\n  form.className = 'p-5';\\n  const username = document.createElement('input');\\n  username.type = 'text';\\n  username.id = 'username';\\n  username.placeholder = 'username';\\n  username.required = true;\\n  username.className = 'form-control mb-3';\\n  const password = document.createElement('input');\\n  password.type = 'password';\\n  password.id = 'password';\\n  password.required = true;\\n  password.placeholder = 'password';\\n  password.className = 'form-control mb-3';\\n  const submit = document.createElement('input');\\n  submit.value = 'Register';\\n  submit.type = 'submit';\\n  submit.className = 'btn btn-danger';\\n  form.appendChild(username);\\n  form.appendChild(password);\\n  form.appendChild(submit);\\n  main.appendChild(form);\\n  form.addEventListener('submit', onRegister);\\n}\\n\\nasync function onRegister(e) {\\n  e.preventDefault();\\n\\n  const username = document.querySelector('#username').value;\\n  const password = document.querySelector('#password').value;\\n\\n  const options = {\\n    method: 'POST',\\n    body: JSON.stringify({\\n      username,\\n      password,\\n    }),\\n    headers: {\\n      'Content-Type': 'application/json',\\n    },\\n  };\\n\\n  const response = await fetch('/api/auths/register', options);\\n\\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n  const authenticatedUser = await response.json();\\n\\n  console.log('Newly registered & authenticated user : ', authenticatedUser);\\n\\n  setAuthenticatedUser(authenticatedUser);\\n\\n  Navbar();\\n\\n  Navigate('/');\\n}\\n\\nexport default RegisterPage;\\n\")), mdx(\"p\", null, \"Pour la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LoginPage\"), \", les modifications \\xE0 faire sont les m\\xEAmes :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {1,3-4,36-69}\",\n    \"numbered\": true,\n    \"{1,3-4,36-69}\": true\n  }, \"import { setAuthenticatedUser } from '../../utils/auths';\\nimport { clearPage, renderPageTitle } from '../../utils/render';\\nimport Navbar from '../Navbar/Navbar';\\nimport Navigate from '../Router/Navigate';\\n\\nconst LoginPage = () => {\\n  clearPage();\\n  renderPageTitle('Login');\\n  renderRegisterForm();\\n};\\n\\nfunction renderRegisterForm() {\\n  const main = document.querySelector('main');\\n  const form = document.createElement('form');\\n  form.className = 'p-5';\\n  const username = document.createElement('input');\\n  username.type = 'text';\\n  username.id = 'username';\\n  username.placeholder = 'username';\\n  username.required = true;\\n  username.className = 'form-control mb-3';\\n  const password = document.createElement('input');\\n  password.type = 'password';\\n  password.id = 'password';\\n  password.required = true;\\n  password.placeholder = 'password';\\n  password.className = 'form-control mb-3';\\n  const submit = document.createElement('input');\\n  submit.value = 'Login';\\n  submit.type = 'submit';\\n  submit.className = 'btn btn-danger';\\n  form.appendChild(username);\\n  form.appendChild(password);\\n  form.appendChild(submit);\\n  main.appendChild(form);\\n  form.addEventListener('submit', onLogin);\\n}\\n\\nasync function onLogin(e) {\\n  e.preventDefault();\\n\\n  const username = document.querySelector('#username').value;\\n  const password = document.querySelector('#password').value;\\n\\n  const options = {\\n    method: 'POST',\\n    body: JSON.stringify({\\n      username,\\n      password,\\n    }),\\n    headers: {\\n      'Content-Type': 'application/json',\\n    },\\n  };\\n\\n  const response = await fetch('/api/auths/login', options);\\n\\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n  const authenticatedUser = await response.json();\\n\\n  console.log('Authenticated user : ', authenticatedUser);\\n\\n  setAuthenticatedUser(authenticatedUser);\\n\\n  Navbar();\\n\\n  Navigate('/');\\n}\\n\\nexport default LoginPage;\\n\")), mdx(\"p\", null, \"Nous souhaitons maintenant faire en sorte que la Navbar affiche des \\xE9l\\xE9ments diff\\xE9rents si l'utilisateur est authentifi\\xE9 au pas :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"s'il est authentifi\\xE9 : on affiche \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Home\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Login\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Register\"), \" et le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"username\"), \" de l'utilisateur connect\\xE9.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"s'il est anonyme : on affiche \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Home\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add a pizza\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Logout\"), \".\")), mdx(\"p\", null, \"Nous allons mettre \\xE0 jour la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \" pour s'adapter \\xE0 l'authentification d'un utilisateur :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// eslint-disable-next-line no-unused-vars\\nimport { Navbar as BootstrapNavbar } from 'bootstrap';\\nimport { getAuthenticatedUser, isAuthenticated } from '../../utils/auths';\\n\\nconst Navbar = () => {\\n  renderNavbar();\\n};\\n\\nfunction renderNavbar() {\\n  const authenticatedUser = getAuthenticatedUser();\\n\\n  const anonymousUserNavbar = `\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-danger\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">e-Pizzeria</a>\\n        <button\\n          class=\\\"navbar-toggler\\\"\\n          type=\\\"button\\\"\\n          data-bs-toggle=\\\"collapse\\\"\\n          data-bs-target=\\\"#navbarSupportedContent\\\"\\n          aria-controls=\\\"navbarSupportedContent\\\"\\n          aria-expanded=\\\"false\\\"\\n          aria-label=\\\"Toggle navigation\\\"\\n        >\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <ul class=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link active\\\" aria-current=\\\"page\\\" href=\\\"#\\\" data-uri=\\\"/\\\">Home</a>\\n            </li>\\n            <li id=\\\"loginItem\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/login\\\">Login</a>\\n            </li>\\n            <li id=\\\"registerItem\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/register\\\">Register</a>\\n            </li>            \\n          </ul>\\n        </div>\\n      </div>\\n    </nav>\\n`;\\n\\n  const authenticatedUserNavbar = `\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-danger\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">e-Pizzeria</a>\\n        <button\\n          class=\\\"navbar-toggler\\\"\\n          type=\\\"button\\\"\\n          data-bs-toggle=\\\"collapse\\\"\\n          data-bs-target=\\\"#navbarSupportedContent\\\"\\n          aria-controls=\\\"navbarSupportedContent\\\"\\n          aria-expanded=\\\"false\\\"\\n          aria-label=\\\"Toggle navigation\\\"\\n        >\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <ul class=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link active\\\" aria-current=\\\"page\\\" href=\\\"#\\\" data-uri=\\\"/\\\">Home</a>\\n            </li>          \\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/add-pizza\\\">Add a pizza</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uri=\\\"/logout\\\">Logout</a>\\n            </li>    \\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">${authenticatedUser?.username}</a>\\n            </li>           \\n          </ul>\\n        </div>\\n      </div>\\n    </nav>\\n`;\\n\\n  const navbar = document.querySelector('#navbarWrapper');\\n\\n  navbar.innerHTML = isAuthenticated() ? authenticatedUserNavbar : anonymousUserNavbar;\\n}\\n\\nexport default Navbar;\\n\")), mdx(\"p\", null, \"Ce code est quasi enti\\xE8rement neuf. On a rajout\\xE9 l'\\xE9l\\xE9ment qui permettra de r\\xE9aliser le logout d'un utilisateur. Avant d'aller plus loin, veuillez tester l'application.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Loggez-vous avec l'utilisateur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \" (et le password \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \") et v\\xE9rifier que vous \\xEAtes bien redirig\\xE9 vers la HomePage une fois authentifi\\xE9, que la Navbar contient bien les \\xE9l\\xE9ments attendus, dont le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"username\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez maintenant tester un clic sur l'\\xE9l\\xE9ment \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Add a pizza\"), \" de la Navbar. Il ne se passe rien...\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uD83D\\uDCAD Pourquoi les clics ne sont plus pris en compte ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En fait, regardons le code de notre \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Router\"), \", pour la gestion des clics sur la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function onNavBarClick() {\\n  const navItems = document.querySelectorAll('.nav-link');\\n\\n  navItems.forEach((item) => {\\n    item.addEventListener('click', (e) => {\\n      e.preventDefault();\\n      const uri = e.target?.dataset?.uri;\\n      const componentToRender = routes[uri];\\n      if (!componentToRender) throw Error(`The ${uri} ressource does not exist.`);\\n\\n      componentToRender();\\n      window.history.pushState({}, '', uri);\\n    });\\n  });\\n}\\n\")), mdx(\"p\", null, \"En fait, tant dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LoginPage\"), \" que dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RegisterPage\"), \", nous faisons appel \\xE0 la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Navbar\")), \" qui fait un rerender de la Navbar. Ainsi, tous les \\xE9l\\xE9ments de la barre de navigation sont rerender, et donc comme le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Router\"), \" n'est pas r\\xE9appel\\xE9, la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"onNavBarClick\")), \" n'est pas r\\xE9ex\\xE9cut\\xE9e. Ainsi, m\\xEAme si les nouveaux \\xE9l\\xE9ments de la Navbar ont la classe CSS \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"nav-link\")), \", leurs \\xE9couteurs d'\\xE9v\\xE9nements de type click n'existent pas.\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Comment corriger cela ?\\nOn pourrait se dire qu'il suffit de faire appel \\xE0 la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"onNavBarClick\")), \" dans la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \". Cette solution ne fonctionnerait pas car nous aurions des d\\xE9pendances cycliques, la Navbar devrait faire appel aux routes, qui elles font appel aux pages, les pages faisant appel \\xE0 la Navbar...\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"D\\xE8s lors, le mieux serait de mettre un \\xE9couteur d'\\xE9v\\xE9nements au niveau du wrapper de la Navbar.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Comme le wrapper n'est jamais r\\xE9initialis\\xE9, tout sera en ordre.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez donc mettre \\xE0 jour la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"onNavBarClick\")), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Router/Router.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function onNavBarClick() {\\n  const navbarWrapper = document.querySelector('#navbarWrapper');\\n\\n  navbarWrapper.addEventListener('click', (e) => {\\n    e.preventDefault();\\n    const navBarItemClicked = e.target;\\n    const uri = navBarItemClicked?.dataset?.uri;\\n    if (uri) {\\n      const componentToRender = routes[uri];\\n      if (!componentToRender) throw Error(`The ${uri} ressource does not exist.`);\\n\\n      componentToRender();\\n      window.history.pushState({}, '', uri);\\n    }\\n  });\\n}\\n\")), mdx(\"p\", null, \"Veuillez noter que le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"navbarWrapper\"), \" est initialis\\xE9 au sein du composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Header\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Dans la nouvelle version du code du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Router\"), \", le gestionnaire de clic est ajout\\xE9 au niveau de ce wrapper. Gr\\xE2ce \\xE0 l'event objet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"e\")), \", on acc\\xE8de \\xE0 l'\\xE9l\\xE9ment sur lequel on a cliqu\\xE9 gr\\xE2ce \\xE0 la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"target\")), \". On retrouve donc l'\\xE9l\\xE9ment de la navbar sur lequel on a cliqu\\xE9 tr\\xE8s facilement. \"), mdx(\"p\", null, \"Veuillez tester votre IHM et v\\xE9rifier qu'une fois loggu\\xE9, vous puissiez bien voyager entre les pages.\"), mdx(\"p\", null, \"Il reste maintenant \\xE0 cr\\xE9er un composant permettant de faire un logout. On souhaite que ce composant de logout supprime l'utilisateur authentifi\\xE9, r\\xE9affiche la Navbar pour un utilisateur anonyme et redirige l'utilisateur vers la page de login.\"), mdx(\"p\", null, \"Pour ce faire, veuillez cr\\xE9er le dossier et le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Logout/Logout.js\"), \" et y ajouter ce code :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { clearAuthenticatedUser } from '../../utils/auths';\\nimport Navbar from '../Navbar/Navbar';\\nimport Navigate from '../Router/Navigate';\\n\\nconst Logout = () => {\\n  clearAuthenticatedUser();\\n  Navbar();\\n  Navigate('/login');\\n};\\n\\nexport default Logout;\\n\")), mdx(\"p\", null, \"Attention, m\\xEAme si nous avons mis \\xE0 jour la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \" et cr\\xE9\\xE9 le composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logout\"), \", le boilerplate du frontend impose de rajouter une route au sein du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Router\"), \" pour qu'un clic sur l'\\xE9l\\xE9ment \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logout\"), \" de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navbar\"), \" am\\xE8ne \\xE0 appeler le composant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logout\"), \".\\nVeuillez donc mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"routes\")), \" au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Router/Router.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{1,12}\",\n    \"{1,12}\": true\n  }, \"import Logout from '../Logout/Logout';\\nimport AddPizzaPage from '../Pages/AddPizzaPage';\\nimport HomePage from '../Pages/HomePage';\\nimport LoginPage from '../Pages/LoginPage';\\nimport RegisterPage from '../Pages/RegisterPage';\\n\\nconst routes = {\\n  '/': HomePage,\\n  '/login': LoginPage,\\n  '/register': RegisterPage,\\n  '/add-pizza': AddPizzaPage,\\n  '/logout': Logout,\\n};\\n\")), mdx(\"p\", null, \"Veuillez maintenant tester le login et le logout. Tout devrait \\xEAtre fonctionnel !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Il nous reste \\xE0 faire en sorte que l'on puisse autoriser l'op\\xE9ration de cr\\xE9ation de pizza.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"b2\"\n  }), \"b.2) Autoriser l'appel \\xE0 une op\\xE9ration prot\\xE9g\\xE9e\"), mdx(\"p\", null, \"Nous allons maintenant voir comment, \\xE0 partir d'une IHM, nous pouvons utiliser un token pour acc\\xE9der \\xE0 une op\\xE9ration d'une RESTful API.\"), mdx(\"p\", null, \"Veuillez vous assurer que la derni\\xE8re version de la RESTful API de la pizzeria est bien d\\xE9marr\\xE9e. En cas de souci, vous pouvez utiliser ce code-ci :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\"), mdx(\"p\", null, \"Veuillez vous connecter \\xE0 l'IHM \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jwt-fetch\"), \" \\xE0 l'aide du compte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"manager\"), \" et tentez d'ajouter une pizza. Cela ne devrait pas fonctionner. Veuillez regarder dans la console : il devrait y avoir une erreur qui s'affiche avec le \\\"status code\\\" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"401 : Unauthorized\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En effet, l'API attend un token pour autoriser l'op\\xE9ration de cr\\xE9ation d'une pizza.\"), mdx(\"p\", null, \"Nous allons donc mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/src/Components/Pages/AddPizzaPage.js\"), \" pour ajouter le token de l'utilisateur authentifi\\xE9 au sein du header de la requ\\xEAte (il n'y a que trois lignes \\xE0 rajouter) :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {1,44,54}\",\n    \"numbered\": true,\n    \"{1,44,54}\": true\n  }, \"import { getAuthenticatedUser } from '../../utils/auths';\\nimport { clearPage, renderPageTitle } from '../../utils/render';\\nimport Navigate from '../Router/Navigate';\\n\\nconst AddPizzaPage = () => {\\n  clearPage();\\n  renderPageTitle('Add a pizza to the menu');\\n  renderAddPizzaForm();\\n};\\n\\nfunction renderAddPizzaForm() {\\n  const main = document.querySelector('main');\\n  const form = document.createElement('form');\\n  form.className = 'p-5';\\n  const title = document.createElement('input');\\n  title.type = 'text';\\n  title.id = 'title';\\n  title.placeholder = 'title of your pizza';\\n  title.required = true;\\n  title.className = 'form-control mb-3';\\n  const content = document.createElement('input');\\n  content.type = 'text';\\n  content.id = 'content';\\n  content.required = true;\\n  content.placeholder = 'Content of your pizza';\\n  content.className = 'form-control mb-3';\\n  const submit = document.createElement('input');\\n  submit.value = 'Add pizza to the menu';\\n  submit.type = 'submit';\\n  submit.className = 'btn btn-danger';\\n  form.appendChild(title);\\n  form.appendChild(content);\\n  form.appendChild(submit);\\n  main.appendChild(form);\\n  form.addEventListener('submit', onAddPizza);\\n}\\n\\nasync function onAddPizza(e) {\\n  e.preventDefault();\\n\\n  const title = document.querySelector('#title').value;\\n  const content = document.querySelector('#content').value;\\n\\n  const authenticatedUser = getAuthenticatedUser();\\n\\n  const options = {\\n    method: 'POST',\\n    body: JSON.stringify({\\n      title,\\n      content,\\n    }),\\n    headers: {\\n      'Content-Type': 'application/json',\\n      Authorization: authenticatedUser.token,\\n    },\\n  };\\n\\n  const response = await fetch('/api/pizzas', options);\\n\\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\\n\\n  const newPizza = await response.json();\\n\\n  console.log('New pizza added : ', newPizza);\\n\\n  Navigate('/');\\n}\\n\\nexport default AddPizzaPage;\\n\\n\")), mdx(\"p\", null, \"Veuillez vous connecter \\xE0 l'IHM \\xE0 l'aide du compte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"manager\"), \" et tentez d'ajouter une pizza. Cela ne devrait toujours pas fonctionner. Veuillez regarder dans la console : il devrait y avoir une erreur qui s'affiche avec le \\\"status code\\\" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"403 : Forbidden\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En effet, l'API attend un token pour autoriser l'op\\xE9ration de cr\\xE9ation d'une pizza, mais seulement \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \" a le privil\\xE8ge d'ajouter une pizza au menu !\"), mdx(\"p\", null, \"D\\xE9connectez-vous (logout), reconnectez-vous \\xE0 l'aide du compte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \", et ajoutez une pizza.\\nVoila ! Le site devrait \\xEAtre enti\\xE8rement fonctionnel !\"), mdx(\"p\", null, \"Si tout fonctionne bien, faites un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre repo (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") avec le message\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jwt-fetch\"), \"\\\".\"), mdx(\"p\", null, \"En cas de souci, vous pouvez utiliser le code du tutoriel :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour le frontend : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/jwt-fetch\"\n  }, \"jwt-fetch\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour l'API : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\")), mdx(\"p\", null, \"\\uD83D\\uDCAD Est-ce que c'est \\\"safe\\\" que notre IHM affiche le menu \\\"Add a pizza\\\" pour un utilisateur qui n'est pas l'admin ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En fait oui, c'est \\\"safe\\\", vous l'avez test\\xE9. L'API ne doit jamais faire confiance aux applications clientes pour appliquer la s\\xE9curit\\xE9. Ainsi, m\\xEAme si le frontend autorise l'acc\\xE8s \\xE0 des op\\xE9rations qui ne devraient pas \\xEAtre permises, au regard des autorisations appliqu\\xE9es par l'API, \\xE7a n'a pas d'importance point de vue s\\xE9curit\\xE9.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"De la m\\xEAme fa\\xE7on, c'est pour \\xE7a qu'une API doit aussi toujours valider les param\\xE8tres qu'elle re\\xE7oit. Elle ne peut pas faire confiance aux applications clientes, comme par exemple \\xE0 une application web tournant dans un browser, pour valider tous les champs d'un formulaire avant de faire la requ\\xEAte.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"La raison est simple, l'API est d\\xE9velopp\\xE9e ind\\xE9pendamment des applications clientes, elle ne peut pas supposer que les requ\\xEAtes seront toujours bien construites.\"), mdx(\"p\", null, \"\\uD83D\\uDCAD OK, tout est \\\"safe\\\" si l'API fait toutes les v\\xE9rifications n\\xE9cessaires. N\\xE9anmoins, n'y a-t-il pas des r\\xE8gles de bonnes pratiques au niveau des IHM, pour ne pas permettre de faire n'importe quelles requ\\xEAtes vers des API ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Et bien oui, au niveau des IHM, pour des questions d'\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ergonomie\"), \", d'exp\\xE9rience utilisateur, on va faire en sorte :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de ne pas offrir des op\\xE9rations qui ne seront pas autoris\\xE9es. Par exemple, dans le cadre de ce tutoriel sur un site permettant de g\\xE9rer une pizzeria, si l'utilisateur n'est pas \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"admin\"), \", alors il ne faut pas frustrer les utilisateurs en leur faisant croire qu'ils ont acc\\xE8s \\xE0 l'op\\xE9ration de cr\\xE9er une pizza ! Imaginez-vous, vous cr\\xE9er une nouvelle pizza de 32 ingr\\xE9dients, et lors de la soumission, vous recevez un message comme quoi vous n'\\xEAtes pas l'admin du site et que vous n'avez donc pas le droit de cr\\xE9er une pizza \\uD83D\\uDE32!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de ne pas demander du travail \\xE0 une API quand l'IHM peut d\\xE9tecter que \\xE7a n'est pas utile.\\nAinsi, quand une IHM offre des formulaires, qui am\\xE8neront \\xE0 des requ\\xEAtes vers des API, on \\xE9vitera d'autoriser la soumission des donn\\xE9es tant que les champs n'ont pas \\xE9t\\xE9 valid\\xE9s. Tout ce que l'IHM peut valider c\\xF4t\\xE9 client, elle doit le faire. Le feedback sera plus rapide pour l'utilisateur, et les ressources de l'API seront \\xE9conomis\\xE9es (pas d'appel inutile).\")), mdx(\"p\", null, \"N'h\\xE9sitez donc pas \\xE0 mettre \\xE0 jour ce tutoriel pour faire en sorte de n'afficher \\\"Add a pizza\\\" que si l'utilisateur est \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \".\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Ca n'est pas un peu \\\"cheap\\\" que seul l'utilisateur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \" puisse avoir le privil\\xE8ge d'administrateur du site ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"H\\xE9 bien oui, c'est \\\"cheap\\\". G\\xE9n\\xE9ralement, dans le cadre d'applications plus robustes, nous allons ajouter un ou plusieurs r\\xF4les aux utilisateurs. Par exemple, dans le cadre d'applications o\\xF9 les r\\xF4les sont simples, qu'il n'y a jamais qu'un seul r\\xF4le associ\\xE9 \\xE0 un utilisateur, il suffirait d'ajouter au niveau de l'API la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"role\"), \" aux utilisateurs. Par exemple, la majorit\\xE9 des utilisateurs pourrait avoir un r\\xF4le dont la valeur serait \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"default\"), \", et une minorit\\xE9 d'utilisateur auraient le r\\xF4le d'\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \"...\"), mdx(\"p\", null, \"On n'affiche actuellement \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pas de message d'erreur\"), \" \\xE0 l'utilisateur lorsque la r\\xE9ponse d'une API renvoie une erreur. Pour am\\xE9liorer l'exp\\xE9rience de l'utilisateur, ce serait une am\\xE9lioration \\xE0 faire.\"), mdx(\"p\", null, \"Finalement, lorsqu'on ferme le browser et revient sur l'application par la suite, on n'est plus authentifi\\xE9. Nous allons donc prochainement voir comment nous pourrions sauvegarder des donn\\xE9es de session c\\xF4t\\xE9-client, dans le browser.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"b3\"\n  }), \" b.3) Probl\\xE8mes de s\\xE9curit\\xE9\"), mdx(\"p\", null, \"Il y a un probl\\xE8me de s\\xE9curit\\xE9 majeur actuellement. Nous pourrions \\xEAtre victime d'attaques de type XSS, des injections de JS malicieux sont possibles \\uD83D\\uDE28 !\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"De plus, si quelqu'un a acc\\xE8s au fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/data/users.json\"), \" pr\\xE9sent sur l'API, il a acc\\xE8s \\xE0 tous les passwords des utilisateurs en clair \\uD83D\\uDE28 !\"), mdx(\"p\", null, \"Nous allons r\\xE9aliser un exercice avant de traiter des probl\\xE8mes de s\\xE9curit\\xE9.\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"c\"\n  }), \" c) Exercice 7.1 : Authentification & autorisation au sein de myMovies\"), mdx(\"p\", null, \"Lors de l'exercice pr\\xE9c\\xE9dent (Exercice 6.1), vous aviez une application qui permet normalement de g\\xE9rer des films, mais qui n'\\xE9tait pas s\\xE9curis\\xE9e.\"), mdx(\"p\", null, \"A cet exercice, veuillez introduire l'authentification d'utilisateur via ces deux nouveaux cas d'utilisation :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC5 : un utilisateur doit pouvoir cr\\xE9er un compte (register).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC6 : un utilisateur doit pouvoir se loguer (login).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC7 : un utilisateur doit pouvoir se d\\xE9connecter (logout).\")), mdx(\"p\", null, \"Vous allez int\\xE9grer le frontend de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies\"), \" r\\xE9alis\\xE9 au module 3 (Exercice 3.1) avec la RESTful API d\\xE9velopp\\xE9e au module 5 (Exercice 5.2).\"), mdx(\"p\", null, \"L'application \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies\"), \" doit maintenant autoriser les op\\xE9rations suivantes aux utilisateurs authentifi\\xE9s uniquement :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC2 : l'ajout d'une ressource de type films via un formulaire d'ajout d'un film.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC3 : la suppression d'un film.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC4 : la mise \\xE0 jour des donn\\xE9es d'un film (\\xE0 l'exception de l'id associ\\xE9 \\xE0 un film).\")), mdx(\"p\", null, \"Comme auparavant, cette op\\xE9ration est permise pour tous les utilisateurs, anonymes ou authentifi\\xE9s :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UC1 : l'affichage, sous forme de tableau, de toutes les ressources de type films.\")), mdx(\"p\", null, \"Vous allez devoir mettre \\xE0 jour tant l'API que le frontend.\"), mdx(\"p\", null, \"Voici les op\\xE9rations qui doivent \\xEAtre mises \\xE0 disposition par votre API :\"), mdx(\"h5\", null, \"Op\\xE9rations sur les ressources de type \\\"auths\\\"\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xE9thode HTTP\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Auths?\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Op\\xE9ration\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"auths/register\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Non\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cr\\xE9er une ressource de type \\\"users\\\" et renvoyer le username et un token JWT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"auths/login\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Non\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"V\\xE9rifier les credentials d'une ressource de type \\\"users\\\" et renvoyer le username et un token JWT si les credentials sont OK\")))), mdx(\"h5\", null, \"Op\\xE9rations sur les ressources de type \\\"films\\\" ou \\\"movies\\\" (selon votre choix)\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xE9thode HTTP\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Auths?\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Op\\xE9ration\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Non\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ALL : Lire toutes les ressources de la collection\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films?minimum-duration=value\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Non\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donn\\xE9\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Non\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ONE : Lire la ressource identifi\\xE9e\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"JWT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE ONE : Cr\\xE9er une ressource bas\\xE9e sur les donn\\xE9es de la requ\\xEAte\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"JWT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE ONE : Effacer la ressource identifi\\xE9e\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"PUT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"JWT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UPDATE ONE : Replacer l'enti\\xE8ret\\xE9 de la ressource par les donn\\xE9es de la requ\\xEAte\")))), mdx(\"p\", null, \"Afin de r\\xE9aliser cet exercice, voici les contraintes d'impl\\xE9mentation :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Commencez par mettre \\xE0 jour l'API pour ajouter les op\\xE9rations de register, de login, ainsi que les autorisations pour les fonctions d'\\xE9critures sur des ressources de type films. Utilisez le contenu de votre r\\xE9pertoire d'exercices \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module5/5.2\"), \" comme point de d\\xE9part pour cr\\xE9er, dans votre repository local et votre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"web2\"), \"), le r\\xE9pertoire nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module7/7.1/api\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Veuillez tester votre API via REST Client pour vous assurer que les autorisations JWT fonctionnent correctement. Quand tout est OK, vous pouvez passer au d\\xE9veloppement de votre frontend.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour le frontend, utilisez le contenu de votre r\\xE9pertoire d'exercices \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module6/6.1\"), \" comme point de d\\xE9part pour cr\\xE9er, dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"web2\"), \"), le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module7/7.1/hmi\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Veuillez utiliser le proxy de votre frontend afin de contourner les probl\\xE8mes associ\\xE9 \\xE0 la gestion des CORS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Veuillez d\\xE9velopper de mani\\xE8re incr\\xE9mentale votre IHM, use case par use case, en v\\xE9rifiant le bon fonctionnement de chaque cas d'utilisation avant de passer au d\\xE9veloppement de l'UC suivant.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Nous vous recommandons de commencer par le m\\xE9canisme d'authentification en ajoutant l'UC5 et l'UC6. Notez qu'il est facile de d\\xE9marrer avec l'UC6 pour le login d'admin qui existe d\\xE9j\\xE0 au niveau de l'API par d\\xE9faut. Pensez \\xE0 bien mettre \\xE0 jour votre \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Navbar\"), \" pour afficher les bons menus :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"si l'utilisateur est anonyme : liens uniquement vers UC1 (view movies), UC5 (login) & UC6 (register) ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"si l'utilisateur est authentifi\\xE9 : liens uniquement vers UC1 (view movies) / UC2 (create) / UC3 (delete) / UC4 (update), UC7 (logout).\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faites attention, il n'est pas autoris\\xE9, pour des raisons d'ergonomie, que le frontend offre les fonctionnalit\\xE9s d'\\xE9criture de ressources si l'utilisateur n'est pas authentifi\\xE9 : UC2 (create), UC3 (delete) et UC4 (update) sont des op\\xE9rations invisibles pour un utilisateur anonyme.\")), mdx(\"h4\", null, \"\\uD83E\\uDD1D Tips\"), mdx(\"p\", null, \"Cet exercice est l'application du tutoriel vu dans ce module-ci. N'h\\xE9sitez pas donc \\xE0 rejouer les \\xE9tapes vues dans le tutoriel au niveau de votre API : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#a\"\n  }, \"a) Authentification s\\xE9curis\\xE9e et autorisation d'acc\\xE8s aux op\\xE9rations d'une RESTful API via JWT\"), \".\"), mdx(\"p\", null, \"Occupez-vous ensuite du frontend : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#b\"\n  }, \"b) Utilisation de JWT au sein d'une IHM\"), \".\\nAttention \\xE0 ne pas oublier de mettre \\xE0 jour votre Router, d'ajouter les token dans le header de vos requ\\xEAtes via fetch...\"), mdx(\"p\", null, \"Veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 7 : auths\"), \"\\\"\\\".\"), mdx(\"p\", null, \"NB : Le code de vos applications se trouve dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") dans les r\\xE9pertoires nomm\\xE9s\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module7/7.1/api\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module7/7.1/hmi\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"d\"\n  }), \" d) S\\xE9curisation de RESTful API\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"d1\"\n  }), \" d.1) Introduction\"), mdx(\"p\", null, \"La s\\xE9curisation d'API est une probl\\xE9matique complexe. Nous n'allons pas aller dans les d\\xE9tails de cette probl\\xE9matique, juste offrir une solution \\xE0 deux probl\\xE9matiques simples \\xE0 traiter.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"d2\"\n  }), \" d.2) Protection contre les attaques XSS\"), mdx(\"h3\", null, \"d.2.1) Une attaque XSS, c'est quoi ?\"), mdx(\"p\", null, \"Les attaques \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XSS\"), \", ou \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cross-Site Scripting\"), \", sont un type d'injection de scripts malicieux dans une application web.\"), mdx(\"p\", null, \"Imaginez le forum web d'une banque et ce sc\\xE9nario :\"), mdx(ScrollableImage, {\n    name: \"xss.png\",\n    minWidth: \"500px\",\n    maxWidth: \"700px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"p\", null, \"L'API de la banque permet d'enregistrer des messages qui sont associ\\xE9s \\xE0 des forums sur lesquels leurs clients peuvent poster des messages.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Si l'API de la banque \\xE9tait mal s\\xE9curis\\xE9e et qu'elle permettait d'enregistrer n'importe quels types d'information en tant que \\\"messages\\\" du forum, il serait possible \\xE0 un attaquant d'injecter du JS malicieux dans l'API.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Plus tard, lors de l'affichage des messages par le forum de la banque (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://forum.my-bank.com \"), \"), le JS malicieux pourra s'ex\\xE9cuter dans le browser de n'importe quel utilisateur.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Vous avez vu que via du JS, on peut envoyer de l'information n'importe o\\xF9, notamment \\xE0 l'aide de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fetch\"), \". Ce qui permettrait donc \\xE0 un hacker, via son script malicieux, d'envoyer des cookies contenant des infos sensibles \\xE0 son API malicieuse, en vue de futures attaques encore plus malicieuses, comme notamment vider le compte en banque d'utilisateurs.\"), mdx(\"p\", null, \"La protection contre des attaques XSS se fait \\xE0 diff\\xE9rents niveaux. Ca n'est pas l'objet de ce cours de voir cela en d\\xE9tails, mais nous allons voir un technique simple pour \\xE9viter certaines attaques XSS.\"), mdx(\"h3\", null, \"d.2.2) R\\xE9aliser une attaque XSS\"), mdx(\"p\", null, \"Nous allons maintenant r\\xE9aliser une attaque XSS sur le site de la pizzeria.\"), mdx(\"p\", null, \"Veuillez lancer le frontend \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jwt-fetch\"), \" et le backend \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"auths\"), \" du site de la pizzeria. En cas de soucis :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour le frontend : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/jwt-fetch\"\n  }, \"jwt-fetch\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour l'API : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\")), mdx(\"p\", null, \"Evidemment, un hackeur, pour tenter l'attaque XSS, doit d'abord trouver un moyen d'usurper la session d'\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \". Nous ne verrons pas dans ce cours le genre d'attaques qui permettrait de le faire. Nous allons consid\\xE9rer que cette premi\\xE8re attaque est r\\xE9ussie et prendre le r\\xF4le d'un hackeur pouvant acc\\xE9der au compte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \".\"), mdx(\"p\", null, \"Veuillez vous loguer \\xE0 l'aide du compte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \" (et le password \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez vous rendre sur la page \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Add a pizza\"), \".\"), mdx(\"p\", null, \"Pour le titre de la pizza, vous pouvez ajouter n'importe quoi.\\nDans le contenu de la pizza, veuillez ajouter cela et soumettre : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"<img src=\\\"#\\\" onerror=\\\"alert('You have been hacked !')\\\">\\n\")), mdx(\"p\", null, \"En fait, nous avons ajout\\xE9 une balise \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"img\")), \" contenant du inline JS. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"oneerror\")), \" est un gestionnaire d'\\xE9v\\xE9nements qui sera d'office appel\\xE9 car la source (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"src=\\\"#\\\"\")), \" ) donn\\xE9 \\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"img\")), \" n'est pas une image.\"), mdx(\"p\", null, \"Maintenant, tout utilisateur connect\\xE9 ou pas qui se loguera sur le site va ex\\xE9cuter ce script \\\"malicieux\\\". Il verra le pop-up appara\\xEEtre avec le message \\\"You have been hacked !\\\".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"En effet, le menu des pizzas, tel qu'il est construit, est bas\\xE9 sur toutes les ressources de type \\\"pizzas\\\" renvoy\\xE9es par l'API, dont une des pizzas contient le JS malicieux qui est ex\\xE9cut\\xE9 dans une cellule de la table via ce code de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \" de l'IHM :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{7}\",\n    \"{7}\": true\n  }, \"function getAllTableLinesAsString(menu) {\\n  let pizzaTableLines = '';\\n\\n  menu?.forEach((pizza) => {\\n    pizzaTableLines += `<tr>\\n      <td>${pizza.title}</td>\\n      <td>${pizza.content}</td>\\n    </tr>`;\\n  });\\n\\n  return pizzaTableLines;\\n}\\n\")), mdx(\"h3\", null, \"d.2.3) Emp\\xEAcher les attaques XSS\"), mdx(\"p\", null, \"Par rapport \\xE0 l'attaque pr\\xE9c\\xE9dente, le plus simple pour prot\\xE9ger de l'attaque pourrait \\xEAtre de faire en sorte que l'application cliente n'interpr\\xE8te pas d'HTML / JS / CSS envoy\\xE9 par l'API.\"), mdx(\"p\", null, \"Ici, dans la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \", en fait on utilise la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"innerHTML\")), \" d'une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"td\")), \". Ainsi, l'HTML et l'inline JS associ\\xE9 est ex\\xE9cut\\xE9. Si l'on utilisais la propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"innerText\")), \" des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"td\")), \", alors, ni l'HTML et le JS serait interpr\\xE9t\\xE9 par le browser, et donc pas de possibilit\\xE9 de script malicieux au niveau de la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \".\"), mdx(\"p\", null, \"Oui mais si nous allions vers cette solution, cela serait probl\\xE9matique si nous souhaitions r\\xE9ellement d\\xE9velopper plusieurs applications clientes, il faudrait toujours faire attention \\xE0 cette contrainte.\"), mdx(\"p\", null, \"D\\xE8s lors, nous allons pr\\xE9f\\xE9rer la solution o\\xF9 nous s\\xE9curisons l'API. Ainsi, peu importe l'application cliente d\\xE9velopp\\xE9e, il devrait y avoir moins d'angles d'attaques.\"), mdx(\"p\", null, \"Au niveau de l'API, nous allons \\xE9chapper les caract\\xE8res dangereux, principalement \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"'\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"&\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"<\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \">\"), \".\"), mdx(\"p\", null, \"Nous allons utiliser la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://www.npmjs.com/package/escape-html\"\n  }, \"escape-html\")), \" sous Node.js \\xE9chappant les string pour une utilisation des string transform\\xE9es en HTML.\"), mdx(\"p\", null, \"Nous allons maintenant continuer le d\\xE9veloppement de l'API \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \" et la s\\xE9curiser.\"), mdx(\"p\", null, \"Au sein de votre repo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \", veuillez cr\\xE9er le projet nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/safe\"), \" sur base d'un copi\\xE9 coll\\xE9 de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/auths\"), \" (ou \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\"), mdx(\"p\", null, \"Pour la suite du tutoriel, nous consid\\xE9rons que tous les chemins absolus d\\xE9marrent du r\\xE9pertoire\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/web2/tutorials/pizzeria/api/safe\"), \".\"), mdx(\"p\", null, \"Veuillez installer la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"escape-html\"), \" au sein de votre nouveau projet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"safe\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i jsonwebtoken\\n\")), mdx(\"p\", null, \"Nous allons supprimer, s'il existe, le fichier reprenant le code malicieux introduit pr\\xE9c\\xE9demment : veuillez supprimer le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/data/pizzas.json\"), \".\"), mdx(\"p\", null, \"Nous allons \\xE0 pr\\xE9sent mettre \\xE0 jour le mod\\xE8le de pizzas pour \\xE9chapper les caract\\xE8res dangereux.\\nVeuillez modifier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/models/pizzas.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{1,9-10}\",\n    \"{1,9-10}\": true\n  }, \"const escape = require('escape-html');\\n// other bits of code\\n\\nfunction createOnePizza(title, content) {\\n  const pizzas = parse(jsonDbPath, defaultPizzas);\\n\\n  const createdPizza = {\\n    id: getNextId(),\\n    title: escape(title),\\n    content: escape(content),\\n  };\\n\\n  pizzas.push(createdPizza);\\n\\n  serialize(jsonDbPath, pizzas);\\n\\n  return createdPizza;\\n}\\n\")), mdx(\"p\", null, \"Nous allons maintenant tester si tout est r\\xE9gl\\xE9 au niveau de l'attaque XSS.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez vous loguer \\xE0 l'aide du compte \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \" (et le password \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"admin\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Veuillez vous rendre sur la page \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Add a pizza\"), \".\"), mdx(\"p\", null, \"Comme pr\\xE9c\\xE9demment : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour le titre de la pizza, vous pouvez ajouter n'importe quoi.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dans le contenu de la pizza, veuillez ajouter cela et soumettre : \")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"<img src=\\\"#\\\" onerror=\\\"alert('You have been hacked !')\\\">\\n\")), mdx(\"p\", null, \"Maintenant, tout utilisateur connect\\xE9 verra simplement appara\\xEEtre, quand il affiche la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HomePage\"), \", le menu des pizzas avec :\"), mdx(ScrollableImage, {\n    name: \"hacked.png\",\n    minWidth: \"500px\",\n    maxWidth: \"744px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"p\", null, \"Il n'y a plus de code JavaScript malicieux qui peut s'ex\\xE9cuter c\\xF4t\\xE9 client \\uD83C\\uDF89 !\"), mdx(\"p\", null, \"Nous allons maintenant r\\xE9gler les probl\\xE8mes de passwords mis en clair dans un fichier de l'API.\"), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"d3\"\n  }), \" d.3) S\\xE9curisation des passwords\"), mdx(\"p\", null, \"Nous souhaitons maintenant assurer que les passwords enregistr\\xE9s dans un support de donn\\xE9es (un fichier ou une base de donn\\xE9es) ne puissent pas \\xEAtre r\\xE9cup\\xE9r\\xE9s.\"), mdx(\"p\", null, \"\\uD83D\\uDC4D Pour ce faire, il est recommand\\xE9 d'hacher les passwords avant de les enregistrer au niveau d'une API.\"), mdx(\"p\", null, \"Afin de se prot\\xE9ger contre les \\\"hash attacks\\\", on utilise du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"salt\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"salt\"), \" : c'est une donn\\xE9e al\\xE9atoire qui est utilis\\xE9 en entr\\xE9e d'une fonction qui hache des donn\\xE9es. Ainsi, si un hackeur utilise une base de donn\\xE9es de passwords hach\\xE9s, il devra en plus trouver le bon \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"salt\"), \" pour que son attaque puisse fonctionner.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"salt round\"), \" : nombre de fois que l'op\\xE9ration de hachage est faite, rendant les attaques de force brute plus lente et donc difficile ; une valeur de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"10\"), \" semble \\xEAtre g\\xE9n\\xE9ralement raisonnable et recommend\\xE9e. \")), mdx(\"p\", null, \"Pour hacher sous Node.js, nous utiliserons la librairie \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/bcrypt\"\n  }, \"bcrypt\"), \".\"), mdx(\"p\", null, \"Veuillez installer la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bcrypt\"), \" au sein de votre nouveau projet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"safe\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i bcrypt\\n\")), mdx(\"p\", null, \"En r\\xE9sum\\xE9, nous allons utiliser :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"la fonction asynchrone \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"hash\")), \" de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"bcrypt\"), \" pour hacher un password ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"la fonction asynchrone \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"compare\")), \" de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"bcrypt\"), \" pour comparer un password en clair \\xE0 un password hach\\xE9 ; si le r\\xE9sultat est positif, cela signifie que le password fournit pour un utilisateur correspond au password initial.\")), mdx(\"p\", null, \"Nous pr\\xE9f\\xE9rons utiliser les librairies asynchrone afin de laisser l'API plus disponible \\xE0 g\\xE9rer des requ\\xEAtes clientes et pas bloquer celles-ci jusqu'\\xE0 la fin d'une op\\xE9ration de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bcrypt\"), \".\"), mdx(\"p\", null, \"Veuillez effacer le fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/data/users.json\"), \" contenant les credentials d'utilisateurs o\\xF9 les passwords ne sont pas hach\\xE9s.\"), mdx(\"p\", null, \"Nous allons maintenant mettre \\xE0 jour le mod\\xE8le de \\\"users\\\" pour utiliser \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bcrypt\"), \". Veuillez modifier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/models/users.js\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {2,9,17,21,25-26,42,46,70,73}\",\n    \"numbered\": true,\n    \"{2,9,17,21,25-26,42,46,70,73}\": true\n  }, \"const jwt = require('jsonwebtoken');\\nconst bcrypt = require('bcrypt');\\nconst path = require('node:path');\\nconst { parse, serialize } = require('../utils/json');\\n\\nconst jwtSecret = 'ilovemypizza!';\\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\\n\\nconst saltRounds = 10;\\n\\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\\n\\nconst defaultUsers = [\\n  {\\n    id: 1,\\n    username: 'admin',\\n    password: bcrypt.hashSync('admin', saltRounds),\\n  },\\n];\\n\\nasync function login(username, password) {\\n  const userFound = readOneUserFromUsername(username);\\n  if (!userFound) return undefined;\\n\\n  const passwordMatch = await bcrypt.compare(password, userFound.password);\\n  if (!passwordMatch) return undefined;\\n\\n  const token = jwt.sign(\\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\\n  );\\n\\n  const authenticatedUser = {\\n    username,\\n    token,\\n  };\\n\\n  return authenticatedUser;\\n}\\n\\nasync function register(username, password) {\\n  const userFound = readOneUserFromUsername(username);\\n  if (userFound) return undefined;\\n\\n  await createOneUser(username, password);\\n\\n  const token = jwt.sign(\\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\\n  );\\n\\n  const authenticatedUser = {\\n    username,\\n    token,\\n  };\\n\\n  return authenticatedUser;\\n}\\n\\nfunction readOneUserFromUsername(username) {\\n  const users = parse(jsonDbPath, defaultUsers);\\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\\n  if (indexOfUserFound < 0) return undefined;\\n\\n  return users[indexOfUserFound];\\n}\\n\\nasync function createOneUser(username, password) {\\n  const users = parse(jsonDbPath, defaultUsers);\\n\\n  const hashedPassword = await bcrypt.hash(password, saltRounds);\\n\\n  const createdUser = {\\n    id: getNextId(),\\n    username,\\n    password: hashedPassword,\\n  };\\n\\n  users.push(createdUser);\\n\\n  serialize(jsonDbPath, users);\\n\\n  return createdUser;\\n}\\n\\nfunction getNextId() {\\n  const users = parse(jsonDbPath, defaultUsers);\\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\\n  if (lastItemIndex === undefined) return 1;\\n  const lastId = users[lastItemIndex]?.id;\\n  const nextId = lastId + 1;\\n  return nextId;\\n}\\n\\nmodule.exports = {\\n  login,\\n  register,\\n  readOneUserFromUsername,\\n};\\n\")), mdx(\"p\", null, \"Voici les modifications apport\\xE9es :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour cr\\xE9er un password hash\\xE9 : on utilise la fonction asynchrone \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hash\"), \" pour cr\\xE9er le password hach\\xE9. D\\xE8s lors, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createOneUser\"), \" devient async. De plus, comme \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createOneUser\"), \" est devenue asynchrone, dans \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"register\"), \", pour cha\\xEEner le traitement de cr\\xE9ation du token, on met un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"await\"), \" \\xE0 l'appel de \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createOneUser\"), \". Et comme un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"await\"), \" est ajout\\xE9 au sein de \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"register\"), \", il faut mettre un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"async\"), \" \\xE0 la m\\xE9thode \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"register\"), \". Attention, du coup, comme \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"register\"), \" est devenue asynchrone, il faudra faire attention \\xE0 bien cha\\xEEner les traitements l\\xE0 o\\xF9 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"register\"), \" est appel\\xE9, dans le router \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"auths\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour v\\xE9rifier qu'un password match \\xE0 un password hach\\xE9 : on utilise la fonction asynchrone \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"compare\"), \" que l'on cha\\xEEne \\xE0 la cr\\xE9ation du token \\xE0 l'aide de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"await\"), \". D\\xE8s lors, la fonction \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"login\"), \" doit elle aussi \\xEAtre d\\xE9clar\\xE9e \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"async\"), \". Attention, du coup, comme \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"login\"), \" est devenue asynchrone, il faudra faire attention \\xE0 bien cha\\xEEner les traitements l\\xE0 o\\xF9 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"login\"), \" est appel\\xE9, dans le router \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"auths\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour cr\\xE9er l'utilisateur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"admin\"), \" se trouvant dans les \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"defaultUsers\"), \", on souhaite indiquer comme \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"password\"), \" le password hach\\xE9 correspondant au password \\\"admin\\\". Pour se simplifier la vie, on appelle la fonction synchrone \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hashSync\"), \" (voir ligne 16). Bien \\xE9videmment, dans une application plus robuste, on \\xE9vitera d'hardcoder ce genre de secrets dans les sources de notre application.\")), mdx(\"p\", null, \"Afin de traiter des deux fonctions du mod\\xE8le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users\"), \" qui sont devenues asynchrones, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"login\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"register\"), \", nous allons modifier le router \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/routes/auths\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"numbered {7,13,21,27}\",\n    \"numbered\": true,\n    \"{7,13,21,27}\": true\n  }, \"const express = require('express');\\nconst { register, login } = require('../models/users');\\n\\nconst router = express.Router();\\n\\n/* Register a user */\\nrouter.post('/register', async (req, res) => {\\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\\n\\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\\n\\n  const authenticatedUser = await register(username, password);\\n\\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\\n\\n  return res.json(authenticatedUser);\\n});\\n\\n/* Login a user */\\nrouter.post('/login', async (req, res) => {\\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\\n\\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\\n\\n  const authenticatedUser = await login(username, password);\\n\\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\\n\\n  return res.json(authenticatedUser);\\n});\\n\\nmodule.exports = router;\\n\")), mdx(\"p\", null, \"Nous avons simplement cha\\xEEn\\xE9 les r\\xE9ponses \\xE0 faire au client seulement une fois les op\\xE9ration \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"register\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"login\"), \" termin\\xE9es. Pour ce faire, nous avons pr\\xE9c\\xE9d\\xE9 le nom de ces m\\xE9thodes par \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"await\"), \". Nous avons donc du ajouter \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async\"), \" aux fonctions middleware s'occupant des routes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /auths/register\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST /auths/login\"), \".\"), mdx(\"p\", null, \"Veuillez v\\xE9rifier que votre application fonctionne correctement.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Via l'IHM, veuillez faire un register d'un nouvel utilisateur.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Au niveau de l'API, allez voir le contenu du nouveau fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/data/users.json\"), \". Les passwords devraient maintenant \\xEAtre hach\\xE9s, comme par exemple :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"[\\n  {\\n    \\\"id\\\": 1,\\n    \\\"username\\\": \\\"admin\\\",\\n    \\\"password\\\": \\\"$2b$10$RioLKlPFyYFEhv/46gR7dufDkke07eDpWH9tBt/A4Z9tJh0oJnnf2\\\"\\n  },\\n  {\\n    \\\"id\\\": 2,\\n    \\\"username\\\": \\\"manager\\\",\\n    \\\"password\\\": \\\"$2b$10$NZZ1zxOPdby6gl4Dw8K0Q.v4ZRWTbh1Ta7qcYzH5G4SrO5z71H0kO\\\"\\n  }\\n]\\n\")), mdx(\"p\", null, \"Si tout fonctionne bien, faites un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre repo (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") avec le message\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api-safe\"), \"\\\".\"), mdx(\"p\", null, \"En cas de souci, vous pouvez utiliser le code du tutoriel :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour le frontend : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/jwt-fetch\"\n  }, \"jwt-fetch\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pour l'API : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/safe\"\n  }, \"safe\"), \".\")), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"e\"\n  }), \" e) Exercice 7.2 : S\\xE9curisation de l'API de myMovies\"), mdx(\"p\", null, \"A l'exercice pr\\xE9c\\xE9dent (Exercice 7.1), vous avez d\\xE9velopp\\xE9 le m\\xE9canisme d'authentification et d'autorisation d'acc\\xE8s \\xE0 des op\\xE9ration de votre RESTful API g\\xE9rant des films.\"), mdx(\"p\", null, \"N\\xE9anmoins, cette API n'est pas encore s\\xE9curis\\xE9e. Les passwords sont disponibles en clair dans un fichier JSON et il est probable de faire des attaques XSS.\"), mdx(\"p\", null, \"Commencez par hacker votre site en faisant une injection de Javascript. Ce script \\\"malicieux\\\" affichera un pop-up \\xE0 chaque utilisateur affichant la liste des films ; ce pop-up sera suffisamment explicite pour que vos utilisateurs sachent qu'ils ont \\xE9t\\xE9 pirat\\xE9s.\"), mdx(\"p\", null, \"Ensuite, veuillez s\\xE9curiser l'API pour \\xE9chapper les caract\\xE8res dangereux et pour hacher les password.\"), mdx(\"p\", null, \"Afin de r\\xE9aliser cet exercice, voici les contraintes d'impl\\xE9mentation :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour le frontend, il n'y a rien \\xE0 d\\xE9velopper, veuillez ex\\xE9cuter  le contenu de votre r\\xE9pertoire d'exercices \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module7/7.1/hmi\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour l'API, utilisez le contenu de votre r\\xE9pertoire d'exercices \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module7/7.1/api\"), \" comme point de d\\xE9part pour cr\\xE9er, dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"web2\"), \"), le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/exercises/module7/7.2/api\"), \".\")), mdx(\"h4\", null, \"\\uD83E\\uDD1D Tips\"), mdx(\"p\", null, \"Cet exercice est l'application du tutoriel vu dans ce module-ci. N'h\\xE9sitez pas donc \\xE0 rejouer les \\xE9tapes vues dans le tutoriel au niveau de votre API : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#d\"\n  }, \"d) S\\xE9curisation de RESTful API\")), mdx(\"p\", null, \"Veuillez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 7 : safe api\"), \"\\\"\\\".\"), mdx(\"p\", null, \"NB : Le code de vos applications se trouve dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") dans le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module7/7.2/api\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"f\"\n  }), \" f) \\uD83C\\uDF6C Exercice 7.3 : Auto-refresh de myMovies\"), mdx(\"p\", null, \"S'il vous reste du temps, il serait vraiment int\\xE9ressant de faire en sorte que cycliquement, tous les 5 secondes par exemple, l'affichage de la liste de films se mette automatiquement \\xE0 jour.\"), mdx(\"p\", null, \"Ainsi, si d'autres utilisateurs ajoutent un film, vous les verrez directement appara\\xEEtre dans votre fen\\xEAtre.\"), mdx(\"p\", null, \"\\u26A1 Attention que si le composant d'affichage des films est utilis\\xE9 pour permettre de directement mettre \\xE0 jour un film, celui-ci ne doit pas se r\\xE9afficher si un utilisateur est en train de mettre \\xE0 jour un film.\"), mdx(\"h4\", null, \"\\uD83E\\uDD1D Tips\"), mdx(\"p\", null, \"Pensez \\xE0 la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"setInterval\")), \".\"), mdx(\"p\", null, \"Vous pouvez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 7 : auto-refresh\"), \"\\\"\\\".\"), mdx(\"p\", null, \"NB : Le code de vos applications se trouverait dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") dans le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module7/7.3/hmi\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"g\"\n  }), \" g) \\uD83C\\uDF6C Exercice 7.4 : Gestion de la navigation lors de l'auto-refresh de myMovies\"), mdx(\"p\", null, \"\\uD83D\\uDCAD Que peut-il se passer de d\\xE9sagr\\xE9able si un utilisateur passe rapidement de la page listant les informations d'un film vers la page d'ajout d'un film ?\"), mdx(\"p\", null, \"Comme le render de tous les films et une action asynchrone, il est possible que celui-ci soit r\\xE9alis\\xE9 apr\\xE8s que l'utilisateur ait quitt\\xE9 la page d'affichage des films. Cela peut \\xEAtre g\\xEAnant, car si vous \\xEAtes sur le composant pour ajouter un film, vous ne souhaitez pas que votre formulaire d'ajout d'un film soit remplac\\xE9, de mani\\xE8re erron\\xE9e, par la liste des films !\"), mdx(\"p\", null, \"Nous vous proposons d'impl\\xE9menter ces deux fonctions :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stopper les futurs appels de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch\"), \", les appels automatiques vers vos APIs (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"setInterval\"), \" et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"clearInterval\"), \") quand il y a un clic sur un lien ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stopper les appels de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fetch\"), \" en cours vers vos APIs quand il y a un clic sur un lien. En effet, si votre API doit renvoyer beaucoup de donn\\xE9es, notamment quand il y a des images \\xE0 communiquer, il est possible que cela prenne plusieurs secondes avant que l'API vous r\\xE9ponde.\")), mdx(\"h4\", null, \"\\uD83E\\uDD1D Tips\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pensez aux fonctions \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"setInterval\")), \" et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"clearInterval\")), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour stopper un fetch en cours, vous pouvez utiliser un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AbortControlller\"), \". Toute l'info est disponible sur la \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/AbortController\"\n  }, \"Documentation MDN\"), \".\")), mdx(\"p\", null, \"Vous pouvez faire un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commit\"), \" de votre code avec le message suivant :\\n\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"myMovies : module 7 : auto-refresh improved\"), \"\\\"\\\".\"), mdx(\"p\", null, \"NB : Le code de vos applications se trouverait dans votre repository local et\\nvotre web repository (normalement appel\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"web2\"), \") dans le r\\xE9pertoire nomm\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/exercises/module7/7.4/hmi\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/7.fr","frontmatter":{"title":"Module 7 : SPA & sécurisation","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"Sécurisation de SPA à l'aide d'authentification & autorisation JWT","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='512'%20viewBox='0%200%20512%20512'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M227%202a256%20256%200%201059%20509A256%20256%200%2000227%202m7%2054c-82%209-150%2068-172%20147l-2%208%20120%20121c116%20116%20121%20120%20124%20119%2021-4%2052-19%2074-35%2047-35%2079-98%2079-154v-6H329v36h44l43%201a167%20167%200%2001-97%20115l-8%203-105-105-105-105%203-8a165%20165%200%2001287-32l27-23a202%20202%200%2000-184-82M56%20267a200%20200%200%2000196%20189L56%20260v7'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='544'%20height='492'%20viewBox='0%200%20544%20492'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M146%207c-31%208-51%2035-50%2068%201%2015%203%2020%2023%2056a3456%203456%200%200090%20151%2053177%2053177%200%200182%20145c16%2029%2018%2031%2026%2039a66%2066%200%2000113-47c0-19-1-20-33-75l-28-49h52c56%200%2064%200%2075-4a67%2067%200%2000-2-127l-8-2-39-1h-39l17-30c22-38%2023-41%2023-59%200-13%200-15-2-22a66%2066%200%2000-110-25c-8%208-9%2010-35%2055l-28%2048-28-47c-27-46-28-48-36-56a64%2064%200%2000-63-18'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}}]}},"pageContext":{"slug":"/modules/7/"}},"staticQueryHashes":["1696221415","3028011774","3458129946","493526238","575455071"]}