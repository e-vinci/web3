{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/8/","result":{"data":{"mdx":{"id":"91079510-0bec-5b2e-a139-b25a39b4e77b","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Module 8 : GraphQL\",\n  \"description\": \"Module 8 : GraphQL\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 8 : GraphQL\"), mdx(\"p\", null, \"Voici les sujets trait\\xE9s :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#a\"\n  }, \"Serveur GraphQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#b\"\n  }, \"Client GraphQL avec React\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c\"\n  }, \"R\\xE9sum\\xE9\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c.1) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c1\"\n  }, \"Appolo Server (back - Node.js)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c.2) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#c2\"\n  }, \"Appolo Client (front - React)\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#d\"\n  }, \"\\uD83C\\uDF6C Pour s\\u2019entra\\xEEner un peu plus (optionnel)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#e\"\n  }, \"\\uD83C\\uDF6C Et si vous en voulez encore... (optionnel)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#f\"\n  }, \"Solution des exercices\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Voici les lectures qui sont r\\xE9f\\xE9renc\\xE9es dans ce module :\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://fullstackopen.com/en/part8/graph_ql_server\"\n  }, \"GraphQL-server\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://fullstackopen.com/en/part8/react_and_graph_ql\"\n  }, \"React and GraphQL\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\"))), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"a\"\n  }), \"a) Serveur GraphQL\"), mdx(\"p\", null, \"Veuillez lire le chapitre sur GraphQL et la cr\\xE9ation d'un serveur avec Appolo server : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fullstackopen.com/en/part8/graph_ql_server\"\n  }, \"GraphQL-server\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\")), mdx(\"p\", null, \"Cr\\xE9ez un dossier \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/exercises/module8/library-backend\"), \" dans votre repo local. C'est dans ce dossier que vous ferez tous les exercices de cette partie a).\"), mdx(\"p\", null, \"Faites les exercices 8.1 \\xE0 8.7 en n'oubliant pas de repartir du fichier de base donn\\xE9 (\\xE0 copier dans le dossier cr\\xE9\\xE9 pr\\xE9c\\xE9demment) : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fullstackopen.com/en/part8/graph_ql_server#exercises-8-1-8-7\"\n  }, \"Exercises 8.1-8.7\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\"), \".\"), mdx(\"p\", null, \"Pour vous simplifier la vie lors du d\\xE9veloppement, nous allons installer un petit outil qui va red\\xE9marrer automatiquement notre server Node.js d\\xE8s qu'on fait une modification dans notre code : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://nodemon.io/\"\n  }, \"Nodemon\"), \". Dans votre projet, \\xE9crivez la commande \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install --save-dev nodemon\"), \". Et dans votre \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \", ajoutez/modifiez le script start pour qu'il ressemble \\xE0 ceci : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"start\\\": \\\"nodemon library-backend.js\\\",\")), mdx(\"p\", null, \"Maintenant, lancez votre projet avec la commande : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm start\"), \", et observez que l'application est relanc\\xE9e automatiquement d\\xE8s qu'un changement est effectu\\xE9 dans le code.\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"b\"\n  }), \"b) Client GraphQL avec React\"), mdx(\"p\", null, \"Veuillez lire le chapitre sur l'int\\xE9gration d'un client GraphQL dans une application React : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fullstackopen.com/en/part8/react_and_graph_ql\"\n  }, \"React and GraphQL\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\")), mdx(\"p\", null, \"Faites les exercices 8.8 \\xE0 8.11 en n'oubliant pas de repartir du projet de base donn\\xE9 : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fullstackopen.com/en/part8/graph_ql_server#exercises-8-1-8-7\"\n  }, \"Exercises 8.1-8.7\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\"), \".\"), mdx(\"p\", null, \"Pour importer le projet, dans votre dossier \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/exercises/module8/\"), \" de votre repo local, faites un git clone du projet dans le dossier. Vous aurez alors deux dossiers dans \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/exercises/module8/\"), \" : un pour le front-end et un pour le back-end. N'oubliez pas de supprimer le dossier \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".git\"), \" du projet clon\\xE9, sinon vous aurez un repo dans un repo.\"), mdx(\"p\", null, \"Nous vous invitons \\xE0 extraire les querries GQL dans un fichier \\xE0 part. Celui-ci pourrait ressembler \\xE0 quelque-chose comme \\xE7a :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { gql } from '@apollo/client'\\n\\nconst ALL_PERSONS = gql`\\n  query {\\n    allPersons {\\n      name\\n      phone\\n      id\\n    }\\n  }\\n`\\n\\nexport { ALL_PERSONS }\\n\")), mdx(\"p\", null, \"Ceci nous permettra plus facilement de r\\xE9-utiliser des querries qui sont utilis\\xE9es \\xE0 plusieurs endroits.\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"c\"\n  }), \"c) R\\xE9sum\\xE9\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La philosophie de GraphQL est fort diff\\xE9rente du REST. En REST, on re\\xE7oit toute la ressource, m\\xEAme ce dont on n'a pas besoin, et si on veut des \\xE9l\\xE9ments \\\"imbriqu\\xE9s\\\", il faut les demander s\\xE9par\\xE9ment, ou faire une requ\\xEAte sp\\xE9cifique. En GraphQL, on re\\xE7oit uniquement ce qu'on demande, et on peut demander directement des \\xE9l\\xE9ments imbriqu\\xE9s.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lorsqu'on fait une Query GraphQL, par d\\xE9faut on ne re\\xE7oit rien, il faut explicitement demander ce qu'on veut recevoir.\")), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"c1\"\n  }), \" c.1) Appolo Server (back - Node.js)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"En REST avec express, on \\xE9crit une fonction JS qui sera ex\\xE9cut\\xE9e pour une requ\\xEAte (une fonction par requ\\xEAte). En GraphQL avec Appolo, on \\xE9crit plut\\xF4t des \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"resolvers\"), \" pour chaque \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"field\"), \" de chaque ressource, et des \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"mutations\"), \". Ceci nous permet, du c\\xF4t\\xE9 client de faire des requ\\xEAtes \\\"personnalis\\xE9es\\\" en fonction des besoins (on choisit ce qu'on r\\xE9cup\\xE8re).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"mutations\"), \" ont un nom et un certain nombre de param\\xE8tres. Ceci permet une lisibilit\\xE9 de l'API, mais implique \\xE9galement la n\\xE9cessit\\xE9 de r\\xE9fl\\xE9chir \\xE0 une mani\\xE8re de structurer/nommer les requ\\xEAtes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Appolo Server nous propose un outil pour parcourir la structure de l'API et construire des requ\\xEAtes facilement. Son usage est recommand\\xE9 pour construire nos requ\\xEAtes utilis\\xE9es c\\xF4t\\xE9 serveur.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Appolo Server s'occupe en grande partie de la gestion des erreurs, gr\\xE2ce aux \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sch\\xE9mas\"), \". Si le client ne respecte pas le sch\\xE9ma, ou le format des mutations, Appolo est capable de le d\\xE9tecter seul. On ne doit donc s'occuper que de la gestion des erreurs \\\"business\\\".\")), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"c1\"\n  }), \" c.1) Appolo Client (front - React)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Appolo Client met \\xE0 disposition un hook \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"useQuery()\"), \" qui permet d'ex\\xE9cuter une query \\xE0 la premi\\xE8re ex\\xE9cution du hook, et d'en r\\xE9cup\\xE9rer le r\\xE9sultat (\\xE9tat de chargement, donn\\xE9es...).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Un m\\xE9canisme de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"cache\"), \" permet de partager le r\\xE9sultat des requ\\xEAtes dans toute l'application, et donc d'\\xE9viter de refaire des requ\\xEAtes inutiles.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lors d'une \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"mutation\"), \", on peut d\\xE9finir une requ\\xEAte \\xE0 ex\\xE9cuter pour mettre \\xE0 jour le cache, et donc rafraichir les composants qui en d\\xE9pendent.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attention, la mise \\xE0 jour du cache est locale au client. Si plusieurs machines acc\\xE8dent \\xE0 l'application, et l'une d'elle fait une mutation, les autres ne seront pas au courant. Pour palier \\xE0 cela (pour autant que ce soit n\\xE9cessaire) on peut d\\xE9finir un \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pollInterval\"), \"\\\" pour une \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Query\"), \", ce qui va l'ex\\xE9cuter \\xE0 intervalle r\\xE9gulier, et donc mettre \\xE0 jour le cache si les donn\\xE9es ont chang\\xE9es sur le serveur.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L'\\xE9tat d'une application web est souvent compos\\xE9e d'\\xE9l\\xE9ments r\\xE9cup\\xE9r\\xE9s depuis le serveur. Appolo client s'occupant de cela, on ne doit plus utiliser \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"useState()\"), \" pour le stocker.\")), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"d\"\n  }), \"d) \\uD83C\\uDF6C Pour s\\u2019entra\\xEEner un peu plus (optionnel)\"), mdx(\"p\", null, \"Faites l'exercice 8.12 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fullstackopen.com/en/part8/react_and_graph_ql#exercises-8-8-8-12\"\n  }, \"Exercises 8.8-8.12\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"e\"\n  }), \"e) \\uD83C\\uDF6C Et si vous en voulez encore... (optionnel)\"), mdx(\"p\", null, \"N'h\\xE9sitez pas \\xE0 lire la fiche suivante et faire des exercices : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fullstackopen.com/en/part8/database_and_user_administration\"\n  }, \"Database and user administration\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/web3/references/#r1\"\n  }, \"[R.1]\"), \".\"), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"f\"\n  }), \" f) \\uD83C\\uDF6C Solution des exercices\"), mdx(\"p\", null, \"Une solution pour les exercices de ce module se trouvent ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gitlab.vinci.be/6i3-web3/2023-2024/module8.git\"\n  }, \"module8\"), \".\"), mdx(\"p\", null, \"Vous devez avoir un compte Vinci pour pouvoir y acc\\xE9der.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/8.fr","frontmatter":{"title":"Module 8 : GraphQL","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"Module 8 : GraphQL","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#683898","images":{"fallback":{"src":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#181818","images":{"fallback":{"src":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/d8efd/autocompletion.png","srcSet":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/d8efd/autocompletion.png 570w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/3df055edb9c0a06e37fec1309d96c61e/08f60/autocompletion.webp 570w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6964912280701754}},"base":"autocompletion.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/web3/static/1b27e491527e99eeac84485aef739cd3/7af5e/opinions.png","srcSet":"/web3/static/1b27e491527e99eeac84485aef739cd3/7af5e/opinions.png 363w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/1b27e491527e99eeac84485aef739cd3/f319a/opinions.webp 363w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.41597796143250687}},"base":"opinions.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/web3/static/4ac56fca29eee6cf101be55d24c59b72/79afd/scores.png","srcSet":"/web3/static/4ac56fca29eee6cf101be55d24c59b72/79afd/scores.png 287w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/4ac56fca29eee6cf101be55d24c59b72/c6f03/scores.webp 287w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.494773519163763}},"base":"scores.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/web3/static/24dee9cafd76e7c25dc74141c33450b2/e53ce/propDrilling.png","srcSet":"/web3/static/24dee9cafd76e7c25dc74141c33450b2/c0a68/propDrilling.png 750w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/8e03e/propDrilling.png 1080w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/e53ce/propDrilling.png 1128w","sizes":"100vw"},"sources":[{"srcSet":"/web3/static/24dee9cafd76e7c25dc74141c33450b2/6e63e/propDrilling.webp 750w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/fcd24/propDrilling.webp 1080w,\n/web3/static/24dee9cafd76e7c25dc74141c33450b2/9bf70/propDrilling.webp 1128w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7677304964539007}},"base":"propDrilling.png"}}]}},"pageContext":{"slug":"/modules/8/"}},"staticQueryHashes":["1696221415","3028011774","3458129946","493526238","501654901","575455071"]}